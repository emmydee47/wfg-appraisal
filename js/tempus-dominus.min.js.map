{"version":3,"sources":["./dist/tempus-dominus.js"],"names":["tempusDominus","$","luxon","core","_interopDefaultLegacy","e","default","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","Unit","$__default","luxon__namespace","DateTime","Date","constructor","super","arguments","this","locale","setLocale","value","convert","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","clone","year","month","hours","minutes","seconds","startOf","unit","undefined","setMilliseconds","setSeconds","setMinutes","setHours","manipulate","weekDay","setDate","setMonth","endOf","format","template","fromJSDate","toFormat","Intl","DateTimeFormat","isValid","getTime","isBefore","compare","valueOf","isAfter","isSame","isBetween","left","right","inclusivity","leftInclusivity","rightInclusivity","parts","dateStyle","timeStyle","formatToParts","filter","x","type","secondsFormatted","second","minutesFormatted","minute","hoursFormatted","hour","twelveHoursFormatted","hour12","meridiem","dateFormatted","week","startOfYear","getDay","Math","round","monthFormatted","setFullYear","TdError","Error","NAME","Namespace","version","dataKey","events","Events","key","change","update","error","show","hide","blur","focus","keyup","keydown","css","Css","widget","calendarHeader","switch","toolbar","noHighlight","sideBySide","previous","next","disabled","old","new","active","dateContainer","decadesContainer","decade","yearsContainer","monthsContainer","daysContainer","day","calendarWeeks","dayOfTheWeek","today","weekend","timeContainer","separator","clockContainer","hourContainer","minuteContainer","secondContainer","collapsing","collapse","inline","errorMessages","ErrorMessages","base","failedToSetInvalidDate","failedToParseInput","unexpectedOption","optionName","code","unexpectedOptions","join","unexpectedOptionValue","badValue","validOptions","typeMismatch","badType","expectedType","numbersOutOfRage","lower","upper","failedToParseDate","mustProvideElement","subscribeMismatch","conflictingConfiguration","message","dateString","console","warn","DefaultOptions","restrictions","minDate","maxDate","disabledDates","enabledDates","daysOfWeekDisabled","disabledTimeIntervals","disabledHours","enabledHours","display","icons","time","up","down","clear","close","viewMode","toolbarPlacement","keepOpen","buttons","components","calendar","decades","clock","useTwentyfourHour","inputFormat","stepping","useCurrent","defaultDate","localization","selectMonth","previousMonth","nextMonth","selectYear","previousYear","nextYear","selectDecade","previousDecade","nextDecade","previousCentury","nextCentury","pickHour","incrementHour","decrementHour","pickMinute","incrementMinute","decrementMinute","pickSecond","incrementSecond","decrementSecond","togglePeriod","selectTime","selectDate","dayViewHeaderFormat","keepInvalid","debug","allowInputToggle","viewDate","multipleDates","multipleDatesSeparator","promptTimeOnDateChange","promptTimeOnDateChangeTransitionDelay","DatePickerModes","name","className","step","Collapse","getTransitionDurationFromElement","element","transitionDuration","transitionDelay","window","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split","toggle","target","classList","contains","style","height","remove","add","timeOut","setTimeout","scrollHeight","getBoundingClientRect","offsetHeight","Actions","context","_context","do","action","_a","currentTarget","dataset","lastPicked","dates","_viewDate","manipulateAndSet","newDate","_validation","_setValue","lastPickedIndex","ActionTypes","_currentViewMode","_viewUpdate","_display","_showMode","pickerSwitch","_updateCalendarHeader","getAttribute","_minViewModeNumber","_options","selectDay","index","pickedIndex","_hasTime","selectHour","showClock","selectMinute","selectSecond","incrementHours","incrementMinutes","incrementSeconds","decrementHours","decrementMinutes","decrementSeconds","togglePicker","querySelectorAll","htmlElement","setAttribute","innerHTML","_iconTag","outerHTML","_update","popper","forceUpdate","querySelector","showHours","showMinutes","showSeconds","classToUse","getElementsByClassName","DateDisplay","_picker","container","document","createElement","append","_daysOfTheWeek","div","appendChild","i","switcher","parentElement","getElementsByTagName","innerDate","containerClone","innerText","classes","push","_unset","isPicked","row","htmlDivElement","weekday","MonthDisplay","Dates","_dates","picked","length","targetDate","find","getFormatByUnit","innerDateFormatted","map","indexOf","_triggerEvent","oldDate","isClear","getStartEndYear","factor","startYear","floor","noIndex","updateInput","_input","newValue","reason","splice","YearDisplay","_startYear","_endYear","DecadeDisplay","start","end","_startDecade","_endDecade","pickedYears","textContent","startDecadeYear","endDecadeYear","TimeDisplay","_grid","timesDiv","columns","top","middle","bottom","upIcon","downIcon","separatorColon","cloneNode","getSeparator","colon","divElement","button","HourDisplay","MinuteDisplay","secondDisplay","Display","_isVisible","_documentClickEvent","composedPath","includes","_element","_actionsClickEvent","_action","_dateDisplay","_monthDisplay","_yearDisplay","_decadeDisplay","_timeDisplay","_hourDisplay","_minuteDisplay","_secondDisplay","_widget","_popperInstance","isVisible","_hasDate","tries","direction","_buildWidget","body","createPopper","toggleElement","modifiers","options","offset","enabled","placement","addEventListener","max","min","datePickerMode","picker","showing","startsWith","removeEventListener","_dispose","parentNode","removeChild","dateView","_headTemplate","timeView","_toolbar","arrow","title","icon","iconClass","svg","DOMTokenList","prototype","apply","_rebuild","wasVisible","Validation","granularity","_isInDisabledDates","_isInEnabledDates","_isInDisabledHours","_isInEnabledHours","from","to","testDate","formattedDate","OptionConverter","_mergeOptions","providedOptions","mergeTo","newOptions","path","processKey","providedType","defaultType","dateTime","_dateConversion","_typeCheckNumberArray","_typeCheckDateArray","Array","isArray","valueObject","vk","subOptionName","keyOptions","substring","toString","spread","provided","mergeOption","copyTo","unsupportedOptions","flattenedOptions","_flattenDefaultOptions","errors","didYouMean","y","defaultOptionValue","hasOwnProperty","lastIndexOf","_dataToOptions","eData","DOMStringMap","dataOptions","objectToNormalized","object","lowered","toLowerCase","rabbitHole","optionSubgroup","keyOption","internalObject","optionsLower","_dateTypeCheck","JSON","stringify","converted","_flatback","deepKeys","t","pre","entries","flatMap","v","_validateConflcits","config","__proto__","TempusDominus","_subscribers","_isDisabled","_notifyChangeEventContext","_inputChangeEvent","parsedDate","numberingSystem","NumberFormat","resolvedOptions","fromFormat","toJSDate","_toggleClickEvent","_initializeOptions","_initializeInput","_initializeToggle","_toggle","updateOptions","reset","disable","enable","removeAttribute","subscribe","eventTypes","callbacks","callBackArray","returnArray","eventType","unsubscribe","_unsubscribe","bind","dispose","_b","event","_handleAfterChangeEvent","trigger","Event","dispatchEvent","CustomEvent","detail","jQuery","callback","publish","eventName","includeDataset","test","findIndex","tagName","query","tdTargetInput","tdTargetToggle","clearTimeout","_currentPromptTimeTimeout","jQueryInterface","option","argument","jQueryHandleThis","each","me","data","extend","isDateUpdateThroughDateOptionFromClientCode","ret","getSelectorFromElement","$element","$selector","selector","attr","fn","Constructor","noConflict","Popper"],"mappings":"AAAA,IAAIA,cAAiB,SAAUC,EAAGC,EAAOC,GACrC,aAEA,SAASC,EAAuBC,GAAK,OAAOA,GAAkB,iBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAAEC,QAAWD,GAE5G,SAASE,EAAkBF,GACvB,GAAIA,GAAKA,EAAEG,WAAY,OAAOH,EAC9B,IAAII,EAAIC,OAAOC,OAAO,MAetB,OAdIN,GACAK,OAAOE,KAAKP,GAAGQ,SAAQ,SAAUC,GAC7B,GAAU,YAANA,EAAiB,CACjB,IAAIC,EAAIL,OAAOM,yBAAyBX,EAAGS,GAC3CJ,OAAOO,eAAeR,EAAGK,EAAGC,EAAEG,IAAMH,EAAI,CACpCI,YAAY,EACZD,IAAK,WACD,OAAOb,EAAES,UAM7BL,EAAW,QAAIJ,EACRI,EAGX,IAGIW,EAHAC,EAA0BjB,EAAsBH,GAChDqB,EAAgCf,EAAkBL,IAGtD,SAAWkB,GACPA,EAAc,QAAI,UAClBA,EAAc,QAAI,UAClBA,EAAY,MAAI,QAChBA,EAAW,KAAI,OACfA,EAAY,MAAI,QAChBA,EAAW,KAAI,OANnB,CAOGA,IAASA,EAAO,KAKnB,MAAMG,iBAAiBC,KACnBC,cACIC,SAASC,WAITC,KAAKC,OAAS,UAMlBC,UAAUC,GAEN,OADAH,KAAKC,OAASE,EACPH,KAOXI,eAAeC,GACX,IAAKA,EACD,KAAM,qBACV,OAAO,IAAIV,SAASU,EAAKC,cAAeD,EAAKE,WAAYF,EAAKG,UAAWH,EAAKI,WAAYJ,EAAKK,aAAcL,EAAKM,aAAcN,EAAKO,mBAKzIC,YACI,OAAO,IAAIlB,SAASK,KAAKc,KAAMd,KAAKe,MAAOf,KAAKK,KAAML,KAAKgB,MAAOhB,KAAKiB,QAASjB,KAAKkB,QAASlB,KAAKY,mBAAmBV,UAAUF,KAAKC,QAQzIkB,QAAQC,GACJ,QAAmBC,IAAfrB,KAAKoB,GACL,KAAM,SAASA,kBACnB,OAAQA,GACJ,IAAK,UACDpB,KAAKsB,gBAAgB,GACrB,MACJ,IAAK,UACDtB,KAAKuB,WAAW,EAAG,GACnB,MACJ,IAAK,QACDvB,KAAKwB,WAAW,EAAG,EAAG,GACtB,MACJ,IAAK,OACDxB,KAAKyB,SAAS,EAAG,EAAG,EAAG,GACvB,MACJ,IAAK,UACDzB,KAAKmB,QAAQ3B,EAAKa,MAClBL,KAAK0B,WAAW,EAAI1B,KAAK2B,QAASnC,EAAKa,MACvC,MACJ,IAAK,QACDL,KAAKmB,QAAQ3B,EAAKa,MAClBL,KAAK4B,QAAQ,GACb,MACJ,IAAK,OACD5B,KAAKmB,QAAQ3B,EAAKa,MAClBL,KAAK6B,SAAS,EAAG,GAGzB,OAAO7B,KAQX8B,MAAMV,GACF,QAAmBC,IAAfrB,KAAKoB,GACL,KAAM,SAASA,kBACnB,OAAQA,GACJ,IAAK,UACDpB,KAAKsB,gBAAgB,KACrB,MACJ,IAAK,UACDtB,KAAKuB,WAAW,GAAI,KACpB,MACJ,IAAK,QACDvB,KAAKwB,WAAW,GAAI,GAAI,KACxB,MACJ,IAAK,OACDxB,KAAKyB,SAAS,GAAI,GAAI,GAAI,KAC1B,MACJ,IAAK,UACDzB,KAAKmB,QAAQ3B,EAAKa,MAClBL,KAAK0B,WAAW,EAAI1B,KAAK2B,QAASnC,EAAKa,MACvC,MACJ,IAAK,QACDL,KAAK8B,MAAMtC,EAAKa,MAChBL,KAAK0B,WAAW,EAAGlC,EAAKuB,OACxBf,KAAK4B,QAAQ,GACb,MACJ,IAAK,OACD5B,KAAK8B,MAAMtC,EAAKa,MAChBL,KAAK0B,WAAW,EAAGlC,EAAKsB,MACxBd,KAAK4B,QAAQ,GAGrB,OAAO5B,KASX0B,WAAWvB,EAAOiB,GACd,QAAmBC,IAAfrB,KAAKoB,GACL,KAAM,SAASA,kBAEnB,OADApB,KAAKoB,IAASjB,EACPH,KASX+B,OAAOC,EAAU/B,EAASD,KAAKC,QAC3B,MAAwB,iBAAb+B,EACAtC,EAAiBC,SAASsC,WAAWjC,MAAME,UAAUD,GAAQiC,SAASF,GAEtE,IAAIG,KAAKC,eAAenC,EAAQ+B,GAAUD,OAAO/B,MAMhEqC,cACI,OAAOrC,KAAKsC,WAActC,KAAKsC,UAQnCC,SAASC,EAASpB,GACd,IAAKA,EACD,OAAOpB,KAAKyC,UAAYD,EAAQC,UACpC,QAAmBpB,IAAfrB,KAAKoB,GACL,KAAM,SAASA,kBACnB,OAAQpB,KAAKa,MAAMM,QAAQC,GAAMqB,UAAYD,EAAQ3B,MAAMM,QAAQC,GAAMqB,UAQ7EC,QAAQF,EAASpB,GACb,IAAKA,EACD,OAAOpB,KAAKyC,UAAYD,EAAQC,UACpC,QAAmBpB,IAAfrB,KAAKoB,GACL,KAAM,SAASA,kBACnB,OAAQpB,KAAKa,MAAMM,QAAQC,GAAMqB,UAAYD,EAAQ3B,MAAMM,QAAQC,GAAMqB,UAQ7EE,OAAOH,EAASpB,GACZ,IAAKA,EACD,OAAOpB,KAAKyC,YAAcD,EAAQC,UACtC,QAAmBpB,IAAfrB,KAAKoB,GACL,KAAM,SAASA,kBAEnB,OADAoB,EAAU7C,SAASS,QAAQoC,GACnBxC,KAAKa,MAAMM,QAAQC,GAAMqB,YAAcD,EAAQrB,QAAQC,GAAMqB,UAUzEG,UAAUC,EAAMC,EAAO1B,EAAM2B,EAAc,MACvC,GAAI3B,QAAuBC,IAAfrB,KAAKoB,GACb,KAAM,SAASA,kBACnB,MAAM4B,EAAqC,MAAnBD,EAAY,GAC9BE,EAAsC,MAAnBF,EAAY,GACrC,OAAUC,EACJhD,KAAK0C,QAAQG,EAAMzB,IAClBpB,KAAKuC,SAASM,EAAMzB,MACtB6B,EACKjD,KAAKuC,SAASO,EAAO1B,IACpBpB,KAAK0C,QAAQI,EAAO1B,MACzB4B,EACIhD,KAAKuC,SAASM,EAAMzB,IACnBpB,KAAK0C,QAAQG,EAAMzB,MACrB6B,EACKjD,KAAK0C,QAAQI,EAAO1B,IACnBpB,KAAKuC,SAASO,EAAO1B,IAOxC8B,MAAMjD,EAASD,KAAKC,OAAQ+B,EAAW,CAAEmB,UAAW,OAAQC,UAAW,SACnE,MAAMF,EAAQ,GAKd,OAJA,IAAIf,KAAKC,eAAenC,EAAQ+B,GAC3BqB,cAAcrD,MACdsD,QAAQC,GAAiB,YAAXA,EAAEC,OAChBvE,SAASsE,GAAOL,EAAMK,EAAEC,MAAQD,EAAEpD,QAChC+C,EAKXhC,cACI,OAAOlB,KAAKW,aAKhBO,YAAYf,GACRH,KAAKuB,WAAWpB,GAKpBsD,uBAEI,OAAOzD,KAAK+B,OAAO,CAAE2B,OAAQ,YAKjCzC,cACI,OAAOjB,KAAKU,aAKhBO,YAAYd,GACRH,KAAKwB,WAAWrB,GAKpBwD,uBAEI,OAAO3D,KAAK+B,OAAO,CAAE6B,OAAQ,YAKjC5C,YACI,OAAOhB,KAAKS,WAKhBO,UAAUb,GACNH,KAAKyB,SAAStB,GAKlB0D,qBAEI,OAAO7D,KAAK+B,OAAO,CAAE+B,KAAM,YAK/BC,2BAKI,OAAO/D,KAAK+B,OAAO,CAAEiC,QAAQ,EAAMF,KAAM,YAQ7CG,SAAShE,EAASD,KAAKC,QACnB,OAAOD,KAAKgB,MAAQ,GAAK,KAAO,KAKpCX,WACI,OAAOL,KAAKQ,UAKhBH,SAASF,GACLH,KAAK4B,QAAQzB,GAKjB+D,oBACI,OAAOlE,KAAKK,KAAO,GAAK,IAAIL,KAAKK,OAAS,GAAGL,KAAKK,OAMtD8D,WACI,MAEMC,EAAc,IAAIxE,KAAKI,KAAKc,KAAM,EAAG,GAE3C,OADAsD,EAAYxC,QAAQwC,EAAY5D,WAFT,EAEwC4D,EAAYC,SAAW,IAC9EC,KAAKC,OAAOvE,KAAKyC,UAAY2B,EAAY3B,WAJpB,QAIyD,EAK1Fd,cACI,OAAO3B,KAAKqE,SAKhBtD,YACI,OAAOf,KAAKO,WAKhBQ,UAAUZ,GACNH,KAAK6B,SAAS1B,GAKlBqE,qBACI,OAAOxE,KAAKe,MAAQ,EAAI,GAAK,IAAIf,KAAKe,QAAU,GAAGf,KAAKe,QAK5DD,WACI,OAAOd,KAAKM,cAKhBQ,SAASX,GACLH,KAAKyE,YAAYtE,IAIzB,MAAMuE,gBAAgBC,OA0HtB,MAAMC,EAAO,iBA+Mb,MAAMC,WAENA,UAAUD,KAAOA,EAEjBC,UAAUC,QAnN+B,eAoNzCD,UAAUE,QApNyD,KAqNnEF,UAAUG,OAAS,IAjNnB,MAAMC,OACFpF,cACIG,KAAKkF,IAAM,MAKXlF,KAAKmF,OAAS,SAASnF,KAAKkF,MAK5BlF,KAAKoF,OAAS,SAASpF,KAAKkF,MAK5BlF,KAAKqF,MAAQ,QAAQrF,KAAKkF,MAK1BlF,KAAKsF,KAAO,OAAOtF,KAAKkF,MAKxBlF,KAAKuF,KAAO,OAAOvF,KAAKkF,MAGxBlF,KAAKwF,KAAO,OAAOxF,KAAKkF,MACxBlF,KAAKyF,MAAQ,QAAQzF,KAAKkF,MAC1BlF,KAAK0F,MAAQ,QAAQ1F,KAAKkF,MAC1BlF,KAAK2F,QAAU,UAAU3F,KAAKkF,QAiLtCL,UAAUe,IAAM,IA9KhB,MAAMC,IACFhG,cAIIG,KAAK8F,OAAS,GAAGlB,WAIjB5E,KAAK+F,eAAiB,kBAItB/F,KAAKgG,OAAS,gBAIdhG,KAAKiG,QAAU,UAIfjG,KAAKkG,YAAc,eAInBlG,KAAKmG,WAAa,iBAIlBnG,KAAKoG,SAAW,WAIhBpG,KAAKqG,KAAO,OAKZrG,KAAKsG,SAAW,WAKhBtG,KAAKuG,IAAM,MAKXvG,KAAKwG,IAAM,MAIXxG,KAAKyG,OAAS,SAKdzG,KAAK0G,cAAgB,iBAIrB1G,KAAK2G,iBAAmB,GAAG3G,KAAK0G,wBAIhC1G,KAAK4G,OAAS,SAId5G,KAAK6G,eAAiB,GAAG7G,KAAK0G,sBAI9B1G,KAAKc,KAAO,OAIZd,KAAK8G,gBAAkB,GAAG9G,KAAK0G,uBAI/B1G,KAAKe,MAAQ,QAIbf,KAAK+G,cAAgB,GAAG/G,KAAK0G,qBAI7B1G,KAAKgH,IAAM,MAKXhH,KAAKiH,cAAgB,KAIrBjH,KAAKkH,aAAe,MAIpBlH,KAAKmH,MAAQ,QAIbnH,KAAKoH,QAAU,UAMfpH,KAAKqH,cAAgB,iBAIrBrH,KAAKsH,UAAY,YAIjBtH,KAAKuH,eAAiB,GAAGvH,KAAKqH,sBAI9BrH,KAAKwH,cAAgB,GAAGxH,KAAKqH,qBAI7BrH,KAAKyH,gBAAkB,GAAGzH,KAAKqH,uBAI/BrH,KAAK0H,gBAAkB,GAAG1H,KAAKqH,uBAI/BrH,KAAK8D,KAAO,OAIZ9D,KAAK4D,OAAS,SAId5D,KAAK0D,OAAS,SAMd1D,KAAKsF,KAAO,OAKZtF,KAAK2H,WAAa,gBAIlB3H,KAAK4H,SAAW,cAKhB5H,KAAK6H,OAAS,WAWtBhD,UAAUiD,cAAgB,IA/U1B,MAAMC,cACFlI,cACIG,KAAKgI,KAAO,MAOZhI,KAAKiI,uBAAyB,6BAK9BjI,KAAKkI,mBAAqB,2BAQ9BC,iBAAiBC,GACb,MAAM/C,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,2BAA2BI,oCAE7D,MADA/C,EAAMgD,KAAO,EACPhD,EAMViD,kBAAkBF,GACd,MAAM/C,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,SAASI,EAAWG,KAAK,SAE3D,MADAlD,EAAMgD,KAAO,EACPhD,EAUVmD,sBAAsBJ,EAAYK,EAAUC,GACxC,MAAMrD,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,iCAAiCI,iCAA0CK,yBAAgCC,EAAaH,KAAK,SAE/J,MADAlD,EAAMgD,KAAO,EACPhD,EAUVsD,aAAaP,EAAYQ,EAASC,GAC9B,MAAMxD,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,wBAAwBI,mBAA4BQ,6BAAmCC,KAEzH,MADAxD,EAAMgD,KAAO,EACPhD,EASVyD,iBAAiBV,EAAYW,EAAOC,GAChC,MAAM3D,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,QAAQI,yCAAkDW,SAAaC,MAEzG,MADA3D,EAAMgD,KAAO,EACPhD,EAQV4D,kBAAkBb,EAAY/H,GAC1B,MAAMgF,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,mCAAmC3H,oBAAuB+H,MAE5F,MADA/C,EAAMgD,KAAO,EACPhD,EAKV6D,qBACI,MAAM7D,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,iCAElC,MADA3C,EAAMgD,KAAO,EACPhD,EAMV8D,oBACI,MAAM9D,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,qEAElC,MADA3C,EAAMgD,KAAO,EACPhD,EAKV+D,yBAAyBC,GACrB,MAAMhE,EAAQ,IAAIX,QAAQ,GAAG1E,KAAKgI,2DAA2DqB,KAE7F,MADAhE,EAAMgD,KAAO,EACPhD,EAMViE,aACIC,QAAQC,KAAK,GAAGxJ,KAAKgI,+FA8N7B,MAAMyB,EAAiB,CACnBC,aAAc,CACVC,aAAStI,EACTuI,aAASvI,EACTwI,cAAe,GACfC,aAAc,GACdC,mBAAoB,GACpBC,sBAAuB,GACvBC,cAAe,GACfC,aAAc,IAElBC,QAAS,CACLC,MAAO,CACH5G,KAAM,QACN6G,KAAM,eACNhK,KAAM,kBACNiK,GAAI,kBACJC,KAAM,oBACNnE,SAAU,sBACVC,KAAM,uBACNc,MAAO,wBACPqD,MAAO,eACPC,MAAO,gBAEXtE,YAAY,EACZc,eAAe,EACfyD,SAAU,WACVC,iBAAkB,SAClBC,UAAU,EACVC,QAAS,CACL1D,OAAO,EACPqD,OAAO,EACPC,OAAO,GAEXK,WAAY,CACRC,UAAU,EACV1K,MAAM,EACNU,OAAO,EACPD,MAAM,EACNkK,SAAS,EACTC,OAAO,EACPjK,OAAO,EACPC,SAAS,EACTC,SAAS,EACTgK,mBAAmB,GAEvBC,iBAAa9J,EACbwG,QAAQ,GAEZuD,SAAU,EACVC,YAAY,EACZC,iBAAajK,EACbkK,aAAc,CACVpE,MAAO,cACPqD,MAAO,kBACPC,MAAO,mBACPe,YAAa,eACbC,cAAe,iBACfC,UAAW,aACXC,WAAY,cACZC,aAAc,gBACdC,SAAU,YACVC,aAAc,gBACdC,eAAgB,kBAChBC,WAAY,cACZC,gBAAiB,mBACjBC,YAAa,eACbC,SAAU,YACVC,cAAe,iBACfC,cAAe,iBACfC,WAAY,cACZC,gBAAiB,mBACjBC,gBAAiB,mBACjBC,WAAY,cACZC,gBAAiB,mBACjBC,gBAAiB,mBACjBC,aAAc,gBACdC,WAAY,cACZC,WAAY,cACZC,oBAAqB,OACrB9M,OAAQ,WAEZ+M,aAAa,EACbC,OAAO,EACPC,kBAAkB,EAClBC,SAAU,IAAIxN,SACdyN,eAAe,EACfC,uBAAwB,KACxBC,wBAAwB,EACxBC,sCAAuC,KAErCC,EAAkB,CACpB,CACIC,KAAM,WACNC,UAAW7I,UAAUe,IAAImB,cACzB3F,KAAM5B,EAAKuB,MACX4M,KAAM,GAEV,CACIF,KAAM,SACNC,UAAW7I,UAAUe,IAAIkB,gBACzB1F,KAAM5B,EAAKsB,KACX6M,KAAM,GAEV,CACIF,KAAM,QACNC,UAAW7I,UAAUe,IAAIiB,eACzBzF,KAAM5B,EAAKsB,KACX6M,KAAM,IAEV,CACIF,KAAM,UACNC,UAAW7I,UAAUe,IAAIe,iBACzBvF,KAAM5B,EAAKsB,KACX6M,KAAM,MAOd,MAAMC,SACF/N,cAMIG,KAAK6N,iCAAoCC,IACrC,IAAKA,EACD,OAAO,EAGX,IAAIC,mBAAEA,EAAkBC,gBAAEA,GAAoBC,OAAOC,iBAAiBJ,GACtE,MAAMK,EAA0BC,OAAOC,WAAWN,GAC5CO,EAAuBF,OAAOC,WAAWL,GAE/C,OAAKG,GAA4BG,GAIjCP,EAAqBA,EAAmBQ,MAAM,KAAK,GACnDP,EAAkBA,EAAgBO,MAAM,KAAK,GAGzC,KAFKH,OAAOC,WAAWN,GACvBK,OAAOC,WAAWL,KANX,GAcnBQ,OAAOC,GACCA,EAAOC,UAAUC,SAAS9J,UAAUe,IAAIN,MACxCtF,KAAKuF,KAAKkJ,GAGVzO,KAAKsF,KAAKmJ,GAOlBnJ,KAAKmJ,GACD,GAAIA,EAAOC,UAAUC,SAAS9J,UAAUe,IAAI+B,aACxC8G,EAAOC,UAAUC,SAAS9J,UAAUe,IAAIN,MACxC,OAOJmJ,EAAOG,MAAMC,OAAS,IACtBJ,EAAOC,UAAUI,OAAOjK,UAAUe,IAAIgC,UACtC6G,EAAOC,UAAUK,IAAIlK,UAAUe,IAAI+B,YACnC3H,KAAKgP,QAAUC,YATE,KACbR,EAAOC,UAAUI,OAAOjK,UAAUe,IAAI+B,YACtC8G,EAAOC,UAAUK,IAAIlK,UAAUe,IAAIgC,SAAU/C,UAAUe,IAAIN,MAC3DmJ,EAAOG,MAAMC,OAAS,GACtB7O,KAAKgP,QAAU,OAKiBhP,KAAK6N,iCAAiCY,IAC1EA,EAAOG,MAAMC,OAAS,GAAGJ,EAAOS,iBAMpC3J,KAAKkJ,GACD,GAAIA,EAAOC,UAAUC,SAAS9J,UAAUe,IAAI+B,cACvC8G,EAAOC,UAAUC,SAAS9J,UAAUe,IAAIN,MACzC,OAMJmJ,EAAOG,MAAMC,OAAS,GAAGJ,EAAOU,wBAAgC,WAEzDV,EAD6BW,aAEpCX,EAAOC,UAAUI,OAAOjK,UAAUe,IAAIgC,SAAU/C,UAAUe,IAAIN,MAC9DmJ,EAAOC,UAAUK,IAAIlK,UAAUe,IAAI+B,YACnC8G,EAAOG,MAAMC,OAAS,GACtB7O,KAAKgP,QAAUC,YAXE,KACbR,EAAOC,UAAUI,OAAOjK,UAAUe,IAAI+B,YACtC8G,EAAOC,UAAUK,IAAIlK,UAAUe,IAAIgC,UACnC5H,KAAKgP,QAAU,OAQiBhP,KAAK6N,iCAAiCY,KAOlF,MAAMY,QACFxP,YAAYyP,GACRtP,KAAKuP,SAAWD,EAChBtP,KAAK4H,SAAW,IAAIgG,SAOxB4B,GAAG/Q,EAAGgR,GACF,IAAIC,EACJ,MAAMC,EAAgBlR,EAAEkR,cACxB,GAAIA,EAAcjB,UAAUC,SAAS9J,UAAUe,IAAIU,UAC/C,OAAO,EACXmJ,EAASA,GAAUE,EAAcC,QAAQH,OACzC,MAAMI,GAAc7P,KAAKuP,SAASO,MAAMD,YAAc7P,KAAKuP,SAASQ,WAAWlP,MAMzEmP,EAAmB,CAAC5O,EAAMjB,EAAQ,KACpC,MAAM8P,EAAUJ,EAAWnO,WAAWvB,EAAOiB,GACzCpB,KAAKuP,SAASW,YAAY7N,QAAQ4N,EAAS7O,IAC3CpB,KAAKuP,SAASO,MAAMK,UAAUF,EAASjQ,KAAKuP,SAASO,MAAMM,kBAGnE,OAAQX,GACJ,KAAKY,EAAYhK,KACjB,KAAKgK,EAAYjK,SACb,MAAMhF,KAAEA,EAAIuM,KAAEA,GAASH,EAAgBxN,KAAKuP,SAASe,kBACjDb,IAAWY,EAAYhK,KACvBrG,KAAKuP,SAASQ,UAAUrO,WAAWiM,EAAMvM,GAEzCpB,KAAKuP,SAASQ,UAAUrO,YAAmB,EAARiM,EAAWvM,GAClDpB,KAAKuP,SAASgB,YAAYnP,GAC1BpB,KAAKuP,SAASiB,SAASC,YACvB,MACJ,KAAKJ,EAAYK,aACb1Q,KAAKuP,SAASiB,SAASC,UAAU,GACjCzQ,KAAKuP,SAASgB,YAAY/C,EAAgBxN,KAAKuP,SAASe,kBAAkBlP,MAC1EpB,KAAKuP,SAASiB,SAASG,wBACvB,MACJ,KAAKN,EAAY7E,YACjB,KAAK6E,EAAY1E,WACjB,KAAK0E,EAAYvE,aACb,MAAM3L,GAASwP,EAAciB,aAAa,cAC1C,OAAQnB,GACJ,KAAKY,EAAY7E,YACbxL,KAAKuP,SAASQ,UAAUhP,MAAQZ,EAChCH,KAAKuP,SAASgB,YAAY/Q,EAAKuB,OAC/B,MACJ,KAAKsP,EAAY1E,WAIjB,KAAK0E,EAAYvE,aACb9L,KAAKuP,SAASQ,UAAUjP,KAAOX,EAC/BH,KAAKuP,SAASgB,YAAY/Q,EAAKsB,MAGnCd,KAAKuP,SAASe,mBAAqBtQ,KAAKuP,SAASsB,oBACjD7Q,KAAKuP,SAASO,MAAMK,UAAUnQ,KAAKuP,SAASQ,UAAW/P,KAAKuP,SAASO,MAAMM,iBACtEpQ,KAAKuP,SAASuB,SAAS3G,QAAQtC,QAChC7H,KAAKuP,SAASiB,SAASjL,QAI3BvF,KAAKuP,SAASiB,SAASC,WAAW,GAEtC,MACJ,KAAKJ,EAAYU,UACb,MAAM/J,EAAMhH,KAAKuP,SAASQ,UAAUlP,MAChC8O,EAAcjB,UAAUC,SAAS9J,UAAUe,IAAIW,MAC/CS,EAAItF,YAAY,EAAGlC,EAAKuB,OAExB4O,EAAcjB,UAAUC,SAAS9J,UAAUe,IAAIY,MAC/CQ,EAAItF,WAAW,EAAGlC,EAAKuB,OAE3BiG,EAAI3G,MAAQsP,EAAciB,aAAa,YACvC,IAAII,EAAQ,EACRhR,KAAKuP,SAASuB,SAAS1D,eACvB4D,EAAQhR,KAAKuP,SAASO,MAAMmB,YAAYjK,EAAKxH,EAAKa,OACnC,IAAX2Q,EACAhR,KAAKuP,SAASO,MAAMK,UAAU,KAAMa,GAGpChR,KAAKuP,SAASO,MAAMK,UAAUnJ,EAAKhH,KAAKuP,SAASO,MAAMM,gBAAkB,IAI7EpQ,KAAKuP,SAASO,MAAMK,UAAUnJ,EAAKhH,KAAKuP,SAASO,MAAMM,iBAEtDpQ,KAAKuP,SAASiB,SAASU,UACvBlR,KAAKuP,SAASuB,SAAS3G,QAAQS,UAC/B5K,KAAKuP,SAASuB,SAAS3G,QAAQtC,QAC/B7H,KAAKuP,SAASuB,SAAS1D,eACxBpN,KAAKuP,SAASiB,SAASjL,OAE3B,MACJ,KAAK8K,EAAYc,WACb,IAAIrN,GAAQ6L,EAAciB,aAAa,cACnCf,EAAW7O,OAAS,KACpB8C,GAAQ,IACZ+L,EAAW7O,MAAQ8C,EACnB9D,KAAKuP,SAASO,MAAMK,UAAUN,EAAY7P,KAAKuP,SAASO,MAAMM,kBAC1DpQ,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWI,mBACzClL,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW7J,SAC1CjB,KAAKuP,SAASuB,SAAS3G,QAAQS,UAC/B5K,KAAKuP,SAASuB,SAAS3G,QAAQtC,OAIhC7H,KAAKwP,GAAG/Q,EAAG4R,EAAYe,WAHvBpR,KAAKuP,SAASiB,SAASjL,OAK3B,MACJ,KAAK8K,EAAYgB,aACbxB,EAAW5O,SAAW0O,EAAciB,aAAa,cACjD5Q,KAAKuP,SAASO,MAAMK,UAAUN,EAAY7P,KAAKuP,SAASO,MAAMM,kBAC1DpQ,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWI,mBACzClL,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW5J,SAC1ClB,KAAKuP,SAASuB,SAAS3G,QAAQS,UAC/B5K,KAAKuP,SAASuB,SAAS3G,QAAQtC,OAIhC7H,KAAKwP,GAAG/Q,EAAG4R,EAAYe,WAHvBpR,KAAKuP,SAASiB,SAASjL,OAK3B,MACJ,KAAK8K,EAAYiB,aACbzB,EAAW3O,SAAWyO,EAAciB,aAAa,cACjD5Q,KAAKuP,SAASO,MAAMK,UAAUN,EAAY7P,KAAKuP,SAASO,MAAMM,kBAC1DpQ,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWI,mBACzClL,KAAKuP,SAASuB,SAAS3G,QAAQS,UAC/B5K,KAAKuP,SAASuB,SAAS3G,QAAQtC,OAIhC7H,KAAKwP,GAAG/Q,EAAG4R,EAAYe,WAHvBpR,KAAKuP,SAASiB,SAASjL,OAK3B,MACJ,KAAK8K,EAAYkB,eACbvB,EAAiBxQ,EAAKwB,OACtB,MACJ,KAAKqP,EAAYmB,iBACbxB,EAAiBxQ,EAAKyB,QAASjB,KAAKuP,SAASuB,SAAS1F,UACtD,MACJ,KAAKiF,EAAYoB,iBACbzB,EAAiBxQ,EAAK0B,SACtB,MACJ,KAAKmP,EAAYqB,eACb1B,EAAiBxQ,EAAKwB,OAAQ,GAC9B,MACJ,KAAKqP,EAAYsB,iBACb3B,EAAiBxQ,EAAKyB,SAA4C,EAAnCjB,KAAKuP,SAASuB,SAAS1F,UACtD,MACJ,KAAKiF,EAAYuB,iBACb5B,EAAiBxQ,EAAK0B,SAAU,GAChC,MACJ,KAAKmP,EAAYzD,aACboD,EAAiBxQ,EAAKwB,OAAkD,QAAzC0O,EAAK1P,KAAKuP,SAASO,MAAMD,kBAA+B,IAAPH,OAAgB,EAASA,EAAG1O,QAAU,IAAM,GAAK,IAEjI,MACJ,KAAKqP,EAAYwB,aACb7R,KAAKuP,SAASiB,SAAS1K,OAClBgM,iBAAiB,IAAIjN,UAAUe,IAAIc,mBAAmB7B,UAAUe,IAAIyB,iBACpEpI,SAAS8S,GAAgB/R,KAAK4H,SAAS4G,OAAOuD,KAC/CpC,EAAciB,aAAa,WAC3B5Q,KAAKuP,SAASuB,SAASvF,aAAauB,YACpC6C,EAAcqC,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAasB,YACxE8C,EAAcsC,UAAYjS,KAAKuP,SAASiB,SAAS0B,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAMC,MAAM8H,UACrGnS,KAAKuP,SAASiB,SAASG,0BAGvBhB,EAAcqC,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAauB,YACxE6C,EAAcsC,UAAYjS,KAAKuP,SAASiB,SAAS0B,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAM/J,MAAM8R,UACrGnS,KAAKwP,GAAG/Q,EAAG4R,EAAYe,WACvBpR,KAAKuP,SAASiB,SAAS4B,QAAQ,UAEnCnD,YAAW,IAAMjP,KAAKuP,SAASiB,SAAS6B,OAAOC,eAAetS,KAAK4H,SAASiG,iCAAiC7N,KAAKuP,SAASiB,SAAS1K,OAAOyM,cAAc,oBACzJ,MACJ,KAAKlC,EAAYe,UACjB,KAAKf,EAAYmC,UACjB,KAAKnC,EAAYoC,YACjB,KAAKpC,EAAYqC,YACb1S,KAAKuP,SAASiB,SAAS1K,OAClBgM,iBAAiB,IAAIjN,UAAUe,IAAIyB,uBACnCpI,SAAS8S,GAAiBA,EAAYnD,MAAMzE,QAAU,SAC3D,IAAIwI,EAAa,GACjB,OAAQlD,GACJ,KAAKY,EAAYe,UACbuB,EAAa9N,UAAUe,IAAI2B,eAC3BvH,KAAKuP,SAASiB,SAAS4B,QAAQ,SAC/B,MACJ,KAAK/B,EAAYmC,UACbG,EAAa9N,UAAUe,IAAI4B,cAC3BxH,KAAKuP,SAASiB,SAAS4B,QAAQ5S,EAAKwB,OACpC,MACJ,KAAKqP,EAAYoC,YACbE,EAAa9N,UAAUe,IAAI6B,gBAC3BzH,KAAKuP,SAASiB,SAAS4B,QAAQ5S,EAAKyB,SACpC,MACJ,KAAKoP,EAAYqC,YACbC,EAAa9N,UAAUe,IAAI8B,gBAC3B1H,KAAKuP,SAASiB,SAAS4B,QAAQ5S,EAAK0B,SAG3ClB,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuBD,GAAY,GAAI/D,MAAMzE,QAAU,OACtF,MACJ,KAAKkG,EAAY7F,MACbxK,KAAKuP,SAASO,MAAMK,UAAU,MAC9BnQ,KAAKuP,SAASiB,SAASG,wBACvB,MACJ,KAAKN,EAAY5F,MACbzK,KAAKuP,SAASiB,SAASjL,OACvB,MACJ,KAAK8K,EAAYlJ,MACb,MAAMA,GAAQ,IAAIxH,UAAWO,UAAUF,KAAKuP,SAASuB,SAASvF,aAAatL,QAC3ED,KAAKuP,SAASQ,UAAY5I,EACtBnH,KAAKuP,SAASW,YAAY7N,QAAQ8E,EAAO3H,EAAKa,OAC9CL,KAAKuP,SAASO,MAAMK,UAAUhJ,EAAOnH,KAAKuP,SAASO,MAAMM,mBAK7E,IAAIC,GACJ,SAAWA,GACPA,EAAkB,KAAI,OACtBA,EAAsB,SAAI,WAC1BA,EAA0B,aAAI,eAC9BA,EAAyB,YAAI,cAC7BA,EAAwB,WAAI,aAC5BA,EAA0B,aAAI,eAC9BA,EAAuB,UAAI,YAC3BA,EAAwB,WAAI,aAC5BA,EAA0B,aAAI,eAC9BA,EAA0B,aAAI,eAC9BA,EAA4B,eAAI,iBAChCA,EAA8B,iBAAI,mBAClCA,EAA8B,iBAAI,mBAClCA,EAA4B,eAAI,iBAChCA,EAA8B,iBAAI,mBAClCA,EAA8B,iBAAI,mBAClCA,EAA0B,aAAI,eAC9BA,EAA0B,aAAI,eAC9BA,EAAuB,UAAI,YAC3BA,EAAuB,UAAI,YAC3BA,EAAyB,YAAI,cAC7BA,EAAyB,YAAI,cAC7BA,EAAmB,MAAI,QACvBA,EAAmB,MAAI,QACvBA,EAAmB,MAAI,QAzB3B,CA0BGA,IAAgBA,EAAc,KAKjC,MAAMwC,YACFhT,YAAYyP,GACRtP,KAAKuP,SAAWD,EAMpBwD,cACI,MAAMC,EAAYC,SAASC,cAAc,OAGzC,GAFAF,EAAUrE,UAAUK,IAAIlK,UAAUe,IAAImB,eACtCgM,EAAUG,UAAUlT,KAAKmT,kBACrBnT,KAAKuP,SAASuB,SAAS3G,QAAQlD,cAAe,CAC9C,MAAMmM,EAAMJ,SAASC,cAAc,OACnCG,EAAI1E,UAAUK,IAAIlK,UAAUe,IAAIqB,cAAepC,UAAUe,IAAIM,aAC7D6M,EAAUM,YAAYD,GAE1B,IAAK,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAU,IAANA,GAAWA,EAAI,GAAM,GACjBtT,KAAKuP,SAASuB,SAAS3G,QAAQlD,cAAe,CAC9C,MAAMmM,EAAMJ,SAASC,cAAc,OACnCG,EAAI1E,UAAUK,IAAIlK,UAAUe,IAAIqB,cAAepC,UAAUe,IAAIM,aAC7D6M,EAAUM,YAAYD,GAG9B,MAAMA,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAYU,WAC5CgC,EAAUM,YAAYD,GAE1B,OAAOL,EAMXX,UACI,MAAMW,EAAY/S,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuB/N,UAAUe,IAAImB,eAAe,IAC7FX,EAAUmN,EAAUlN,GAAQ0M,EAAUS,cACxCZ,uBAAuB/N,UAAUe,IAAIG,gBAAgB,GACrD0N,qBAAqB,OAC1BF,EAASvB,aAAanN,UAAUe,IAAImB,cAAe/G,KAAKuP,SAASQ,UAAUhO,OAAO,CAC9EhB,MAAOf,KAAKuP,SAASuB,SAASvF,aAAawB,uBAE/C/M,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,YAAY,EAAGlC,EAAKuB,OAAQvB,EAAKuB,OAC3FqF,EAASsI,UAAUI,OAAOjK,UAAUe,IAAIU,UACxCF,EAASsI,UAAUK,IAAIlK,UAAUe,IAAIU,UAC3CtG,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,WAAW,EAAGlC,EAAKuB,OAAQvB,EAAKuB,OAC1FsF,EAAKqI,UAAUI,OAAOjK,UAAUe,IAAIU,UACpCD,EAAKqI,UAAUK,IAAIlK,UAAUe,IAAIU,UACvC,IAAIoN,EAAY1T,KAAKuP,SAASQ,UAAUlP,MACnCM,QAAQ3B,EAAKuB,OACbI,QAAQ,WACRO,WAAW,GAAIlC,EAAKwB,OACzB+R,EACKjB,iBAAiB,iBAAiBzB,EAAYU,iBAAiBlM,UAAUe,IAAIqB,iBAC7EhI,SAAQ,CAAC0U,EAAgB3C,KAC1B,GAAIhR,KAAKuP,SAASuB,SAAS3G,QAAQlD,eAC/B0M,EAAejF,UAAUC,SAAS9J,UAAUe,IAAIqB,eAAgB,CAChE,GAAiC,MAA7B0M,EAAeC,UACf,OAEJ,YADAD,EAAeC,UAAY,GAAGF,EAAUvP,QAG5C,IAAI0P,EAAU,GACdA,EAAQC,KAAKjP,UAAUe,IAAIoB,KACvB0M,EAAUnR,SAASvC,KAAKuP,SAASQ,UAAWvQ,EAAKuB,QACjD8S,EAAQC,KAAKjP,UAAUe,IAAIW,KAE3BmN,EAAUhR,QAAQ1C,KAAKuP,SAASQ,UAAWvQ,EAAKuB,QAChD8S,EAAQC,KAAKjP,UAAUe,IAAIY,MAE1BxG,KAAKuP,SAASwE,QACf/T,KAAKuP,SAASO,MAAMkE,SAASN,EAAWlU,EAAKa,OAC7CwT,EAAQC,KAAKjP,UAAUe,IAAIa,QAE1BzG,KAAKuP,SAASW,YAAY7N,QAAQqR,EAAWlU,EAAKa,OACnDwT,EAAQC,KAAKjP,UAAUe,IAAIU,UAE3BoN,EAAU/Q,OAAO,IAAIhD,SAAYH,EAAKa,OACtCwT,EAAQC,KAAKjP,UAAUe,IAAIuB,OAEL,IAAtBuM,EAAU/R,SAAuC,IAAtB+R,EAAU/R,SACrCkS,EAAQC,KAAKjP,UAAUe,IAAIwB,SAE/BuM,EAAejF,UAAUI,UAAU6E,EAAejF,WAClDiF,EAAejF,UAAUK,OAAO8E,GAChCF,EAAe3B,aAAa,aAAc,GAAG0B,EAAU5S,QAAQ4S,EAAUlP,kBAAkBkP,EAAUxP,iBACrGyP,EAAe3B,aAAa,WAAY,GAAG0B,EAAUrT,QACrDsT,EAAeC,UAAYF,EAAU3R,OAAO,CAAEiF,IAAK,YACnD0M,EAAUhS,WAAW,EAAGlC,EAAKa,SAOrC8S,iBACI,IAAIO,EAAY1T,KAAKuP,SAASQ,UAAUlP,MACnCM,QAAQ,WACRA,QAAQ3B,EAAKa,MAClB,MAAM4T,EAAM,GAEZ,GADAjB,SAASC,cAAc,OACnBjT,KAAKuP,SAASuB,SAAS3G,QAAQlD,cAAe,CAC9C,MAAMiN,EAAiBlB,SAASC,cAAc,OAC9CiB,EAAexF,UAAUK,IAAIlK,UAAUe,IAAIqB,cAAepC,UAAUe,IAAIM,aACxEgO,EAAeN,UAAY,IAC3BK,EAAIH,KAAKI,GAEb,IAAK,IAAIZ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,MAAMY,EAAiBlB,SAASC,cAAc,OAC9CiB,EAAexF,UAAUK,IAAIlK,UAAUe,IAAIsB,aAAcrC,UAAUe,IAAIM,aACvEgO,EAAeN,UAAYF,EAAU3R,OAAO,CAAEoS,QAAS,UACvDT,EAAUhS,WAAW,EAAGlC,EAAKa,MAC7B4T,EAAIH,KAAKI,GAEb,OAAOD,GAOf,MAAMG,aACFvU,YAAYyP,GACRtP,KAAKuP,SAAWD,EAMpBwD,cACI,MAAMC,EAAYC,SAASC,cAAc,OACzCF,EAAUrE,UAAUK,IAAIlK,UAAUe,IAAIkB,iBACtC,IAAK,IAAIwM,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMF,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAY7E,aAC5CuH,EAAUM,YAAYD,GAE1B,OAAOL,EAMXX,UACI,MAAMW,EAAY/S,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuB/N,UAAUe,IAAIkB,iBAAiB,IAC/FV,EAAUmN,EAAUlN,GAAQ0M,EAAUS,cACxCZ,uBAAuB/N,UAAUe,IAAIG,gBAAgB,GACrD0N,qBAAqB,OAC1BF,EAASvB,aAAanN,UAAUe,IAAIkB,gBAAiB9G,KAAKuP,SAASQ,UAAUhO,OAAO,CAAEjB,KAAM,aAC5Fd,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,YAAY,EAAGlC,EAAKsB,MAAOtB,EAAKsB,MAC1FsF,EAASsI,UAAUI,OAAOjK,UAAUe,IAAIU,UACxCF,EAASsI,UAAUK,IAAIlK,UAAUe,IAAIU,UAC3CtG,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,WAAW,EAAGlC,EAAKsB,MAAOtB,EAAKsB,MACzFuF,EAAKqI,UAAUI,OAAOjK,UAAUe,IAAIU,UACpCD,EAAKqI,UAAUK,IAAIlK,UAAUe,IAAIU,UACvC,IAAIoN,EAAY1T,KAAKuP,SAASQ,UAAUlP,MAAMM,QAAQ3B,EAAKsB,MAC3DiS,EACKjB,iBAAiB,iBAAiBzB,EAAY7E,iBAC9CvM,SAAQ,CAAC0U,EAAgB3C,KAC1B,IAAI6C,EAAU,GACdA,EAAQC,KAAKjP,UAAUe,IAAI7E,QACtBf,KAAKuP,SAASwE,QACf/T,KAAKuP,SAASO,MAAMkE,SAASN,EAAWlU,EAAKuB,QAC7C8S,EAAQC,KAAKjP,UAAUe,IAAIa,QAE1BzG,KAAKuP,SAASW,YAAY7N,QAAQqR,EAAWlU,EAAKuB,QACnD8S,EAAQC,KAAKjP,UAAUe,IAAIU,UAE/BqN,EAAejF,UAAUI,UAAU6E,EAAejF,WAClDiF,EAAejF,UAAUK,OAAO8E,GAChCF,EAAe3B,aAAa,aAAc,GAAGhB,KAC7C2C,EAAeC,UAAY,GAAGF,EAAU3R,OAAO,CAAEhB,MAAO,YACxD2S,EAAUhS,WAAW,EAAGlC,EAAKuB,WAKzC,MAAMsT,MACFxU,YAAYyP,GACRtP,KAAKsU,OAAS,GACdtU,KAAKuP,SAAWD,EAKpBiF,aACI,OAAOvU,KAAKsU,OAKhBzE,iBACI,OAAO7P,KAAKsU,OAAOtU,KAAKoQ,iBAK5BA,sBACI,OAA2B,IAAvBpQ,KAAKsU,OAAOE,OACL,EACJxU,KAAKsU,OAAOE,OAAS,EAMhCzF,IAAI1O,GACAL,KAAKsU,OAAOR,KAAKzT,GAQrB2T,SAASS,EAAYrT,GACjB,IAAKA,EACD,YAAqDC,IAA9CrB,KAAKsU,OAAOI,MAAMnR,GAAMA,IAAMkR,IACzC,MAAM1S,EAASsS,MAAMM,gBAAgBvT,GACrC,IAAIwT,EAAqBH,EAAW1S,OAAOA,GAC3C,YAE+CV,IAFvCrB,KAAKsU,OACRO,KAAKtR,GAAMA,EAAExB,OAAOA,KACpB2S,MAAMnR,GAAMA,IAAMqR,IAS3B3D,YAAYwD,EAAYrT,GACpB,IAAKA,EACD,OAAOpB,KAAKsU,OAAOQ,QAAQL,GAC/B,MAAM1S,EAASsS,MAAMM,gBAAgBvT,GACrC,IAAIwT,EAAqBH,EAAW1S,OAAOA,GAC3C,OAAO/B,KAAKsU,OAAOO,KAAKtR,GAAMA,EAAExB,OAAOA,KAAS+S,QAAQF,GAK5DpK,QACIxK,KAAKuP,SAASwE,QAAS,EACvB/T,KAAKuP,SAASwF,cAAc,CACxBvR,KAAMqB,UAAUG,OAAOG,OACvB9E,UAAMgB,EACN2T,QAAShV,KAAK6P,WACdoF,SAAS,EACT5S,SAAS,IAEbrC,KAAKsU,OAAS,GAOlBY,uBAAuBC,EAAQrU,GAC3B,MAAM6M,EAAOwH,EAAS,GAAIC,EAAY9Q,KAAK+Q,MAAMvU,EAAOqU,GAAUA,EAClE,MAAO,CAACC,EAD4EA,EAAmB,EAAPzH,EAAuBrJ,KAAK+Q,MAAMvU,EAAO6M,GAAQA,GAYrJwC,UAAU1B,EAAQuC,GACd,MAAMsE,OAA2B,IAAVtE,EAAuBiE,GAAWxG,GAAU6G,EACnE,IAAIN,EAAUhV,KAAKuP,SAASwE,OAAS,KAAO/T,KAAKsU,OAAOtD,IACnDgE,IAAYhV,KAAKuP,SAASwE,QAAUuB,GAAWL,IAChDD,EAAUhV,KAAK6P,YAEnB,MAAM0F,EAAc,KAChB,IAAKvV,KAAKuP,SAASiG,OACf,OACJ,IAAIC,GAAYhH,MAAAA,OAAuC,EAASA,EAAO1M,OAAO/B,KAAKuP,SAASuB,SAAS3G,QAAQgB,eAAiB,GAC1HnL,KAAKuP,SAASuB,SAAS1D,gBACvBqI,EAAWzV,KAAKsU,OACXO,KAAK1V,GAAMA,EAAE4C,OAAO/B,KAAKuP,SAASuB,SAAS3G,QAAQgB,eACnD5C,KAAKvI,KAAKuP,SAASuB,SAASzD,yBAEjCrN,KAAKuP,SAASiG,OAAOrV,OAASsV,IAC9BzV,KAAKuP,SAASiG,OAAOrV,MAAQsV,IAGrC,OAAKhH,GAqBLuC,EAAQA,GAAS,EACjBvC,EAASA,EAAO5N,MAEwB,IAApCb,KAAKuP,SAASuB,SAAS1F,WACvBqD,EAAOxN,QACHqD,KAAKC,MAAMkK,EAAOxN,QAAUjB,KAAKuP,SAASuB,SAAS1F,UAC/CpL,KAAKuP,SAASuB,SAAS1F,SAC/BqD,EAAOvN,QAAU,GAEjBlB,KAAKuP,SAASW,YAAY7N,QAAQoM,IAClCzO,KAAKsU,OAAOtD,GAASvC,EACrBzO,KAAKuP,SAASQ,UAAYtB,EAAO5N,MACjC0U,IACAvV,KAAKuP,SAASwE,QAAS,EACvB/T,KAAKuP,SAASiB,SAAS4B,QAAQ,YAC/BpS,KAAKuP,SAASwF,cAAc,CACxBvR,KAAMqB,UAAUG,OAAOG,OACvB9E,KAAMoO,EACNuG,QAAAA,EACAC,QAAAA,EACA5S,SAAS,MAIbrC,KAAKuP,SAASuB,SAAS9D,cACvBhN,KAAKsU,OAAOtD,GAASvC,EACrBzO,KAAKuP,SAASQ,UAAYtB,EAAO5N,MACjC0U,IACAvV,KAAKuP,SAASwF,cAAc,CACxBvR,KAAMqB,UAAUG,OAAOG,OACvB9E,KAAMoO,EACNuG,QAAAA,EACAC,QAAAA,EACA5S,SAAS,UAGjBrC,KAAKuP,SAASwF,cAAc,CACxBvR,KAAMqB,UAAUG,OAAOK,MACvBqQ,OAAQ7Q,UAAUiD,cAAcG,uBAChC5H,KAAMoO,EACNuG,QAAAA,QA5DKhV,KAAKuP,SAASuB,SAAS1D,eACD,IAAvBpN,KAAKsU,OAAOE,QACZS,GACAjV,KAAKuP,SAASwE,QAAS,EACvB/T,KAAKsU,OAAS,IAGdtU,KAAKsU,OAAOqB,OAAO3E,EAAO,GAE9BhR,KAAKuP,SAASwF,cAAc,CACxBvR,KAAMqB,UAAUG,OAAOG,OACvB9E,UAAMgB,EACN2T,QAAAA,EACAC,QAAAA,EACA5S,SAAS,IAEbkT,SACAvV,KAAKuP,SAASiB,SAAS4B,QAAQ,QAkDvCuC,uBAAuBvT,GACnB,OAAQA,GACJ,IAAK,OACD,MAAO,CAAE+B,UAAW,SACxB,IAAK,QACD,MAAO,CACHpC,MAAO,UACPD,KAAM,WAEd,IAAK,OACD,MAAO,CAAEA,KAAM,aAQ/B,MAAM8U,YACF/V,YAAYyP,GACRtP,KAAKuP,SAAWD,EAMpBwD,cACI,MAAMC,EAAYC,SAASC,cAAc,OACzCF,EAAUrE,UAAUK,IAAIlK,UAAUe,IAAIiB,gBACtC,IAAK,IAAIyM,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMF,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAY1E,YAC5CoH,EAAUM,YAAYD,GAE1B,OAAOL,EAMXX,UACIiC,MAAMa,gBAAgB,GAAIlV,KAAKuP,SAASQ,UAAUjP,MAClDd,KAAK6V,WAAa7V,KAAKuP,SAASQ,UAAUlP,MAAMa,YAAY,EAAGlC,EAAKsB,MACpEd,KAAK8V,SAAW9V,KAAKuP,SAASQ,UAAUlP,MAAMa,WAAW,GAAIlC,EAAKsB,MAClE,MAAMiS,EAAY/S,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuB/N,UAAUe,IAAIiB,gBAAgB,IAC9FT,EAAUmN,EAAUlN,GAAQ0M,EAAUS,cACxCZ,uBAAuB/N,UAAUe,IAAIG,gBAAgB,GACrD0N,qBAAqB,OAC1BF,EAASvB,aAAanN,UAAUe,IAAIiB,eAAgB,GAAG7G,KAAK6V,WAAW9T,OAAO,CAAEjB,KAAM,eAAgBd,KAAK8V,SAAS/T,OAAO,CAAEjB,KAAM,eAEnId,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAK6V,WAAYrW,EAAKsB,MAClDsF,EAASsI,UAAUI,OAAOjK,UAAUe,IAAIU,UACxCF,EAASsI,UAAUK,IAAIlK,UAAUe,IAAIU,UAC3CtG,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAK8V,SAAUtW,EAAKsB,MAChDuF,EAAKqI,UAAUI,OAAOjK,UAAUe,IAAIU,UACpCD,EAAKqI,UAAUK,IAAIlK,UAAUe,IAAIU,UACvC,IAAIoN,EAAY1T,KAAKuP,SAASQ,UAAUlP,MACnCM,QAAQ3B,EAAKsB,MACbY,YAAY,EAAGlC,EAAKsB,MACzBiS,EACKjB,iBAAiB,iBAAiBzB,EAAY1E,gBAC9C1M,SAAQ,CAAC0U,EAAgB3C,KAC1B,IAAI6C,EAAU,GACdA,EAAQC,KAAKjP,UAAUe,IAAI9E,OACtBd,KAAKuP,SAASwE,QACf/T,KAAKuP,SAASO,MAAMkE,SAASN,EAAWlU,EAAKsB,OAC7C+S,EAAQC,KAAKjP,UAAUe,IAAIa,QAE1BzG,KAAKuP,SAASW,YAAY7N,QAAQqR,EAAWlU,EAAKsB,OACnD+S,EAAQC,KAAKjP,UAAUe,IAAIU,UAE/BqN,EAAejF,UAAUI,UAAU6E,EAAejF,WAClDiF,EAAejF,UAAUK,OAAO8E,GAChCF,EAAe3B,aAAa,aAAc,GAAG0B,EAAU5S,QACvD6S,EAAeC,UAAYF,EAAU3R,OAAO,CAAEjB,KAAM,YACpD4S,EAAUhS,WAAW,EAAGlC,EAAKsB,UAQzC,MAAMiV,cACFlW,YAAYyP,GACRtP,KAAKuP,SAAWD,EAMpBwD,cACI,MAAMC,EAAYC,SAASC,cAAc,OACzCF,EAAUrE,UAAUK,IAAIlK,UAAUe,IAAIe,kBACtC,IAAK,IAAI2M,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMF,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAYvE,cAC5CiH,EAAUM,YAAYD,GAE1B,OAAOL,EAMXX,UACI,MAAO4D,EAAOC,GAAO5B,MAAMa,gBAAgB,IAAKlV,KAAKuP,SAASQ,UAAUjP,MACxEd,KAAKkW,aAAelW,KAAKuP,SAASQ,UAAUlP,MAAMM,QAAQ3B,EAAKsB,MAC/Dd,KAAKkW,aAAapV,KAAOkV,EACzBhW,KAAKmW,WAAanW,KAAKuP,SAASQ,UAAUlP,MAAMM,QAAQ3B,EAAKsB,MAC7Dd,KAAKmW,WAAWrV,KAAOmV,EACvB,MAAMlD,EAAY/S,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuB/N,UAAUe,IAAIe,kBAAkB,IAChGP,EAAUmN,EAAUlN,GAAQ0M,EAAUS,cACxCZ,uBAAuB/N,UAAUe,IAAIG,gBAAgB,GACrD0N,qBAAqB,OAC1BF,EAASvB,aAAanN,UAAUe,IAAIe,iBAAkB,GAAG3G,KAAKkW,aAAanU,OAAO,CAAEjB,KAAM,eAAgBd,KAAKmW,WAAWpU,OAAO,CAAEjB,KAAM,eACzId,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKkW,aAAc1W,EAAKsB,MACpDsF,EAASsI,UAAUI,OAAOjK,UAAUe,IAAIU,UACxCF,EAASsI,UAAUK,IAAIlK,UAAUe,IAAIU,UAC3CtG,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKmW,WAAY3W,EAAKsB,MAClDuF,EAAKqI,UAAUI,OAAOjK,UAAUe,IAAIU,UACpCD,EAAKqI,UAAUK,IAAIlK,UAAUe,IAAIU,UACvC,MAAM8P,EAAcpW,KAAKuP,SAASO,MAAMyE,OAAOM,KAAKtR,GAAMA,EAAEzC,OAC5DiS,EACKjB,iBAAiB,iBAAiBzB,EAAYvE,kBAC9C7M,SAAQ,CAAC0U,EAAgB3C,KAC1B,GAAc,IAAVA,EAEA,OADA2C,EAAejF,UAAUK,IAAIlK,UAAUe,IAAIW,KACvCvG,KAAKkW,aAAapV,KAAO,GAAK,GAC9B6S,EAAe0C,YAAc,IAC7BjQ,EAASsI,UAAUK,IAAIlK,UAAUe,IAAIU,UACrCqN,EAAejF,UAAUK,IAAIlK,UAAUe,IAAIU,eAC3CqN,EAAe3B,aAAa,aAAc,MAI1C2B,EAAeC,UAAY5T,KAAKkW,aAAarV,MAAMa,YAAY,GAAIlC,EAAKsB,MAAMiB,OAAO,CAAEjB,KAAM,iBAC7F6S,EAAe3B,aAAa,aAAc,GAAGhS,KAAKkW,aAAapV,SAIvE,IAAI+S,EAAU,GACdA,EAAQC,KAAKjP,UAAUe,IAAIgB,QAC3B,MAAM0P,EAAkBtW,KAAKkW,aAAapV,KACpCyV,EAAgBvW,KAAKkW,aAAapV,KAAO,GAC1Cd,KAAKuP,SAASwE,QACfqC,EAAY9S,QAAQC,GAAMA,GAAK+S,GAAmB/S,GAAKgT,IAClD/B,OAAS,GACdX,EAAQC,KAAKjP,UAAUe,IAAIa,QAE/BkN,EAAejF,UAAUI,UAAU6E,EAAejF,WAClDiF,EAAejF,UAAUK,OAAO8E,GAChCF,EAAe3B,aAAa,aAAc,GAAGhS,KAAKkW,aAAapV,QAC/D6S,EAAeC,UAAY,GAAG5T,KAAKkW,aAAanU,OAAO,CAAEjB,KAAM,cAC/Dd,KAAKkW,aAAaxU,WAAW,GAAIlC,EAAKsB,UAQlD,MAAM0V,YACF3W,YAAYyP,GACRtP,KAAKuP,SAAWD,EAMpBwD,cACI,MAAMC,EAAYC,SAASC,cAAc,OAGzC,OAFAF,EAAUrE,UAAUK,IAAIlK,UAAUe,IAAI2B,gBACtCwL,EAAUG,UAAUlT,KAAKyW,SAClB1D,EAOXX,UACI,MAAMsE,EAAW1W,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuB/N,UAAUe,IAAI2B,gBAAgB,GAC9FsI,GAAc7P,KAAKuP,SAASO,MAAMD,YAAc7P,KAAKuP,SAASQ,WAAWlP,MAC/E,IAAI8V,EAAU,EAgDd,GA/CAD,EACK5E,iBAAiB,aACjB7S,SAAS6O,GAAYA,EAAQY,UAAUI,OAAOjK,UAAUe,IAAIU,YAC7DtG,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW9J,QAC1C2V,IACK3W,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,WAAW,EAAGlC,EAAKwB,OAAQxB,EAAKwB,QACjG0V,EACKnE,cAAc,gBAAgBlC,EAAYkB,mBAC1C7C,UAAUK,IAAIlK,UAAUe,IAAIU,UAEhCtG,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,YAAY,EAAGlC,EAAKwB,OAAQxB,EAAKwB,QAClG0V,EACKnE,cAAc,gBAAgBlC,EAAYqB,mBAC1ChD,UAAUK,IAAIlK,UAAUe,IAAIU,UAErCoQ,EAASnE,cAAc,wBAAwB/S,EAAKwB,UAAU4S,UAAY5T,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWI,kBAC9G2E,EAAWhM,eACXgM,EAAW9L,sBAEjB/D,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW7J,UAC1C0V,IACK3W,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,WAAW,EAAGlC,EAAKyB,SAAUzB,EAAKyB,UACnGyV,EACKnE,cAAc,gBAAgBlC,EAAYmB,qBAC1C9C,UAAUK,IAAIlK,UAAUe,IAAIU,UAEhCtG,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,YAAY,EAAGlC,EAAKyB,SAAUzB,EAAKyB,UACpGyV,EACKnE,cAAc,gBAAgBlC,EAAYsB,qBAC1CjD,UAAUK,IAAIlK,UAAUe,IAAIU,UAErCoQ,EAASnE,cAAc,wBAAwB/S,EAAKyB,YAAY2S,UAAY/D,EAAWlM,kBAEvF3D,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW5J,UAC1CyV,IACK3W,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,WAAW,EAAGlC,EAAK0B,SAAU1B,EAAK0B,UACnGwV,EACKnE,cAAc,gBAAgBlC,EAAYoB,qBAC1C/C,UAAUK,IAAIlK,UAAUe,IAAIU,UAEhCtG,KAAKuP,SAASW,YAAY7N,QAAQrC,KAAKuP,SAASQ,UAAUlP,MAAMa,YAAY,EAAGlC,EAAK0B,SAAU1B,EAAK0B,UACpGwV,EACKnE,cAAc,gBAAgBlC,EAAYuB,qBAC1ClD,UAAUK,IAAIlK,UAAUe,IAAIU,UAErCoQ,EAASnE,cAAc,wBAAwB/S,EAAK0B,YAAY0S,UAAY/D,EAAWpM,mBAEtFzD,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWI,kBAAmB,CAC9DyL,GAAW,EACX,MAAMnI,EAASkI,EAASnE,cAAc,gBAAgBlC,EAAYzD,iBAClE4B,EAAOoF,UAAY/D,EAAW5L,WACzBjE,KAAKuP,SAASW,YAAY7N,QAAQwN,EAAWhP,MAAMa,WAAWmO,EAAW7O,OAAS,IAAM,GAAK,GAAIxB,EAAKwB,QAIvGwN,EAAOE,UAAUI,OAAOjK,UAAUe,IAAIU,UAHtCkI,EAAOE,UAAUK,IAAIlK,UAAUe,IAAIU,UAM3CoQ,EAAShI,UAAUK,IAAI,iBAAiB4H,KAM5CF,QACI,MAAMG,EAAM,GAAIC,EAAS,GAAIC,EAAS,GAAIxP,EAAY0L,SAASC,cAAc,OAAQ8D,EAAS/W,KAAKuP,SAASiB,SAAS0B,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAME,IAAK0M,EAAWhX,KAAKuP,SAASiB,SAAS0B,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAMG,MACxPjD,EAAUoH,UAAUK,IAAIlK,UAAUe,IAAI0B,UAAWzC,UAAUe,IAAIM,aAC/D,MAAM+Q,EAAiB3P,EAAU4P,WAAU,GAC3CD,EAAehF,UAAY,IAC3B,MAAMkF,EAAe,CAACC,GAAQ,IACnBA,EACDH,EAAeC,WAAU,GACzB5P,EAAU4P,WAAU,GAE9B,GAAIlX,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW9J,MAAO,CACjD,IAAIqW,EAAarE,SAASC,cAAc,OACxCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaa,eACrEiL,EAAWrF,aAAa,cAAe3B,EAAYkB,gBACnD8F,EAAWhE,YAAY0D,EAAOG,WAAU,IACxCN,EAAI9C,KAAKuD,GACTA,EAAarE,SAASC,cAAc,OACpCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaY,UACrEkL,EAAWrF,aAAa,cAAe3B,EAAYmC,WACnD6E,EAAWrF,aAAa,sBAAuBxS,EAAKwB,OACpD6V,EAAO/C,KAAKuD,GACZA,EAAarE,SAASC,cAAc,OACpCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAac,eACrEgL,EAAWrF,aAAa,cAAe3B,EAAYqB,gBACnD2F,EAAWhE,YAAY2D,EAASE,WAAU,IAC1CJ,EAAOhD,KAAKuD,GAEhB,GAAIrX,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW7J,QAAS,CAC/CjB,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW9J,QAC1C4V,EAAI9C,KAAKqD,KACTN,EAAO/C,KAAKqD,GAAa,IACzBL,EAAOhD,KAAKqD,MAEhB,IAAIE,EAAarE,SAASC,cAAc,OACxCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAagB,iBACrE8K,EAAWrF,aAAa,cAAe3B,EAAYmB,kBACnD6F,EAAWhE,YAAY0D,EAAOG,WAAU,IACxCN,EAAI9C,KAAKuD,GACTA,EAAarE,SAASC,cAAc,OACpCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAae,YACrE+K,EAAWrF,aAAa,cAAe3B,EAAYoC,aACnD4E,EAAWrF,aAAa,sBAAuBxS,EAAKyB,SACpD4V,EAAO/C,KAAKuD,GACZA,EAAarE,SAASC,cAAc,OACpCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaiB,iBACrE6K,EAAWrF,aAAa,cAAe3B,EAAYsB,kBACnD0F,EAAWhE,YAAY2D,EAASE,WAAU,IAC1CJ,EAAOhD,KAAKuD,GAEhB,GAAIrX,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW5J,QAAS,CAC/ClB,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW7J,UAC1C2V,EAAI9C,KAAKqD,KACTN,EAAO/C,KAAKqD,GAAa,IACzBL,EAAOhD,KAAKqD,MAEhB,IAAIE,EAAarE,SAASC,cAAc,OACxCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAamB,iBACrE2K,EAAWrF,aAAa,cAAe3B,EAAYoB,kBACnD4F,EAAWhE,YAAY0D,EAAOG,WAAU,IACxCN,EAAI9C,KAAKuD,GACTA,EAAarE,SAASC,cAAc,OACpCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAakB,YACrE4K,EAAWrF,aAAa,cAAe3B,EAAYqC,aACnD2E,EAAWrF,aAAa,sBAAuBxS,EAAK0B,SACpD2V,EAAO/C,KAAKuD,GACZA,EAAarE,SAASC,cAAc,OACpCoE,EAAWrF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaoB,iBACrE0K,EAAWrF,aAAa,cAAe3B,EAAYuB,kBACnDyF,EAAWhE,YAAY2D,EAASE,WAAU,IAC1CJ,EAAOhD,KAAKuD,GAEhB,IAAKrX,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWI,kBAAmB,CAC9D,IAAImM,EAAaF,IACjBP,EAAI9C,KAAKuD,GACT,IAAIC,EAAStE,SAASC,cAAc,UACpCqE,EAAOtF,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaqB,cACjE0K,EAAOtF,aAAa,cAAe3B,EAAYzD,cAC/C0K,EAAOtF,aAAa,WAAY,MAChCsF,EAAO5I,UAAUK,IAAI,MAAO,eAC5BsI,EAAarE,SAASC,cAAc,OACpCoE,EAAW3I,UAAUK,IAAIlK,UAAUe,IAAIM,aACvCmR,EAAWhE,YAAYiE,GACvBT,EAAO/C,KAAKuD,GACZA,EAAaF,IACbL,EAAOhD,KAAKuD,GAEhB,MAAO,IAAIT,KAAQC,KAAWC,IAOtC,MAAMS,YACF1X,YAAYyP,GACRtP,KAAKuP,SAAWD,EAMpBwD,cACI,MAAMC,EAAYC,SAASC,cAAc,OACzCF,EAAUrE,UAAUK,IAAIlK,UAAUe,IAAI4B,eACtC,IAAK,IAAI8L,EAAI,EAAGA,GACXtT,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWI,kBAAoB,GAAK,IAAKoI,IAAK,CAC9E,MAAMF,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAYc,YAC5C4B,EAAUM,YAAYD,GAE1B,OAAOL,EAMXX,UACI,MAAMW,EAAY/S,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuB/N,UAAUe,IAAI4B,eAAe,GACpG,IAAIkM,EAAY1T,KAAKuP,SAASQ,UAAUlP,MAAMM,QAAQ3B,EAAKa,MAC3D0S,EACKjB,iBAAiB,iBAAiBzB,EAAYc,gBAC9ClS,SAAQ,CAAC0U,EAAgB3C,KAC1B,IAAI6C,EAAU,GACdA,EAAQC,KAAKjP,UAAUe,IAAI9B,MACtB9D,KAAKuP,SAASW,YAAY7N,QAAQqR,EAAWlU,EAAKwB,QACnD6S,EAAQC,KAAKjP,UAAUe,IAAIU,UAE/BqN,EAAejF,UAAUI,UAAU6E,EAAejF,WAClDiF,EAAejF,UAAUK,OAAO8E,GAChCF,EAAe3B,aAAa,aAAc,GAAG0B,EAAU1S,SACvD2S,EAAeC,UAAY5T,KAAKuP,SAASuB,SAAS3G,QAAQW,WACrDI,kBACCwI,EAAU7P,eACV6P,EAAU3P,qBAChB2P,EAAUhS,WAAW,EAAGlC,EAAKwB,WAQzC,MAAMwW,cACF3X,YAAYyP,GACRtP,KAAKuP,SAAWD,EAMpBwD,cACI,MAAMC,EAAYC,SAASC,cAAc,OACzCF,EAAUrE,UAAUK,IAAIlK,UAAUe,IAAI6B,iBACtC,IAAIkG,EAA2C,IAApC3N,KAAKuP,SAASuB,SAAS1F,SAC5B,EACApL,KAAKuP,SAASuB,SAAS1F,SAC7B,IAAK,IAAIkI,EAAI,EAAGA,EAAI,GAAK3F,EAAM2F,IAAK,CAChC,MAAMF,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAYgB,cAC5C0B,EAAUM,YAAYD,GAE1B,OAAOL,EAMXX,UACI,MAAMW,EAAY/S,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuB/N,UAAUe,IAAI6B,iBAAiB,GACtG,IAAIiM,EAAY1T,KAAKuP,SAASQ,UAAUlP,MAAMM,QAAQ3B,EAAKwB,OACvD2M,EAA2C,IAApC3N,KAAKuP,SAASuB,SAAS1F,SAC5B,EACApL,KAAKuP,SAASuB,SAAS1F,SAC7B2H,EACKjB,iBAAiB,iBAAiBzB,EAAYgB,kBAC9CpS,SAAQ,CAAC0U,EAAgB3C,KAC1B,IAAI6C,EAAU,GACdA,EAAQC,KAAKjP,UAAUe,IAAIhC,QACtB5D,KAAKuP,SAASW,YAAY7N,QAAQqR,EAAWlU,EAAKyB,UACnD4S,EAAQC,KAAKjP,UAAUe,IAAIU,UAE/BqN,EAAejF,UAAUI,UAAU6E,EAAejF,WAClDiF,EAAejF,UAAUK,OAAO8E,GAChCF,EAAe3B,aAAa,aAAc,GAAG0B,EAAUzS,WACvD0S,EAAeC,UAAYF,EAAU/P,iBACrC+P,EAAUhS,WAAWiM,EAAMnO,EAAKyB,aAQ5C,MAAMwW,cACF5X,YAAYyP,GACRtP,KAAKuP,SAAWD,EAMpBwD,cACI,MAAMC,EAAYC,SAASC,cAAc,OACzCF,EAAUrE,UAAUK,IAAIlK,UAAUe,IAAI8B,iBACtC,IAAK,IAAI4L,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMF,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAYiB,cAC5CyB,EAAUM,YAAYD,GAE1B,OAAOL,EAMXX,UACI,MAAMW,EAAY/S,KAAKuP,SAASiB,SAAS1K,OAAO8M,uBAAuB/N,UAAUe,IAAI8B,iBAAiB,GACtG,IAAIgM,EAAY1T,KAAKuP,SAASQ,UAAUlP,MAAMM,QAAQ3B,EAAKyB,SAC3D8R,EACKjB,iBAAiB,iBAAiBzB,EAAYiB,kBAC9CrS,SAAQ,CAAC0U,EAAgB3C,KAC1B,IAAI6C,EAAU,GACdA,EAAQC,KAAKjP,UAAUe,IAAIlC,QACtB1D,KAAKuP,SAASW,YAAY7N,QAAQqR,EAAWlU,EAAK0B,UACnD2S,EAAQC,KAAKjP,UAAUe,IAAIU,UAE/BqN,EAAejF,UAAUI,UAAU6E,EAAejF,WAClDiF,EAAejF,UAAUK,OAAO8E,GAChCF,EAAe3B,aAAa,aAAc,GAAG0B,EAAUxS,WACvDyS,EAAeC,UAAYF,EAAUjQ,iBACrCiQ,EAAUhS,WAAW,EAAGlC,EAAK0B,aAQzC,MAAMwW,QACF7X,YAAYyP,GACRtP,KAAK2X,YAAa,EAMlB3X,KAAK4X,oBAAuBnZ,IACxB,IAAIiR,GACA1P,KAAK2X,YACJlZ,EAAEoZ,eAAeC,SAAS9X,KAAK8F,UACF,QAA3B4J,EAAKjR,EAAEoZ,sBAAmC,IAAPnI,OAAgB,EAASA,EAAGoI,SAAS9X,KAAKuP,SAASwI,YACvF/X,KAAKuP,SAASuB,SAAS3G,QAAQS,UAC5B5K,KAAKuP,SAASuB,SAAS7D,OACvBgB,OAAOhB,OACZjN,KAAKuF,QAQbvF,KAAKgY,mBAAsBvZ,IACvBuB,KAAKuP,SAAS0I,QAAQzI,GAAG/Q,IAE7BuB,KAAKuP,SAAWD,EAChBtP,KAAKkY,aAAe,IAAIrF,YAAYvD,GACpCtP,KAAKmY,cAAgB,IAAI/D,aAAa9E,GACtCtP,KAAKoY,aAAe,IAAIxC,YAAYtG,GACpCtP,KAAKqY,eAAiB,IAAItC,cAAczG,GACxCtP,KAAKsY,aAAe,IAAI9B,YAAYlH,GACpCtP,KAAKuY,aAAe,IAAIhB,YAAYjI,GACpCtP,KAAKwY,eAAiB,IAAIhB,cAAclI,GACxCtP,KAAKyY,eAAiB,IAAIhB,cAAcnI,GACxCtP,KAAK0Y,aAAUrX,EAGnBgR,aACI,OAAOrS,KAAK2Y,gBAMhB7S,aACI,OAAO9F,KAAK0Y,QAKhBE,gBACI,OAAO5Y,KAAK2X,WAQhBvF,QAAQhR,GACJ,GAAKpB,KAAK8F,OAGV,OAAQ1E,GACJ,KAAK5B,EAAK0B,QACNlB,KAAKyY,eAAerG,UACpB,MACJ,KAAK5S,EAAKyB,QACNjB,KAAKwY,eAAepG,UACpB,MACJ,KAAK5S,EAAKwB,MACNhB,KAAKuY,aAAanG,UAClB,MACJ,KAAK5S,EAAKa,KACNL,KAAKkY,aAAa9F,UAClB,MACJ,KAAK5S,EAAKuB,MACNf,KAAKmY,cAAc/F,UACnB,MACJ,KAAK5S,EAAKsB,KACNd,KAAKoY,aAAahG,UAClB,MACJ,IAAK,QACDpS,KAAKsY,aAAalG,UAClBpS,KAAKoS,QAAQ5S,EAAKwB,OAClBhB,KAAKoS,QAAQ5S,EAAKyB,SAClBjB,KAAKoS,QAAQ5S,EAAK0B,SAClB,MACJ,IAAK,WACDlB,KAAKoS,QAAQ5S,EAAKa,MAClBL,KAAKoS,QAAQ5S,EAAKsB,MAClBd,KAAKoS,QAAQ5S,EAAKuB,OAClBf,KAAKqY,eAAejG,UACpBpS,KAAK2Q,wBACL,MACJ,IAAK,MACG3Q,KAAKkR,UACLlR,KAAKoS,QAAQ,SAEbpS,KAAK6Y,UACL7Y,KAAKoS,QAAQ,aAS7B9M,OACI,IAAIoK,EACJ,GAAmBrO,MAAfrB,KAAK8F,OAAqB,CAC1B,GAAI9F,KAAKuP,SAASuB,SAASzF,aACtBrL,KAAKuP,SAASuB,SAASxF,YAAa,CAErC,MAAMjL,GAAO,IAAIV,UAAWO,UAAUF,KAAKuP,SAASuB,SAASvF,aAAatL,QAC1E,IAAKD,KAAKuP,SAASuB,SAAS9D,YAAa,CACrC,IAAI8L,EAAQ,EACRC,EAAY,EAIhB,KAH2D,QAAtDrJ,EAAK1P,KAAKuP,SAASuB,SAASpH,aAAaE,eAA4B,IAAP8F,OAAgB,EAASA,EAAGnN,SAASlC,MACpG0Y,GAAa,KAET/Y,KAAKuP,SAASW,YAAY7N,QAAQhC,KACtCA,EAAKqB,WAAWqX,EAAWvZ,EAAKa,MAC5ByY,EAAQ,MAEZA,IAGR9Y,KAAKuP,SAASO,MAAMK,UAAU9P,GAE9BL,KAAKuP,SAASuB,SAASxF,aACvBtL,KAAKuP,SAASO,MAAMK,UAAUnQ,KAAKuP,SAASuB,SAASxF,aAEzDtL,KAAKgZ,eACDhZ,KAAK6Y,UACL7Y,KAAKyQ,YAEJzQ,KAAKuP,SAASuB,SAAS3G,QAAQtC,OAiBhC7H,KAAKuP,SAASwI,SAAS1E,YAAYrT,KAAK8F,SAhBxCkN,SAASiG,KAAK5F,YAAYrT,KAAK8F,QAC/B9F,KAAK2Y,gBAAkBpa,EAAK2a,aAAalZ,KAAKuP,SAAS4J,eAAiBnZ,KAAKuP,SAASwI,SACtF/X,KAAK8F,OAAQ,CACTsT,UAAW,CACP,CACI3L,KAAM,SACN4L,QAAS,CACLC,OAAQ,CAAC,EAAG,KAGpB,CAAE7L,KAAM,iBAAkB8L,SAAS,IAEvCC,UAAW,UAM4B,SAA3CxZ,KAAKuP,SAASuB,SAAS3G,QAAQO,UAC/B1K,KAAKuP,SAAS0I,QAAQzI,GAAG,CACrBG,cAAe3P,KAAK8F,OAAOyM,cAAc,IAAI1N,UAAUe,IAAIyB,kBAC5DgJ,EAAYe,WAEnBpR,KAAK8F,OACAgM,iBAAiB,iBACjB7S,SAAS6O,GAAYA,EAAQ2L,iBAAiB,QAASzZ,KAAKgY,sBAE7DhY,KAAKuP,SAASuB,SAAS3G,QAAQhE,aAC/BnG,KAAKsY,aAAalG,UAClBpS,KAAK8F,OAAO8M,uBAAuB/N,UAAUe,IAAI2B,gBAAgB,GAAGqH,MAAMzE,QAAU,QAG5FnK,KAAK8F,OAAO4I,UAAUK,IAAIlK,UAAUe,IAAIN,MACnCtF,KAAKuP,SAASuB,SAAS3G,QAAQtC,SAChC7H,KAAK2Y,gBAAgBvT,SACrB4N,SAASyG,iBAAiB,QAASzZ,KAAK4X,sBAE5C5X,KAAKuP,SAASwF,cAAc,CAAEvR,KAAMqB,UAAUG,OAAOM,OACrDtF,KAAK2X,YAAa,EAOtBlH,UAAUsI,GACN,IAAK/Y,KAAK8F,OACN,OAEJ,GAAIiT,EAAW,CACX,MAAMW,EAAMpV,KAAKoV,IAAI1Z,KAAKuP,SAASsB,mBAAoBvM,KAAKqV,IAAI,EAAG3Z,KAAKuP,SAASe,iBAAmByI,IACpG,GAAI/Y,KAAKuP,SAASe,kBAAoBoJ,EAClC,OACJ1Z,KAAKuP,SAASe,iBAAmBoJ,EAErC1Z,KAAK8F,OACAgM,iBAAiB,IAAIjN,UAAUe,IAAIc,4BAA4B7B,UAAUe,IAAIG,qBAAqBlB,UAAUe,IAAIyB,uBAChHpI,SAASR,GAAOA,EAAEmQ,MAAMzE,QAAU,SACvC,MAAMyP,EAAiBpM,EAAgBxN,KAAKuP,SAASe,kBACrD,IAAIuJ,EAAS7Z,KAAK8F,OAAOyM,cAAc,IAAIqH,EAAelM,aAC1D,OAAQkM,EAAelM,WACnB,KAAK7I,UAAUe,IAAIe,iBACf3G,KAAKqY,eAAejG,UACpB,MACJ,KAAKvN,UAAUe,IAAIiB,eACf7G,KAAKoY,aAAahG,UAClB,MACJ,KAAKvN,UAAUe,IAAIkB,gBACf9G,KAAKmY,cAAc/F,UACnB,MACJ,KAAKvN,UAAUe,IAAImB,cACf/G,KAAKkY,aAAa9F,UAG1ByH,EAAOjL,MAAMzE,QAAU,OACvBnK,KAAK2Q,wBAETA,wBACI,MAAMmJ,EAAU,IACT9Z,KAAK8F,OAAOyM,cAAc,IAAI1N,UAAUe,IAAIc,6CAA6CgI,WAC9FgG,MAAMnR,GAAMA,EAAEwW,WAAWlV,UAAUe,IAAIc,kBAClCN,EAAUmN,EAAUlN,GAAQrG,KAAKuP,SAASiB,SAAS1K,OACrD8M,uBAAuB/N,UAAUe,IAAIG,gBAAgB,GACrD0N,qBAAqB,OAC1B,OAAQqG,GACJ,KAAKjV,UAAUe,IAAIe,iBACfP,EAAS4L,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaU,iBACnEsH,EAASvB,aAAa,QAAS,IAC/B3L,EAAK2L,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaW,aAC/D,MACJ,KAAKrH,UAAUe,IAAIiB,eACfT,EAAS4L,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaQ,gBACnEwH,EAASvB,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaO,cACnEzF,EAAK2L,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaS,YAC/D,MACJ,KAAKnH,UAAUe,IAAIkB,gBACfV,EAAS4L,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaK,cACnE2H,EAASvB,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaI,YACnEtF,EAAK2L,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaM,UAC/D,MACJ,KAAKhH,UAAUe,IAAImB,cACfX,EAAS4L,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaE,eACnE8H,EAASvB,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaC,aACnEnF,EAAK2L,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaG,WAC/D6H,EAASK,UAAY5T,KAAKuP,SAASQ,UAAUhO,OAAO,CAChDhB,MAAOf,KAAKuP,SAASuB,SAASvF,aAAawB,sBAIvDwG,EAASK,UAAYL,EAAS3C,aAAakJ,GAO/CvU,OACIvF,KAAK8F,OAAO4I,UAAUI,OAAOjK,UAAUe,IAAIN,MACvCtF,KAAK2X,aACL3X,KAAKuP,SAASwF,cAAc,CACxBvR,KAAMqB,UAAUG,OAAOO,KACvBlF,KAAML,KAAKuP,SAASwE,OACd,KACA/T,KAAKuP,SAASO,MAAMD,WAChB7P,KAAKuP,SAASO,MAAMD,WAAWhP,WAC/B,IAEdb,KAAK2X,YAAa,GAEtB3E,SAASgH,oBAAoB,QAASha,KAAK4X,qBAK/CpJ,SACI,OAAOxO,KAAK2X,WAAa3X,KAAKuF,OAASvF,KAAKsF,OAMhD2U,WACIjH,SAASgH,oBAAoB,QAASha,KAAK4X,qBACtC5X,KAAK8F,SAEV9F,KAAK8F,OACAgM,iBAAiB,iBACjB7S,SAAS6O,GAAYA,EAAQkM,oBAAoB,QAASha,KAAKgY,sBACpEhY,KAAK8F,OAAOoU,WAAWC,YAAYna,KAAK8F,QACxC9F,KAAK0Y,aAAUrX,GAMnB2X,eACI,MAAMhX,EAAWgR,SAASC,cAAc,OACxCjR,EAAS0M,UAAUK,IAAIlK,UAAUe,IAAIE,QACrC,MAAMsU,EAAWpH,SAASC,cAAc,OACxCmH,EAAS1L,UAAUK,IAAIlK,UAAUe,IAAIc,eACrC0T,EAASlH,OAAOlT,KAAKqa,cAAera,KAAKqY,eAAevF,QAAS9S,KAAKoY,aAAatF,QAAS9S,KAAKmY,cAAcrF,QAAS9S,KAAKkY,aAAapF,SAC1I,MAAMwH,EAAWtH,SAASC,cAAc,OACxCqH,EAAS5L,UAAUK,IAAIlK,UAAUe,IAAIyB,eACrCiT,EAASjH,YAAYrT,KAAKsY,aAAaxF,SACvCwH,EAASjH,YAAYrT,KAAKuY,aAAazF,SACvCwH,EAASjH,YAAYrT,KAAKwY,eAAe1F,SACzCwH,EAASjH,YAAYrT,KAAKyY,eAAe3F,SACzC,MAAM7M,EAAU+M,SAASC,cAAc,OASvC,GARAhN,EAAQyI,UAAUK,IAAIlK,UAAUe,IAAIK,SACpCA,EAAQiN,UAAUlT,KAAKua,UACnBva,KAAKuP,SAASuB,SAAS3G,QAAQtC,QAC/B7F,EAAS0M,UAAUK,IAAIlK,UAAUe,IAAIiC,QAErC7H,KAAKuP,SAASuB,SAAS3G,QAAQlD,eAC/BjF,EAAS0M,UAAUK,IAAI,iBAEvB/O,KAAKuP,SAASuB,SAAS3G,QAAQhE,YAC/BnG,KAAK6Y,UACL7Y,KAAKkR,SAAU,CACflP,EAAS0M,UAAUK,IAAIlK,UAAUe,IAAIO,YACmB,QAApDnG,KAAKuP,SAASuB,SAAS3G,QAAQQ,kBAC/B3I,EAASqR,YAAYpN,GAEzB,MAAMgO,EAAMjB,SAASC,cAAc,OAWnC,OAVAgB,EAAIvF,UAAUK,IAAI,UAClBqL,EAAS1L,UAAUK,IAAI,WACvBuL,EAAS5L,UAAUK,IAAI,WACvBkF,EAAIZ,YAAY+G,GAChBnG,EAAIZ,YAAYiH,GAChBtY,EAASqR,YAAYY,GACmC,WAApDjU,KAAKuP,SAASuB,SAAS3G,QAAQQ,kBAC/B3I,EAASqR,YAAYpN,QAEzBjG,KAAK0Y,QAAU1W,GAGqC,QAApDhC,KAAKuP,SAASuB,SAAS3G,QAAQQ,kBAC/B3I,EAASqR,YAAYpN,GAErBjG,KAAK6Y,WACD7Y,KAAKkR,WACLkJ,EAAS1L,UAAUK,IAAIlK,UAAUe,IAAIgC,UACW,UAA5C5H,KAAKuP,SAASuB,SAAS3G,QAAQO,UAC/B0P,EAAS1L,UAAUK,IAAIlK,UAAUe,IAAIN,OAE7CtD,EAASqR,YAAY+G,IAErBpa,KAAKkR,WACDlR,KAAK6Y,WACLyB,EAAS5L,UAAUK,IAAIlK,UAAUe,IAAIgC,UACW,UAA5C5H,KAAKuP,SAASuB,SAAS3G,QAAQO,UAC/B4P,EAAS5L,UAAUK,IAAIlK,UAAUe,IAAIN,OAE7CtD,EAASqR,YAAYiH,IAE+B,WAApDta,KAAKuP,SAASuB,SAAS3G,QAAQQ,kBAC/B3I,EAASqR,YAAYpN,GAEzB,MAAMuU,EAAQxH,SAASC,cAAc,OACrCuH,EAAM9L,UAAUK,IAAI,SACpByL,EAAMxI,aAAa,oBAAqB,IACxChQ,EAASqR,YAAYmH,GACrBxa,KAAK0Y,QAAU1W,EAKnBkP,eACI,OAAQlR,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWG,QAC7CjL,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW9J,OACvChB,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW7J,SAC1CjB,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW5J,SAKtD2X,eACI,OAAQ7Y,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWC,WAC7C/K,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWhK,MACvCd,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAW/J,OAC1Cf,KAAKuP,SAASuB,SAAS3G,QAAQW,WAAWzK,MAMtDka,eACI,MAAMtU,EAAU,GAChB,GAAIjG,KAAKuP,SAASuB,SAAS3G,QAAQU,QAAQ1D,MAAO,CAC9C,MAAMiM,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAYlJ,OAC5CiM,EAAIpB,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAapE,OAC9DiM,EAAIC,YAAYrT,KAAKkS,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAMjD,QACnElB,EAAQ6N,KAAKV,GAEjB,IAAKpT,KAAKuP,SAASuB,SAAS3G,QAAQhE,YAChCnG,KAAK6Y,UACL7Y,KAAKkR,SAAU,CACf,IAAIuJ,EAAOC,EACqC,UAA5C1a,KAAKuP,SAASuB,SAAS3G,QAAQO,UAC/B+P,EAAQza,KAAKuP,SAASuB,SAASvF,aAAauB,WAC5C4N,EAAO1a,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAM/J,OAG5Coa,EAAQza,KAAKuP,SAASuB,SAASvF,aAAasB,WAC5C6N,EAAO1a,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAMC,MAEhD,MAAM+I,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAYwB,cAC5CuB,EAAIpB,aAAa,QAASyI,GAC1BrH,EAAIC,YAAYrT,KAAKkS,SAASwI,IAC9BzU,EAAQ6N,KAAKV,GAEjB,GAAIpT,KAAKuP,SAASuB,SAAS3G,QAAQU,QAAQL,MAAO,CAC9C,MAAM4I,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAY7F,OAC5C4I,EAAIpB,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAaf,OAC9D4I,EAAIC,YAAYrT,KAAKkS,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAMI,QACnEvE,EAAQ6N,KAAKV,GAEjB,GAAIpT,KAAKuP,SAASuB,SAAS3G,QAAQU,QAAQJ,MAAO,CAC9C,MAAM2I,EAAMJ,SAASC,cAAc,OACnCG,EAAIpB,aAAa,cAAe3B,EAAY5F,OAC5C2I,EAAIpB,aAAa,QAAShS,KAAKuP,SAASuB,SAASvF,aAAad,OAC9D2I,EAAIC,YAAYrT,KAAKkS,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAMK,QACnExE,EAAQ6N,KAAKV,GAEjB,OAAOnN,EAMXoU,oBACI,MAAMtU,EAAiBiN,SAASC,cAAc,OAC9ClN,EAAe2I,UAAUK,IAAIlK,UAAUe,IAAIG,gBAC3C,MAAMK,EAAW4M,SAASC,cAAc,OACxC7M,EAASsI,UAAUK,IAAIlK,UAAUe,IAAIQ,UACrCA,EAAS4L,aAAa,cAAe3B,EAAYjK,UACjDA,EAASiN,YAAYrT,KAAKkS,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAMhE,WACxE,MAAMmN,EAAWP,SAASC,cAAc,OACxCM,EAAS7E,UAAUK,IAAIlK,UAAUe,IAAII,QACrCuN,EAASvB,aAAa,cAAe3B,EAAYK,cACjD,MAAMrK,EAAO2M,SAASC,cAAc,OAKpC,OAJA5M,EAAKqI,UAAUK,IAAIlK,UAAUe,IAAIS,MACjCA,EAAK2L,aAAa,cAAe3B,EAAYhK,MAC7CA,EAAKgN,YAAYrT,KAAKkS,SAASlS,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAM/D,OACpEN,EAAemN,OAAO9M,EAAUmN,EAAUlN,GACnCN,EAQXmM,SAASyI,GACL,GAAkD,YAA9C3a,KAAKuP,SAASuB,SAAS3G,QAAQC,MAAM5G,KAAoB,CACzD,MAAMoX,EAAM5H,SAASC,cAAc,OAEnC,OADA2H,EAAI3I,UAAY,oBAAoB0I,YAC7BC,EAEX,MAAMF,EAAO1H,SAASC,cAAc,KAEpC,OADA4H,aAAaC,UAAU/L,IAAIgM,MAAML,EAAKhM,UAAWiM,EAAUpM,MAAM,MAC1DmM,EAOXM,WACI,MAAMC,EAAajb,KAAK2X,WACpBsD,GACAjb,KAAKuF,OACTvF,KAAKia,WACDgB,GACAjb,KAAKsF,QAQjB,MAAM4V,WACFrb,YAAYyP,GACRtP,KAAKuP,SAAWD,EAQpBjN,QAAQoS,EAAY0G,GAChB,IAAIzL,EACJ,GAAI1P,KAAKuP,SAASuB,SAASpH,aAAaG,cAAc2K,OAAS,GAC3DxU,KAAKob,mBAAmB3G,GACxB,OAAO,EAEX,GAAIzU,KAAKuP,SAASuB,SAASpH,aAAaI,aAAa0K,OAAS,IACzDxU,KAAKqb,kBAAkB5G,GACxB,OAAO,EAEX,IAAuE,QAAjE/E,EAAK1P,KAAKuP,SAASuB,SAASpH,aAAaK,0BAAuC,IAAP2F,OAAgB,EAASA,EAAG8E,QAAU,IACzB,IAAxFxU,KAAKuP,SAASuB,SAASpH,aAAaK,mBAAmB+K,QAAQL,EAAW9S,SAC1E,OAAO,EAEX,GAAI3B,KAAKuP,SAASuB,SAASpH,aAAaC,SACpC8K,EAAWlS,SAASvC,KAAKuP,SAASuB,SAASpH,aAAaC,QAASwR,GACjE,OAAO,EAEX,GAAInb,KAAKuP,SAASuB,SAASpH,aAAaE,SACpC6K,EAAW/R,QAAQ1C,KAAKuP,SAASuB,SAASpH,aAAaE,QAASuR,GAChE,OAAO,EAEX,GAAIA,IAAgB3b,EAAKwB,OACrBma,IAAgB3b,EAAKyB,SACrBka,IAAgB3b,EAAK0B,QAAS,CAC9B,GAAIlB,KAAKuP,SAASuB,SAASpH,aAAaO,cAAcuK,OAAS,GAC3DxU,KAAKsb,mBAAmB7G,GACxB,OAAO,EAEX,GAAIzU,KAAKuP,SAASuB,SAASpH,aAAaQ,aAAasK,OAAS,IACzDxU,KAAKub,kBAAkB9G,GACxB,OAAO,EAEX,GAAIzU,KAAKuP,SAASuB,SAASpH,aAAaM,sBAAsBwK,OAAS,EACnE,IAAK,IAAIlB,EAAI,EAAGA,EAAItT,KAAKuP,SAASuB,SAASpH,aAAaM,sBAAsBwK,OAAQlB,IAClF,GAAImB,EAAW7R,UAAU5C,KAAKuP,SAASuB,SAASpH,aAAaM,sBAAsBsJ,GAAGkI,KAAMxb,KAAKuP,SAASuB,SAASpH,aAAaM,sBAAsBsJ,GAAGmI,IACrJ,OAAO,EAIvB,OAAO,EAQXL,mBAAmBM,GACf,IAAK1b,KAAKuP,SAASuB,SAASpH,aAAaG,eACwB,IAA7D7J,KAAKuP,SAASuB,SAASpH,aAAaG,cAAc2K,OAClD,OAAO,EACX,MAAMmH,EAAgBD,EAAS3Z,OAAOsS,MAAMM,gBAAgBnV,EAAKa,OACjE,OAAOL,KAAKuP,SAASuB,SAASpH,aAAaG,cACtCgL,KAAKtR,GAAMA,EAAExB,OAAOsS,MAAMM,gBAAgBnV,EAAKa,SAC/CqU,MAAMnR,GAAMA,IAAMoY,IAQ3BN,kBAAkBK,GACd,IAAK1b,KAAKuP,SAASuB,SAASpH,aAAaI,cACuB,IAA5D9J,KAAKuP,SAASuB,SAASpH,aAAaI,aAAa0K,OACjD,OAAO,EACX,MAAMmH,EAAgBD,EAAS3Z,OAAOsS,MAAMM,gBAAgBnV,EAAKa,OACjE,OAAOL,KAAKuP,SAASuB,SAASpH,aAAaI,aACtC+K,KAAKtR,GAAMA,EAAExB,OAAOsS,MAAMM,gBAAgBnV,EAAKa,SAC/CqU,MAAMnR,GAAMA,IAAMoY,IAQ3BL,mBAAmBI,GACf,IAAK1b,KAAKuP,SAASuB,SAASpH,aAAaO,eACwB,IAA7DjK,KAAKuP,SAASuB,SAASpH,aAAaO,cAAcuK,OAClD,OAAO,EACX,MAAMmH,EAAgBD,EAAS1a,MAC/B,OAAOhB,KAAKuP,SAASuB,SAASpH,aAAaO,cAAcyK,MAAMnR,GAAMA,IAAMoY,IAQ/EJ,kBAAkBG,GACd,IAAK1b,KAAKuP,SAASuB,SAASpH,aAAaQ,cACuB,IAA5DlK,KAAKuP,SAASuB,SAASpH,aAAaQ,aAAasK,OACjD,OAAO,EACX,MAAMmH,EAAgBD,EAAS1a,MAC/B,OAAOhB,KAAKuP,SAASuB,SAASpH,aAAaQ,aAAawK,MAAMnR,GAAMA,IAAMoY,KAIlF,MAAMC,gBACFC,qBAAqBC,EAAiBC,GAClC,MAAMC,EAAa,GACnB,IAAIC,EAAO,GACX,MAAMC,EAAa,CAAChX,EAAK/E,EAAOgc,EAAcC,KAC1C,OAAQlX,GACJ,IAAK,cAAe,CAChB,MAAMmX,EAAWrc,KAAKsc,gBAAgBnc,EAAO,eAC7C,QAAiBkB,IAAbgb,EACA,OAAOA,EAEXxX,UAAUiD,cAAca,aAAa,cAAewT,EAAc,oBAEtE,IAAK,WAAY,CACb,MAAME,EAAWrc,KAAKsc,gBAAgBnc,EAAO,YAC7C,QAAiBkB,IAAbgb,EACA,OAAOA,EAEXxX,UAAUiD,cAAca,aAAa,WAAYwT,EAAc,oBAEnE,IAAK,UAAW,CACZ,QAAc9a,IAAVlB,EACA,OAAOA,EAEX,MAAMkc,EAAWrc,KAAKsc,gBAAgBnc,EAAO,wBAC7C,QAAiBkB,IAAbgb,EACA,OAAOA,EAEXxX,UAAUiD,cAAca,aAAa,uBAAwBwT,EAAc,oBAE/E,IAAK,UAAW,CACZ,QAAc9a,IAAVlB,EACA,OAAOA,EAEX,MAAMkc,EAAWrc,KAAKsc,gBAAgBnc,EAAO,wBAC7C,QAAiBkB,IAAbgb,EACA,OAAOA,EAEXxX,UAAUiD,cAAca,aAAa,uBAAwBwT,EAAc,oBAE/E,IAAK,gBACD,YAAc9a,IAAVlB,EACO,IAEXH,KAAKuc,sBAAsB,6BAA8Bpc,EAAOgc,GAC5Dhc,EAAMmD,QAAQC,GAAMA,EAAI,GAAKA,EAAI,KAAIiR,OAAS,GAC9C3P,UAAUiD,cAAcgB,iBAAiB,6BAA8B,EAAG,IACvE3I,GACX,IAAK,eACD,YAAckB,IAAVlB,EACO,IAEXH,KAAKuc,sBAAsB,4BAA6Bpc,EAAOgc,GAC3Dhc,EAAMmD,QAAQC,GAAMA,EAAI,GAAKA,EAAI,KAAIiR,OAAS,GAC9C3P,UAAUiD,cAAcgB,iBAAiB,4BAA6B,EAAG,IACtE3I,GACX,IAAK,qBACD,YAAckB,IAAVlB,EACO,IAEXH,KAAKuc,sBAAsB,kCAAmCpc,EAAOgc,GACjEhc,EAAMmD,QAAQC,GAAMA,EAAI,GAAKA,EAAI,IAAGiR,OAAS,GAC7C3P,UAAUiD,cAAcgB,iBAAiB,kCAAmC,EAAG,GAC5E3I,GACX,IAAK,eACD,YAAckB,IAAVlB,EACO,IAEXH,KAAKwc,oBAAoB,4BAA6Brc,EAAOgc,GACtDhc,GACX,IAAK,gBACD,YAAckB,IAAVlB,EACO,IAEXH,KAAKwc,oBAAoB,6BAA8Brc,EAAOgc,GACvDhc,GACX,IAAK,wBACD,QAAckB,IAAVlB,EACA,MAAO,GAENsc,MAAMC,QAAQvc,IACf0E,UAAUiD,cAAca,aAAazD,EAAKiX,EAAc,uDAE5D,MAAMQ,EAAcxc,EACpB,IAAK,IAAImT,EAAI,EAAGA,EAAIqJ,EAAYnI,OAAQlB,IACpCxU,OAAOE,KAAK2d,EAAYrJ,IAAIrU,SAAS2d,IACjC,MAAMC,EAAgB,GAAG3X,KAAOoO,MAAMsJ,IACtC,IAAIzd,EAAIwd,EAAYrJ,GAAGsJ,GACvB,MAAMP,EAAWrc,KAAKsc,gBAAgBnd,EAAG0d,GACpCR,GACDxX,UAAUiD,cAAca,aAAakU,SAAsB1d,EAAG,oBAElEwd,EAAYrJ,GAAGsJ,GAAMP,KAG7B,OAAOM,EACX,IAAK,mBACL,IAAK,OACL,IAAK,WACL,IAAK,sBACD,MAYMG,EAZe,CACjBnS,iBAAkB,CAAC,MAAO,SAAU,WACpCnH,KAAM,CAAC,QAAS,WAChBkH,SAAU,CAAC,QAAS,WAAY,SAAU,QAAS,WACnDqC,oBAAqB,CACjB,UACA,UACA,OACA,QACA,WAGwB7H,GAGhC,OAFK4X,EAAWhF,SAAS3X,IACrB0E,UAAUiD,cAAcU,sBAAsByT,EAAKc,UAAU,GAAI5c,EAAO2c,GACrE3c,EACX,IAAK,cACD,OAAOA,EACX,QACI,OAAQic,GACJ,IAAK,UACD,MAAiB,SAAVjc,IAA8B,IAAVA,EAC/B,IAAK,SACD,OAAQA,EACZ,IAAK,SACD,OAAOA,EAAM6c,WACjB,IAAK,SACD,MAAO,GACX,IAAK,WACD,OAAO7c,EACX,QACI0E,UAAUiD,cAAca,aAAasT,EAAKc,UAAU,GAAIZ,EAAcC,MAYpFa,EAAS,CAACC,EAAUC,EAAaC,KACnC,MAAMC,EAAqBve,OAAOE,KAAKke,GAAU5Z,QAAQC,IAAOzE,OAAOE,KAAKme,GAAarF,SAASvU,KAClG,GAAI8Z,EAAmB7I,OAAS,EAAG,CAC/B,MAAM8I,EAAmB1B,gBAAgB2B,uBACnCC,EAASH,EAAmBxI,KAAKtR,IACnC,IAAI8B,EAAQ,IAAI4W,EAAKc,UAAU,MAAMxZ,4BACjCka,EAAaH,EAAiB5I,MAAMgJ,GAAMA,EAAE5F,SAASvU,KAGzD,OAFIka,IACApY,GAAS,iBAAiBoY,OACvBpY,KAEXR,UAAUiD,cAAcQ,kBAAkBkV,GAE9C1e,OAAOE,KAAKme,GAAale,SAASiG,IAC9B,MAAMyY,EAAqBR,EAAYjY,GACvC,IAAIiX,SAAsBe,EAAShY,GAC/BkX,SAAqBuB,EACrBxd,EAAQ+c,EAAShY,GACrB,IAAKgY,EAASU,eAAe1Y,GAAM,CAC/B,GAAoB,cAAhBkX,GACkE,KAAhEjc,MAAAA,OAAqC,EAASA,EAAMqU,SAAiBiI,MAAMC,QAAQiB,GAErF,YADAP,EAAOlY,GAAOyY,GAGlBT,EAAShY,GAAOyY,EAChBxd,EAAQ+c,EAAShY,GAErB+W,GAAQ,IAAI/W,IACZkY,EAAOlY,GAAOgX,EAAWhX,EAAK/E,EAAOgc,EAAcC,GACjB,iBAAvBuB,GAA2C,gBAARzY,GAIzCuX,MAAMC,QAAQQ,EAAShY,MACxB+X,EAAOC,EAAShY,GAAMyY,EAAoBP,EAAOlY,IACjD+W,EAAOA,EAAKc,UAAU,EAAGd,EAAK4B,YAAY,IAAI3Y,OAElD+W,EAAOA,EAAKc,UAAU,EAAGd,EAAK4B,YAAY,IAAI3Y,OAP1C+W,EAAOA,EAAKc,UAAU,EAAGd,EAAK4B,YAAY,IAAI3Y,UAW1D,OADA+X,EAAOnB,EAAiBC,EAASC,GAC1BA,EAEX8B,sBAAsBhQ,EAASuL,GAC3B,MAAM0E,EAAQjQ,EAAQ8B,QACtB,IAAKmO,GAC6B,IAA9Bjf,OAAOE,KAAK+e,GAAOvJ,QACnBuJ,EAAMle,cAAgBme,aACtB,OAAO3E,EACX,IAAI4E,EAAc,GAGlB,MAAMC,EAAsBC,IACxB,MAAMC,EAAU,GAIhB,OAHAtf,OAAOE,KAAKmf,GAAQlf,SAASsE,IACzB6a,EAAQ7a,EAAE8a,eAAiB9a,KAExB6a,GAELE,EAAa,CAAC/P,EAAOyC,EAAOuN,EAAgBpe,KAE9C,MACMqe,EADoBN,EAAmBK,GACThQ,EAAMyC,GAAOqN,eAC3CI,EAAiB,GACvB,YAAkBpd,IAAdmd,IAGAD,EAAeC,GAAW3e,cAAgBf,QAC1CkS,IACAyN,EAAeD,GAAaF,EAAW/P,EAAOyC,EAAOuN,EAAeC,GAAYre,IAGhFse,EAAeD,GAAare,GAPrBse,GAWTC,EAAeR,EAAmB7E,GAuBxC,OAtBAva,OAAOE,KAAK+e,GACPza,QAAQC,GAAMA,EAAEwW,WAAWlV,UAAUE,WACrC8P,KAAKtR,GAAMA,EAAEwZ,UAAU,KACvB9d,SAASiG,IACV,IAAIsZ,EAAYE,EAAaxZ,EAAImZ,eAGjC,GAAInZ,EAAI4S,SAAS,KAAM,CAEnB,MAAMvJ,EAAQrJ,EAAIqJ,MAAM,KAExBiQ,EAAYE,EAAanQ,EAAM,GAAG8P,oBAChBhd,IAAdmd,GACAnF,EAAQmF,GAAW3e,cAAgBf,SACnCmf,EAAYO,GAAaF,EAAW/P,EAAO,EAAG8K,EAAQmF,GAAYT,EAAM,KAAK7Y,iBAI9D7D,IAAdmd,IACLP,EAAYO,GAAaT,EAAM,KAAK7Y,SAGrClF,KAAK6b,cAAcoC,EAAa5E,GAO3CsF,sBAAsBxf,GAClB,GAA2B,aAAvBA,EAAEU,YAAY4N,KACd,OAAOtO,EACX,GAA2B,SAAvBA,EAAEU,YAAY4N,KACd,OAAO9N,SAASS,QAAQjB,GAE5B,GAAiB,iBAANA,EAAiB,CACxB,MAAMkd,EAAW,IAAI1c,SAASR,GAC9B,MAAiC,SAA7Byf,KAAKC,UAAUxC,GACR,KAEJA,EAEX,OAAO,KAQXG,2BAA2BpU,EAAYjI,EAAOgc,GACrCM,MAAMC,QAAQvc,IACf0E,UAAUiD,cAAca,aAAaP,EAAY+T,EAAc,6BAEnE,IAAK,IAAI7I,EAAI,EAAGA,EAAInT,EAAMqU,OAAQlB,IAAK,CACnC,IAAInU,EAAIgB,EAAMmT,GACd,MAAM+I,EAAWrc,KAAKsc,gBAAgBnd,EAAGiJ,GACpCiU,GACDxX,UAAUiD,cAAca,aAAaP,SAAmBjJ,EAAG,oBAE/DgB,EAAMmT,GAAK+I,GASnBE,6BAA6BnU,EAAYjI,EAAOgc,KACvCM,MAAMC,QAAQvc,IAAUA,EAAMqU,QAAUrU,EAAMuU,MAAMnR,GAAmB,iBAANA,MAClEsB,UAAUiD,cAAca,aAAaP,EAAY+T,EAAc,oBASvEG,uBAAuBnd,EAAGiJ,GACL,iBAANjJ,GACP0F,UAAUiD,cAAcwB,aAE5B,MAAMwV,EAAY9e,KAAK2e,eAAexf,GAItC,OAHK2f,GACDja,UAAUiD,cAAcmB,kBAAkBb,EAAYjJ,GAEnD2f,EAEXvB,oCACI,GAAIvd,KAAK+e,UACL,OAAO/e,KAAK+e,UAChB,MAAMC,EAAW,CAACC,EAAGC,EAAM,KAAOzC,MAAMC,QAAQuC,GAC1C,GACAngB,OAAOmgB,KAAOA,EACVngB,OAAOqgB,QAAQF,GAAGG,SAAQ,EAAElgB,EAAGmgB,KAAOL,EAASK,EAAG,IAAIH,EAAKhgB,MAC3DggB,EAAI3W,KAAK,KAEnB,OADAvI,KAAK+e,UAAYC,EAASvV,GACnBzJ,KAAK+e,UAOhBO,0BAA0BC,GAClBA,EAAO7V,aAAaC,SAAW4V,EAAO7V,aAAaE,UAC/C2V,EAAO7V,aAAaC,QAAQjH,QAAQ6c,EAAO7V,aAAaE,UACxD/E,UAAUiD,cAAcsB,yBAAyB,4BAEjDmW,EAAO7V,aAAaE,QAAQrH,SAASgd,EAAO7V,aAAaC,UACzD9E,UAAUiD,cAAcsB,yBAAyB,+BAkajE,MAAMhL,EAXe,CACjBohB,UAAW,KACXC,cAhZJ,MAAMA,cACF5f,YAAYiO,EAASuL,EAAU,IAC3BrZ,KAAKsQ,iBAAmB,EACxBtQ,KAAK0f,aAAe,GACpB1f,KAAK6Q,mBAAqB,EAC1B7Q,KAAK2f,aAAc,EACnB3f,KAAK4f,0BAA4B,EACjC5f,KAAK+P,UAAY,IAAIpQ,SAMrBK,KAAK6f,kBAAoB,KAErB,IAAIC,EACJ,GAAgD,iBAArC9f,KAAK8Q,SAAS3G,QAAQgB,YAAyB,CACtD,IAAI4U,EAAkB,IAAK5d,KAAK6d,aAAahgB,KAAK8Q,SAASvF,aAAatL,QAASggB,kBAAkBF,gBACnGD,EAAa,IAAIngB,SAASD,EAAiBC,SAASugB,WAAWlgB,KAAKwV,OAAOrV,MAAOH,KAAK8Q,SAAS3G,QAAQgB,YAAa,CAAElL,OAAQD,KAAK8Q,SAASvF,aAAatL,OAAQ8f,gBAAAA,IAAmBI,aAErLL,MAAAA,OAA+C,EAASA,EAAWzd,UACnEyd,EAAW5f,UAAUF,KAAK8Q,SAASvF,aAAatL,QAChDD,KAAK8P,MAAMK,UAAU2P,IAGrB9f,KAAK+U,cAAc,CACfvR,KAAMqB,UAAUG,OAAOK,MACvBqQ,OAAQ7Q,UAAUiD,cAAcI,mBAChC7H,KAAMyf,KASlB9f,KAAKogB,kBAAoB,KACrBpgB,KAAKwO,UAEJV,GACDjJ,UAAUiD,cAAcoB,mBAE5BlJ,KAAK+X,SAAWjK,EAChB9N,KAAK8Q,SAAW9Q,KAAKqgB,mBAAmBhH,EAAS5P,GAAgB,GACjEzJ,KAAK+P,UAAU7P,UAAUF,KAAK8Q,SAASvF,aAAatL,QACpDD,KAAK+T,QAAS,EACd/T,KAAKwQ,SAAW,IAAIkH,QAAQ1X,MAC5BA,KAAKkQ,YAAc,IAAIgL,WAAWlb,MAClCA,KAAK8P,MAAQ,IAAIuE,MAAMrU,MACvBA,KAAKiY,QAAU,IAAI5I,QAAQrP,MAC3BA,KAAKsgB,mBACLtgB,KAAKugB,oBACDvgB,KAAK8Q,SAAS3G,QAAQtC,QACtB7H,KAAKwQ,SAASlL,OAEtB6H,eACI,OAAOnN,KAAK+P,UAGhBoJ,oBACI,OAAOnZ,KAAKwgB,QAShBC,cAAcpH,EAASqH,GAAQ,GAEvB1gB,KAAK8Q,SADL4P,EACgB1gB,KAAKqgB,mBAAmBhH,EAAS5P,GAEjCzJ,KAAKqgB,mBAAmBhH,EAASrZ,KAAK8Q,UAC1D9Q,KAAKwQ,SAASwK,WAOlBxM,SACQxO,KAAK2f,aAET3f,KAAKwQ,SAAShC,SAOlBlJ,OACQtF,KAAK2f,aAET3f,KAAKwQ,SAASlL,OAOlBC,OACIvF,KAAKwQ,SAASjL,OAOlBob,UACI,IAAIjR,EACJ1P,KAAK2f,aAAc,EAGI,QAAtBjQ,EAAK1P,KAAKwV,cAA2B,IAAP9F,GAAyBA,EAAGsC,aAAa,WAAY,YACpFhS,KAAKwQ,SAASjL,OAOlBqb,SACI,IAAIlR,EACJ1P,KAAK2f,aAAc,EACI,QAAtBjQ,EAAK1P,KAAKwV,cAA2B,IAAP9F,GAAyBA,EAAGmR,gBAAgB,YAO/ErW,QACIxK,KAAK8P,MAAMtF,QASfsW,UAAUC,EAAYC,GACQ,iBAAfD,IACPA,EAAa,CAACA,IAElB,IAAIE,EAAgB,GAKhBA,EAJCxE,MAAMC,QAAQsE,GAICA,EAHA,CAACA,GAKjBD,EAAWvM,SAAWyM,EAAczM,QACpC3P,UAAUiD,cAAcqB,kBAE5B,MAAM+X,EAAc,GACpB,IAAK,IAAI5N,EAAI,EAAGA,EAAIyN,EAAWvM,OAAQlB,IAAK,CACxC,MAAM6N,EAAYJ,EAAWzN,GAQ7B,GAPKmJ,MAAMC,QAAQ1c,KAAK0f,aAAayB,MACjCnhB,KAAK0f,aAAayB,GAAa,IAEnCnhB,KAAK0f,aAAayB,GAAWrN,KAAKmN,EAAc3N,IAChD4N,EAAYpN,KAAK,CACbsN,YAAaphB,KAAKqhB,aAAaC,KAAKthB,KAAMmhB,EAAWnhB,KAAK0f,aAAayB,GAAW3M,OAAS,KAErE,IAAtBuM,EAAWvM,OACX,OAAO0M,EAAY,GAG3B,OAAOA,EAMXK,UACI,IAAI7R,EAAI8R,EACRxhB,KAAKwQ,SAASjL,OAEdvF,KAAKwQ,SAASyJ,WACS,QAAtBvK,EAAK1P,KAAKwV,cAA2B,IAAP9F,GAAyBA,EAAGsK,oBAAoB,SAAUha,KAAK6f,mBAC1F7f,KAAK8Q,SAAS5D,mBACS,QAAtBsU,EAAKxhB,KAAKwV,cAA2B,IAAPgM,GAAyBA,EAAGxH,oBAAoB,QAASha,KAAKogB,oBAEjGpgB,KAAKwgB,QAAQxG,oBAAoB,QAASha,KAAKogB,mBAC/CpgB,KAAK0f,aAAe,GAQxB3K,cAAc0M,GAEV,GAAIA,GAASA,EAAM7D,eAAe,QAAS,CACvC,MAAMvd,KAAEA,EAAI2U,QAAEA,EAAOC,QAAEA,GAAYwM,EAKnC,GADAzhB,KAAK4f,4BACAvf,GAAQ2U,GAAW3U,EAAKsC,OAAOqS,KAC9BC,IAAY5U,IAAS2U,GACvBhV,KAAK4f,0BAA4B,EAEjC,YADA5f,KAAK4f,0BAA4B,GAGrC5f,KAAK0hB,wBAAwBD,GACH,OAA1BhiB,EAAoB,cAAwC,IAA1BA,EAAoB,SAAwBA,EAAoB,QAAEO,KAAK+X,UAAU4J,QAAQliB,EAAoB,QAAEmiB,MAAMH,EAAMje,KAAM,CAAEnD,KAAMA,KAG/K,GADAL,KAAK+X,SAAS8J,cAAc,IAAIC,YAAYL,EAAMje,KAAM,CAAEue,OAAQN,KAC9DxT,OAAO+T,OAAQ,EAEf3jB,EADU4P,OAAO+T,QACfhiB,KAAK+X,UAAU4J,QAAQF,GAEb,MAEPhF,MAAMC,QAAQ1c,KAAK0f,aAAa+B,EAAMje,QAI3CxD,KAAK0f,aAAa+B,EAAMje,MAAMvE,SAASgjB,IACnCA,EAASR,OAGjBS,GACAliB,KAAK4f,0BAA4B,EAOrCrP,YAAYnP,GACRpB,KAAK+U,cAAc,CACfvR,KAAMqB,UAAUG,OAAOI,OACvBD,OAAQ/D,EACR+L,SAAUnN,KAAK+P,UAAUlP,QAGjCwgB,aAAac,EAAWnR,GACpBhR,KAAK0f,aAAayC,GAAWxM,OAAO3E,EAAO,GAS/CqP,mBAAmBd,EAAQxD,EAASqG,GAAiB,GACjD,IAAI1S,EASJ,GARA6P,EAAS3D,gBAAgBC,cAAc0D,EAAQxD,GAC3CqG,IACA7C,EAAS3D,gBAAgBkC,eAAe9d,KAAK+X,SAAUwH,IAC3D3D,gBAAgB0D,mBAAmBC,GACnCA,EAAOpS,SAAWoS,EAAOpS,SAASjN,UAAUqf,EAAOhU,aAAatL,QAC3DD,KAAK+P,UAAUpN,OAAO4c,EAAOpS,YAC9BnN,KAAK+P,UAAYwP,EAAOpS,UAExBoS,EAAOpV,QAAQgB,YAAa,CAC5B,IAAIA,EAAcoU,EAAOpV,QAAQgB,YAC7BL,EAAayU,EAAOpV,QAAQW,WAChCA,EAAWhK,KAAO,IAAIuhB,KAAKlX,GAC3BL,EAAW/J,MAAQ,IAAIshB,KAAKlX,GAC5BL,EAAWzK,KAAO,IAAIgiB,KAAKlX,GAC3BL,EAAW9J,MAAQ,KAAOqhB,KAAKlX,GAC/BL,EAAWI,kBAAoB,IAAImX,KAAKlX,GACxCL,EAAW7J,QAAU,IAAIohB,KAAKlX,GAC9BL,EAAW5J,QAAU,IAAImhB,KAAKlX,GAyClC,OAnCIoU,EAAOpV,QAAQW,WAAWhK,OAC1Bd,KAAK6Q,mBAAqB,GAE1B0O,EAAOpV,QAAQW,WAAW/J,QAC1Bf,KAAK6Q,mBAAqB,GAE1B0O,EAAOpV,QAAQW,WAAWzK,OAC1BL,KAAK6Q,mBAAqB,GAE9B7Q,KAAKsQ,iBAAmBhM,KAAKoV,IAAI1Z,KAAK6Q,mBAAoB7Q,KAAKsQ,kBAE3D9C,EAAgBxN,KAAKsQ,kBAAkB7C,OAAS8R,EAAOpV,QAAQO,WAC/D1K,KAAKsQ,iBAAmBhM,KAAKoV,IAAIlM,EAAgB8U,WAAW/e,GAAMA,EAAEkK,OAAS8R,EAAOpV,QAAQO,WAAW1K,KAAK6Q,sBAoBnF,QAAxBnB,EAAK1P,KAAKwQ,gBAA6B,IAAPd,OAAgB,EAASA,EAAGkJ,YAC7D5Y,KAAKwQ,SAAS4B,QAAQ,OAEnBmN,EAOXe,mBACI,GAA6B,SAAzBtgB,KAAK+X,SAASwK,QACdviB,KAAKwV,OAASxV,KAAK+X,aAElB,CACD,IAAIyK,EAAQxiB,KAAK+X,SAASnI,QAAQ6S,cAE9BziB,KAAKwV,OADInU,MAATmhB,GAA+B,WAATA,EACRxiB,KAAK+X,SAASxF,cAAc,SAG5BvS,KAAK+X,SAASxF,cAAciQ,GAGlD,GAAKxiB,KAAKwV,OAAV,CAMA,GAJAxV,KAAKwV,OAAOiE,iBAAiB,SAAUzZ,KAAK6f,mBACxC7f,KAAK8Q,SAAS5D,kBACdlN,KAAKwV,OAAOiE,iBAAiB,QAASzZ,KAAKogB,mBAE3CpgB,KAAKwV,OAAOrV,MAAO,CACnB,MAAM2e,EAAYlD,gBAAgBU,gBAAgBtc,KAAKwV,OAAOrV,MAAO,oBACnDkB,IAAdyd,GACA9e,KAAK8P,MAAMK,UAAU2O,GAEzB9e,KAAKwV,OAAOrV,OACZH,KAAKwV,OAAOqM,cAAc,IAAID,MAAM,YAO5CrB,oBACI,GAAIvgB,KAAK8Q,SAAS3G,QAAQtC,OACtB,OACJ,IAAI2a,EAAQxiB,KAAK+X,SAASnI,QAAQ8S,eACrB,WAATF,IACAA,EAAQ,qCAEZxiB,KAAKwgB,QACQnf,MAATmhB,EAAqBxiB,KAAK+X,SAAW/X,KAAK+X,SAASxF,cAAciQ,GACrExiB,KAAKwgB,QAAQ/G,iBAAiB,QAASzZ,KAAKogB,mBAOhDsB,wBAAwBjjB,GACpB,IAAIiR,EAAI8R,GAGPxhB,KAAK8Q,SAASxD,wBACXtN,KAAK8Q,SAAS3G,QAAQtC,QACtB7H,KAAK8Q,SAAS3G,QAAQhE,aAErBnG,KAAKwQ,SAASU,WAGiB,QAA/BxB,EAAK1P,KAAKwQ,SAAS1K,cAA2B,IAAP4J,OAAgB,EAASA,EAAGkD,uBAAuB/N,UAAUe,IAAIN,MAAM,GAAGoJ,UAAUC,SAAS9J,UAAUe,IAAIyB,kBAKjJ5I,EAAEuW,SAAWhV,KAAK8Q,SAASzF,YAC5B5M,EAAEuW,UAA8B,QAAjBwM,EAAK/iB,EAAE4B,YAAyB,IAAPmhB,OAAgB,EAASA,EAAG7e,OAAOlE,EAAEuW,YAGlF2N,aAAa3iB,KAAK4iB,2BAClB5iB,KAAK4iB,0BAA4B3T,YAAW,KACpCjP,KAAKwQ,SAAS1K,QACd9F,KAAKiY,QAAQzI,GAAG,CACZG,cAAe3P,KAAKwQ,SAAS1K,OAAOyM,cAAc,IAAI1N,UAAUe,IAAII,eACrEqK,EAAYwB,gBAEpB7R,KAAK8Q,SAASvD,0CAOrB1I,UAAWA,UACX4E,eAAgBA,EAChB9J,SAAUA,SAQdkjB,gBAAgC,SAAUC,EAAQC,GAChD,OAAoB,IAAhB/iB,KAAKwU,OACApW,EAAc4kB,iBAAiBhjB,KAAM8iB,EAAQC,GAG/C/iB,KAAKijB,MAAK,WACf7kB,EAAc4kB,iBAAiBhjB,KAAM8iB,EAAQC,OAIjDC,iBAAiC,SAAUE,EAAIJ,EAAQC,GACrD,IAAII,EAAO1jB,EAAoB,QAAEyjB,GAAIC,KAAK/kB,EAAcyG,UAAUE,SAUlE,GATsB,iBAAX+d,IACTA,EAASrjB,EAAoB,QAAE2jB,OAAO,GAAIhlB,EAAcqL,eAAgBqZ,IAGrEK,IACHA,EAAO,IAAI/kB,EAAcqhB,cAAchgB,EAAoB,QAAEyjB,GAAI,GAAIJ,GACrErjB,EAAoB,QAAEyjB,GAAIC,KAAK/kB,EAAcyG,UAAUE,QAASoe,IAG5C,iBAAXL,EAAqB,CAC9B,QAAqBzhB,IAAjB8hB,EAAKL,GACP,MAAM,IAAIne,MAAM,oBAAoBme,MAEtC,QAAiBzhB,IAAb0hB,EACF,OAAOI,EAAKL,KACP,CACU,SAAXA,IACFK,EAAKE,6CAA8C,GAErD,MAAMC,EAAMH,EAAKL,GAAQC,GAEzB,OADAI,EAAKE,6CAA8C,EAC5CC,KAKbC,uBAAuC,SAAUC,GAC/C,IACEC,EADEC,EAAWF,EAASL,KAAK,UAQ7B,OALKO,IACHA,EAAWF,EAASG,KAAK,SAAW,GACpCD,EAAW,WAAWrB,KAAKqB,GAAYA,EAAW,MAEpDD,EAAYhkB,EAAoB,QAAEikB,GACT,IAArBD,EAAUjP,OACLgP,GAGJC,EAAUN,KAAK/kB,EAAcyG,UAAUE,UAC1CtF,EAAoB,QAAE2jB,OAAO,GAAIK,EAAUN,OAAQ1jB,EAAoB,QAAEO,MAAMmjB,QAG1EM,KAmFHhW,EAAO,gBAQb,OAPAhO,EAAoB,QAAEmkB,GAAGnW,GAAQrP,EAAcykB,gBAC/CpjB,EAAoB,QAAEmkB,GAAGnW,GAAMoW,YAAczlB,EAAcqhB,cAC3DhgB,EAAoB,QAAEmkB,GAAGnW,GAAMqW,WAAa,WAE1C,OADArkB,EAAoB,QAAEmkB,GAAGnW,GAAQhO,EAAoB,QAAEmkB,GAAGnW,GACnDrP,EAAcykB,iBAGhBzkB,EA19GS,CA49GlB4jB,OAAQ1jB,MAAOylB","sourcesContent":["var tempusDominus = (function ($, luxon, core) {\n    'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () {\n                            return e[k];\n                        }\n                    });\n                }\n            });\n        }\n        n['default'] = e;\n        return n;\n    }\n\n    var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n    var luxon__namespace = /*#__PURE__*/_interopNamespace(luxon);\n\n    var Unit;\r\n    (function (Unit) {\r\n        Unit[\"seconds\"] = \"seconds\";\r\n        Unit[\"minutes\"] = \"minutes\";\r\n        Unit[\"hours\"] = \"hours\";\r\n        Unit[\"date\"] = \"date\";\r\n        Unit[\"month\"] = \"month\";\r\n        Unit[\"year\"] = \"year\";\r\n    })(Unit || (Unit = {}));\r\n    /**\r\n     * For the most part this object behaves exactly the same way\r\n     * as the native Date object with a little extra spice.\r\n     */\r\n    class DateTime extends Date {\r\n        constructor() {\r\n            super(...arguments);\r\n            /**\r\n             * Used with Intl.DateTimeFormat\r\n             */\r\n            this.locale = 'default';\r\n        }\r\n        /**\r\n         * Chainable way to set the {@link locale}\r\n         * @param value\r\n         */\r\n        setLocale(value) {\r\n            this.locale = value;\r\n            return this;\r\n        }\r\n        /**\r\n         * Converts a plain JS date object to a DateTime object.\r\n         * Doing this allows access to format, etc.\r\n         * @param  date\r\n         */\r\n        static convert(date) {\r\n            if (!date)\r\n                throw `A date is required`;\r\n            return new DateTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\r\n        }\r\n        /**\r\n         * Native date manipulations are not pure functions. This function creates a duplicate of the DateTime object.\r\n         */\r\n        get clone() {\r\n            return new DateTime(this.year, this.month, this.date, this.hours, this.minutes, this.seconds, this.getMilliseconds()).setLocale(this.locale);\r\n        }\r\n        /**\r\n         * Sets the current date to the start of the {@link unit} provided\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).startOf('month')\r\n         * would return April 1, 2021, 12:00:00.000 AM (midnight)\r\n         * @param unit\r\n         */\r\n        startOf(unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            switch (unit) {\r\n                case 'seconds':\r\n                    this.setMilliseconds(0);\r\n                    break;\r\n                case 'minutes':\r\n                    this.setSeconds(0, 0);\r\n                    break;\r\n                case 'hours':\r\n                    this.setMinutes(0, 0, 0);\r\n                    break;\r\n                case 'date':\r\n                    this.setHours(0, 0, 0, 0);\r\n                    break;\r\n                case 'weekDay':\r\n                    this.startOf(Unit.date);\r\n                    this.manipulate(0 - this.weekDay, Unit.date);\r\n                    break;\r\n                case 'month':\r\n                    this.startOf(Unit.date);\r\n                    this.setDate(1);\r\n                    break;\r\n                case 'year':\r\n                    this.startOf(Unit.date);\r\n                    this.setMonth(0, 1);\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Sets the current date to the end of the {@link unit} provided\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).endOf('month')\r\n         * would return April 30, 2021, 11:59:59.999 PM\r\n         * @param unit\r\n         */\r\n        endOf(unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            switch (unit) {\r\n                case 'seconds':\r\n                    this.setMilliseconds(999);\r\n                    break;\r\n                case 'minutes':\r\n                    this.setSeconds(59, 999);\r\n                    break;\r\n                case 'hours':\r\n                    this.setMinutes(59, 59, 999);\r\n                    break;\r\n                case 'date':\r\n                    this.setHours(23, 59, 59, 999);\r\n                    break;\r\n                case 'weekDay':\r\n                    this.startOf(Unit.date);\r\n                    this.manipulate(6 - this.weekDay, Unit.date);\r\n                    break;\r\n                case 'month':\r\n                    this.endOf(Unit.date);\r\n                    this.manipulate(1, Unit.month);\r\n                    this.setDate(0);\r\n                    break;\r\n                case 'year':\r\n                    this.endOf(Unit.date);\r\n                    this.manipulate(1, Unit.year);\r\n                    this.setDate(0);\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Change a {@link unit} value. Value can be positive or negative\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).manipulate(1, 'month')\r\n         * would return May 30, 2021, 11:45:32.984 AM\r\n         * @param value A positive or negative number\r\n         * @param unit\r\n         */\r\n        manipulate(value, unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            this[unit] += value;\r\n            return this;\r\n        }\r\n        /**\r\n         * Returns a string format.\r\n         * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\r\n         * for valid templates and locale objects\r\n         * @param template An object. Uses browser defaults otherwise.\r\n         * @param locale Can be a string or an array of strings. Uses browser defaults otherwise.\r\n         */\r\n        format(template, locale = this.locale) {\r\n            if (typeof template === 'string')\r\n                return luxon__namespace.DateTime.fromJSDate(this).setLocale(locale).toFormat(template);\r\n            else\r\n                return new Intl.DateTimeFormat(locale, template).format(this);\r\n        }\r\n        /**\r\n         * Check if the date is valid //***\r\n         * An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself.\r\n         */\r\n        get isValid() {\r\n            return this.getTime() === this.getTime();\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is before this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isBefore(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() < compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            return (this.clone.startOf(unit).valueOf() < compare.clone.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is after this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isAfter(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() > compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            return (this.clone.startOf(unit).valueOf() > compare.clone.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is same this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isSame(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() === compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            compare = DateTime.convert(compare);\r\n            return (this.clone.startOf(unit).valueOf() === compare.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Check if this is between two other DateTimes, optionally looking at unit scale. The match is exclusive.\r\n         * @param left\r\n         * @param right\r\n         * @param unit.\r\n         * @param inclusivity. A [ indicates inclusion of a value. A ( indicates exclusion.\r\n         * If the inclusivity parameter is used, both indicators must be passed.\r\n         */\r\n        isBetween(left, right, unit, inclusivity = '()') {\r\n            if (unit && this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            const leftInclusivity = inclusivity[0] === '(';\r\n            const rightInclusivity = inclusivity[1] === ')';\r\n            return (((leftInclusivity\r\n                ? this.isAfter(left, unit)\r\n                : !this.isBefore(left, unit)) &&\r\n                (rightInclusivity\r\n                    ? this.isBefore(right, unit)\r\n                    : !this.isAfter(right, unit))) ||\r\n                ((leftInclusivity\r\n                    ? this.isBefore(left, unit)\r\n                    : !this.isAfter(left, unit)) &&\r\n                    (rightInclusivity\r\n                        ? this.isAfter(right, unit)\r\n                        : !this.isBefore(right, unit))));\r\n        }\r\n        /**\r\n         * Returns flattened object of the date. Does not include literals\r\n         * @param locale\r\n         * @param template\r\n         */\r\n        parts(locale = this.locale, template = { dateStyle: 'full', timeStyle: 'long' }) {\r\n            const parts = {};\r\n            new Intl.DateTimeFormat(locale, template)\r\n                .formatToParts(this)\r\n                .filter((x) => x.type !== 'literal')\r\n                .forEach((x) => (parts[x.type] = x.value));\r\n            return parts;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getSeconds()\r\n         */\r\n        get seconds() {\r\n            return this.getSeconds();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setSeconds()\r\n         */\r\n        set seconds(value) {\r\n            this.setSeconds(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get secondsFormatted() {\r\n            // return this.seconds < 10 ? `0${this.seconds}` : `${this.seconds}`; //***\r\n            return this.format({ second: \"2-digit\" }); //***\r\n        }\r\n        /**\r\n         * Shortcut to Date.getMinutes()\r\n         */\r\n        get minutes() {\r\n            return this.getMinutes();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setMinutes()\r\n         */\r\n        set minutes(value) {\r\n            this.setMinutes(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get minutesFormatted() {\r\n            //***return this.minutes < 10 ? `0${this.minutes}` : `${this.minutes}`;\r\n            return this.format({ minute: \"2-digit\" }); //***\r\n        }\r\n        /**\r\n         * Shortcut to Date.getHours()\r\n         */\r\n        get hours() {\r\n            return this.getHours();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setHours()\r\n         */\r\n        set hours(value) {\r\n            this.setHours(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get hoursFormatted() {\r\n            //***return this.hours < 10 ? `0${this.hours}` : `${this.hours}`;\r\n            return this.format({ hour: \"2-digit\" }); //***\r\n        }\r\n        /**\r\n         * Returns two digit hours but in twelve hour mode e.g. 13 -> 1\r\n         */\r\n        get twelveHoursFormatted() {\r\n            //*** let hour = this.hours;\r\n            // if (hour > 12) hour = hour - 12;\r\n            // if (hour === 0) hour = 12;\r\n            // return hour < 10 ? `0${hour}` : `${hour}`;\r\n            return this.format({ hour12: true, hour: \"2-digit\" }); //***\r\n        }\r\n        /**\r\n         * Get the meridiem of the date. E.g. AM or PM.\r\n         * If the {@link locale} provides a \"dayPeriod\" then this will be returned,\r\n         * otherwise it will return AM or PM.\r\n         * @param locale\r\n         */\r\n        meridiem(locale = this.locale) {\r\n            return this.hours < 12 ? 'AM' : 'PM';\r\n        }\r\n        /**\r\n         * Shortcut to Date.getDate()\r\n         */\r\n        get date() {\r\n            return this.getDate();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setDate()\r\n         */\r\n        set date(value) {\r\n            this.setDate(value);\r\n        }\r\n        /**\r\n         * Return two digit date\r\n         */\r\n        get dateFormatted() {\r\n            return this.date < 10 ? `0${this.date}` : `${this.date}`;\r\n        }\r\n        // https://github.com/you-dont-need/You-Dont-Need-Momentjs#week-of-year\r\n        /**\r\n         * Gets the week of the year\r\n         */\r\n        get week() {\r\n            const MILLISECONDS_IN_WEEK = 604800000;\r\n            const firstDayOfWeek = 1; // monday as the first day (0 = sunday)\r\n            const startOfYear = new Date(this.year, 0, 1);\r\n            startOfYear.setDate(startOfYear.getDate() + (firstDayOfWeek - (startOfYear.getDay() % 7)));\r\n            return (Math.round((this.valueOf() - startOfYear.valueOf()) / MILLISECONDS_IN_WEEK) + 1);\r\n        }\r\n        /**\r\n         * Shortcut to Date.getDay()\r\n         */\r\n        get weekDay() {\r\n            return this.getDay();\r\n        }\r\n        /**\r\n         * Shortcut to Date.getMonth()\r\n         */\r\n        get month() {\r\n            return this.getMonth();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setMonth()\r\n         */\r\n        set month(value) {\r\n            this.setMonth(value);\r\n        }\r\n        /**\r\n         * Return two digit, human expected month. E.g. January = 1, December = 12\r\n         */\r\n        get monthFormatted() {\r\n            return this.month + 1 < 10 ? `0${this.month}` : `${this.month}`;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getFullYear()\r\n         */\r\n        get year() {\r\n            return this.getFullYear();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setFullYear()\r\n         */\r\n        set year(value) {\r\n            this.setFullYear(value);\r\n        }\r\n    }\n\n    class TdError extends Error {\r\n    }\r\n    class ErrorMessages {\r\n        constructor() {\r\n            this.base = 'TD:';\r\n            //#endregion\r\n            //#region used with notify.error\r\n            /**\r\n             * Used with an Error Event type if the user selects a date that\r\n             * fails restriction validation.\r\n             */\r\n            this.failedToSetInvalidDate = 'Failed to set invalid date';\r\n            /**\r\n             * Used with an Error Event type when a user changes the value of the\r\n             * input field directly, and does not provide a valid date.\r\n             */\r\n            this.failedToParseInput = 'Failed parse input field';\r\n            //#endregion\r\n        }\r\n        //#region out to console\r\n        /**\r\n         * Throws an error indicating that a key in the options object is invalid.\r\n         * @param optionName\r\n         */\r\n        unexpectedOption(optionName) {\r\n            const error = new TdError(`${this.base} Unexpected option: ${optionName} does not match a known option.`);\r\n            error.code = 1;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error indicating that one more keys in the options object is invalid.\r\n         * @param optionName\r\n         */\r\n        unexpectedOptions(optionName) {\r\n            const error = new TdError(`${this.base}: ${optionName.join(', ')}`);\r\n            error.code = 1;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option is provide an unsupported value.\r\n         * For example a value of 'cheese' for toolbarPlacement which only supports\r\n         * 'top', 'bottom', 'default'.\r\n         * @param optionName\r\n         * @param badValue\r\n         * @param validOptions\r\n         */\r\n        unexpectedOptionValue(optionName, badValue, validOptions) {\r\n            const error = new TdError(`${this.base} Unexpected option value: ${optionName} does not accept a value of \"${badValue}\". Valid values are: ${validOptions.join(', ')}`);\r\n            error.code = 2;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option value is the wrong type.\r\n         * For example a string value was provided to multipleDates which only\r\n         * supports true or false.\r\n         * @param optionName\r\n         * @param badType\r\n         * @param expectedType\r\n         */\r\n        typeMismatch(optionName, badType, expectedType) {\r\n            const error = new TdError(`${this.base} Mismatch types: ${optionName} has a type of ${badType} instead of the required ${expectedType}`);\r\n            error.code = 3;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option value is  outside of the expected range.\r\n         * For example restrictions.daysOfWeekDisabled excepts a value between 0 and 6.\r\n         * @param optionName\r\n         * @param lower\r\n         * @param upper\r\n         */\r\n        numbersOutOfRage(optionName, lower, upper) {\r\n            const error = new TdError(`${this.base} ${optionName} expected an array of number between ${lower} and ${upper}.`);\r\n            error.code = 4;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when a value for a date options couldn't be parsed. Either\r\n         * the option was an invalide string or an invalid Date object.\r\n         * @param optionName\r\n         * @param date\r\n         */\r\n        failedToParseDate(optionName, date) {\r\n            const error = new TdError(`${this.base} Could not correctly parse \"${date}\" to a date for ${optionName}.`);\r\n            error.code = 5;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws when an element to attach to was not provided in the constructor.\r\n         */\r\n        mustProvideElement() {\r\n            const error = new TdError(`${this.base} No element was provided.`);\r\n            error.code = 6;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws if providing an array for the events to subscribe method doesn't have\r\n         * the same number of callbacks. E.g., subscribe([1,2], [1])\r\n         */\r\n        subscribeMismatch() {\r\n            const error = new TdError(`${this.base} The subscribed events does not match the number of callbacks`);\r\n            error.code = 7;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws if the configuration has conflicting rules e.g. minDate is after maxDate\r\n         */\r\n        conflictingConfiguration(message) {\r\n            const error = new TdError(`${this.base} A configuration value conflicts with another rule. ${message}`);\r\n            error.code = 8;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Logs a warning if a date option value is provided as a string, instead of\r\n         * a date/datetime object.\r\n         */\r\n        dateString() {\r\n            console.warn(`${this.base} Using a string for date options is not recommended unless you specify an ISO string.`);\r\n        }\r\n    }\n\n    //this is not the way I want this to stay but nested classes seemed to blown up once its compiled.\r\n    const NAME = 'tempus-dominus', version = '6.0.0-alpha1', dataKey = 'td';\r\n    /**\r\n     * Events\r\n     */\r\n    class Events {\r\n        constructor() {\r\n            this.key = `.${dataKey}`;\r\n            /**\r\n             * Change event. Fired when the user selects a date.\r\n             * See also EventTypes.ChangeEvent\r\n             */\r\n            this.change = `change${this.key}`;\r\n            /**\r\n             * Emit when the view changes for example from month view to the year view.\r\n             * See also EventTypes.ViewUpdateEvent\r\n             */\r\n            this.update = `update${this.key}`;\r\n            /**\r\n             * Emits when a selected date or value from the input field fails to meet the provided validation rules.\r\n             * See also EventTypes.FailEvent\r\n             */\r\n            this.error = `error${this.key}`;\r\n            /**\r\n             * Show event\r\n             * @event Events#show\r\n             */\r\n            this.show = `show${this.key}`;\r\n            /**\r\n             * Hide event\r\n             * @event Events#hide\r\n             */\r\n            this.hide = `hide${this.key}`;\r\n            // blur and focus are used in the jQuery provider but are otherwise unused.\r\n            // keyup/down will be used later for keybinding options\r\n            this.blur = `blur${this.key}`;\r\n            this.focus = `focus${this.key}`;\r\n            this.keyup = `keyup${this.key}`;\r\n            this.keydown = `keydown${this.key}`;\r\n        }\r\n    }\r\n    class Css {\r\n        constructor() {\r\n            /**\r\n             * The outer element for the widget.\r\n             */\r\n            this.widget = `${NAME}-widget`;\r\n            /**\r\n             * Hold the previous, next and switcher divs\r\n             */\r\n            this.calendarHeader = 'calendar-header';\r\n            /**\r\n             * The element for the action to change the calendar view. E.g. month -> year.\r\n             */\r\n            this.switch = 'picker-switch';\r\n            /**\r\n             * The elements for all of the toolbar options\r\n             */\r\n            this.toolbar = 'toolbar';\r\n            /**\r\n             * Disables the hover and rounding affect.\r\n             */\r\n            this.noHighlight = 'no-highlight';\r\n            /**\r\n             * Applied to the widget element when the side by side option is in use.\r\n             */\r\n            this.sideBySide = 'timepicker-sbs';\r\n            /**\r\n             * The element for the action to change the calendar view, e.g. August -> July\r\n             */\r\n            this.previous = 'previous';\r\n            /**\r\n             * The element for the action to change the calendar view, e.g. August -> September\r\n             */\r\n            this.next = 'next';\r\n            /**\r\n             * Applied to any action that would violate any restriction options. ALso applied\r\n             * to an input field if the disabled function is called.\r\n             */\r\n            this.disabled = 'disabled';\r\n            /**\r\n             * Applied to any date that is less than requested view,\r\n             * e.g. the last day of the previous month.\r\n             */\r\n            this.old = 'old';\r\n            /**\r\n             * Applied to any date that is greater than of requested view,\r\n             * e.g. the last day of the previous month.\r\n             */\r\n            this.new = 'new';\r\n            /**\r\n             * Applied to any date that is currently selected.\r\n             */\r\n            this.active = 'active';\r\n            //#region date element\r\n            /**\r\n             * The outer most element for the calendar view.\r\n             */\r\n            this.dateContainer = 'date-container';\r\n            /**\r\n             * The outer most element for the decades view.\r\n             */\r\n            this.decadesContainer = `${this.dateContainer}-decades`;\r\n            /**\r\n             * Applied to elements within the decades container, e.g. 2020, 2030\r\n             */\r\n            this.decade = 'decade';\r\n            /**\r\n             * The outer most element for the years view.\r\n             */\r\n            this.yearsContainer = `${this.dateContainer}-years`;\r\n            /**\r\n             * Applied to elements within the years container, e.g. 2021, 2021\r\n             */\r\n            this.year = 'year';\r\n            /**\r\n             * The outer most element for the month view.\r\n             */\r\n            this.monthsContainer = `${this.dateContainer}-months`;\r\n            /**\r\n             * Applied to elements within the month container, e.g. January, February\r\n             */\r\n            this.month = 'month';\r\n            /**\r\n             * The outer most element for the calendar view.\r\n             */\r\n            this.daysContainer = `${this.dateContainer}-days`;\r\n            /**\r\n             * Applied to elements within the day container, e.g. 1, 2..31\r\n             */\r\n            this.day = 'day';\r\n            /**\r\n             * If display.calendarWeeks is enabled, a column displaying the week of year\r\n             * is shown. This class is applied to each cell in that column.\r\n             */\r\n            this.calendarWeeks = 'cw';\r\n            /**\r\n             * Applied to the first row of the calendar view, e.g. Sunday, Monday\r\n             */\r\n            this.dayOfTheWeek = 'dow';\r\n            /**\r\n             * Applied to the current date on the calendar view.\r\n             */\r\n            this.today = 'today';\r\n            /**\r\n             * Applied to the locale's weekend dates on the calendar view, e.g. Sunday, Saturday\r\n             */\r\n            this.weekend = 'weekend';\r\n            //#endregion\r\n            //#region time element\r\n            /**\r\n             * The outer most element for all time related elements.\r\n             */\r\n            this.timeContainer = 'time-container';\r\n            /**\r\n             * Applied the separator columns between time elements, e.g. hour *:* minute *:* second\r\n             */\r\n            this.separator = 'separator';\r\n            /**\r\n             * The outer most element for the clock view.\r\n             */\r\n            this.clockContainer = `${this.timeContainer}-clock`;\r\n            /**\r\n             * The outer most element for the hours selection view.\r\n             */\r\n            this.hourContainer = `${this.timeContainer}-hour`;\r\n            /**\r\n             * The outer most element for the minutes selection view.\r\n             */\r\n            this.minuteContainer = `${this.timeContainer}-minute`;\r\n            /**\r\n             * The outer most element for the seconds selection view.\r\n             */\r\n            this.secondContainer = `${this.timeContainer}-second`;\r\n            /**\r\n             * Applied to each element in the hours selection view.\r\n             */\r\n            this.hour = 'hour';\r\n            /**\r\n             * Applied to each element in the minutes selection view.\r\n             */\r\n            this.minute = 'minute';\r\n            /**\r\n             * Applied to each element in the seconds selection view.\r\n             */\r\n            this.second = 'second';\r\n            //#endregion\r\n            //#region collapse\r\n            /**\r\n             * Applied the element of the current view mode, e.g. calendar or clock.\r\n             */\r\n            this.show = 'show';\r\n            /**\r\n             * Applied to the currently showing view mode during a transition\r\n             * between calendar and clock views\r\n             */\r\n            this.collapsing = 'td-collapsing';\r\n            /**\r\n             * Applied to the currently hidden view mode.\r\n             */\r\n            this.collapse = 'td-collapse';\r\n            //#endregion\r\n            /**\r\n             * Applied to the widget when the option display.inline is enabled.\r\n             */\r\n            this.inline = 'inline';\r\n        }\r\n    }\r\n    class Namespace {\r\n    }\r\n    Namespace.NAME = NAME;\r\n    // noinspection JSUnusedGlobalSymbols\r\n    Namespace.version = version;\r\n    Namespace.dataKey = dataKey;\r\n    Namespace.events = new Events();\r\n    Namespace.css = new Css();\r\n    Namespace.errorMessages = new ErrorMessages();\n\n    const DefaultOptions = {\r\n        restrictions: {\r\n            minDate: undefined,\r\n            maxDate: undefined,\r\n            disabledDates: [],\r\n            enabledDates: [],\r\n            daysOfWeekDisabled: [],\r\n            disabledTimeIntervals: [],\r\n            disabledHours: [],\r\n            enabledHours: [],\r\n        },\r\n        display: {\r\n            icons: {\r\n                type: 'icons',\r\n                time: 'fas fa-clock',\r\n                date: 'fas fa-calendar',\r\n                up: 'fas fa-arrow-up',\r\n                down: 'fas fa-arrow-down',\r\n                previous: 'fas fa-chevron-left',\r\n                next: 'fas fa-chevron-right',\r\n                today: 'fas fa-calendar-check',\r\n                clear: 'fas fa-trash',\r\n                close: 'fas fa-times',\r\n            },\r\n            sideBySide: false,\r\n            calendarWeeks: false,\r\n            viewMode: 'calendar',\r\n            toolbarPlacement: 'bottom',\r\n            keepOpen: false,\r\n            buttons: {\r\n                today: false,\r\n                clear: false,\r\n                close: false,\r\n            },\r\n            components: {\r\n                calendar: true,\r\n                date: true,\r\n                month: true,\r\n                year: true,\r\n                decades: true,\r\n                clock: true,\r\n                hours: true,\r\n                minutes: true,\r\n                seconds: false,\r\n                useTwentyfourHour: false,\r\n            },\r\n            inputFormat: undefined,\r\n            inline: false,\r\n        },\r\n        stepping: 1,\r\n        useCurrent: true,\r\n        defaultDate: undefined,\r\n        localization: {\r\n            today: 'Go to today',\r\n            clear: 'Clear selection',\r\n            close: 'Close the picker',\r\n            selectMonth: 'Select Month',\r\n            previousMonth: 'Previous Month',\r\n            nextMonth: 'Next Month',\r\n            selectYear: 'Select Year',\r\n            previousYear: 'Previous Year',\r\n            nextYear: 'Next Year',\r\n            selectDecade: 'Select Decade',\r\n            previousDecade: 'Previous Decade',\r\n            nextDecade: 'Next Decade',\r\n            previousCentury: 'Previous Century',\r\n            nextCentury: 'Next Century',\r\n            pickHour: 'Pick Hour',\r\n            incrementHour: 'Increment Hour',\r\n            decrementHour: 'Decrement Hour',\r\n            pickMinute: 'Pick Minute',\r\n            incrementMinute: 'Increment Minute',\r\n            decrementMinute: 'Decrement Minute',\r\n            pickSecond: 'Pick Second',\r\n            incrementSecond: 'Increment Second',\r\n            decrementSecond: 'Decrement Second',\r\n            togglePeriod: 'Toggle Period',\r\n            selectTime: 'Select Time',\r\n            selectDate: 'Select Date',\r\n            dayViewHeaderFormat: 'long',\r\n            locale: 'default',\r\n        },\r\n        keepInvalid: false,\r\n        debug: false,\r\n        allowInputToggle: false,\r\n        viewDate: new DateTime(),\r\n        multipleDates: false,\r\n        multipleDatesSeparator: '; ',\r\n        promptTimeOnDateChange: false,\r\n        promptTimeOnDateChangeTransitionDelay: 200,\r\n    };\r\n    const DatePickerModes = [\r\n        {\r\n            name: 'calendar',\r\n            className: Namespace.css.daysContainer,\r\n            unit: Unit.month,\r\n            step: 1,\r\n        },\r\n        {\r\n            name: 'months',\r\n            className: Namespace.css.monthsContainer,\r\n            unit: Unit.year,\r\n            step: 1,\r\n        },\r\n        {\r\n            name: 'years',\r\n            className: Namespace.css.yearsContainer,\r\n            unit: Unit.year,\r\n            step: 10,\r\n        },\r\n        {\r\n            name: 'decades',\r\n            className: Namespace.css.decadesContainer,\r\n            unit: Unit.year,\r\n            step: 100,\r\n        },\r\n    ];\n\n    /**\r\n     * Provides a collapse functionality to the view changes\r\n     */\r\n    class Collapse {\r\n        constructor() {\r\n            /**\r\n             * Gets the transition duration from the `element` by getting css properties\r\n             * `transition-duration` and `transition-delay`\r\n             * @param element HTML Element\r\n             */\r\n            this.getTransitionDurationFromElement = (element) => {\r\n                if (!element) {\r\n                    return 0;\r\n                }\r\n                // Get transition-duration of the element\r\n                let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n                const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n                const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n                // Return 0 if element or transition duration is not found\r\n                if (!floatTransitionDuration && !floatTransitionDelay) {\r\n                    return 0;\r\n                }\r\n                // If multiple durations are defined, take the first\r\n                transitionDuration = transitionDuration.split(',')[0];\r\n                transitionDelay = transitionDelay.split(',')[0];\r\n                return ((Number.parseFloat(transitionDuration) +\r\n                    Number.parseFloat(transitionDelay)) *\r\n                    1000);\r\n            };\r\n        }\r\n        /**\r\n         * Flips the show/hide state of `target`\r\n         * @param target html element to affect.\r\n         */\r\n        toggle(target) {\r\n            if (target.classList.contains(Namespace.css.show)) {\r\n                this.hide(target);\r\n            }\r\n            else {\r\n                this.show(target);\r\n            }\r\n        }\r\n        /**\r\n         * If `target` is not already showing, then show after the animation.\r\n         * @param target\r\n         */\r\n        show(target) {\r\n            if (target.classList.contains(Namespace.css.collapsing) ||\r\n                target.classList.contains(Namespace.css.show))\r\n                return;\r\n            const complete = () => {\r\n                target.classList.remove(Namespace.css.collapsing);\r\n                target.classList.add(Namespace.css.collapse, Namespace.css.show);\r\n                target.style.height = '';\r\n                this.timeOut = null;\r\n            };\r\n            target.style.height = '0';\r\n            target.classList.remove(Namespace.css.collapse);\r\n            target.classList.add(Namespace.css.collapsing);\r\n            this.timeOut = setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n            target.style.height = `${target.scrollHeight}px`;\r\n        }\r\n        /**\r\n         * If `target` is not already hidden, then hide after the animation.\r\n         * @param target HTML Element\r\n         */\r\n        hide(target) {\r\n            if (target.classList.contains(Namespace.css.collapsing) ||\r\n                !target.classList.contains(Namespace.css.show))\r\n                return;\r\n            const complete = () => {\r\n                target.classList.remove(Namespace.css.collapsing);\r\n                target.classList.add(Namespace.css.collapse);\r\n                this.timeOut = null;\r\n            };\r\n            target.style.height = `${target.getBoundingClientRect()['height']}px`;\r\n            const reflow = (element) => element.offsetHeight;\r\n            reflow(target);\r\n            target.classList.remove(Namespace.css.collapse, Namespace.css.show);\r\n            target.classList.add(Namespace.css.collapsing);\r\n            target.style.height = '';\r\n            this.timeOut = setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n        }\r\n    }\n\n    /**\r\n     *\r\n     */\r\n    class Actions {\r\n        constructor(context) {\r\n            this._context = context;\r\n            this.collapse = new Collapse();\r\n        }\r\n        /**\r\n         * Performs the selected `action`. See ActionTypes\r\n         * @param e This is normally a click event\r\n         * @param action If not provided, then look for a [data-action]\r\n         */\r\n        do(e, action) {\r\n            var _a;\r\n            const currentTarget = e.currentTarget;\r\n            if (currentTarget.classList.contains(Namespace.css.disabled))\r\n                return false;\r\n            action = action || currentTarget.dataset.action;\r\n            const lastPicked = (this._context.dates.lastPicked || this._context._viewDate).clone;\r\n            /**\r\n             * Common function to manipulate {@link lastPicked} by `unit`\r\n             * @param unit\r\n             * @param value Value to change by\r\n             */\r\n            const manipulateAndSet = (unit, value = 1) => {\r\n                const newDate = lastPicked.manipulate(value, unit);\r\n                if (this._context._validation.isValid(newDate, unit)) {\r\n                    this._context.dates._setValue(newDate, this._context.dates.lastPickedIndex);\r\n                }\r\n            };\r\n            switch (action) {\r\n                case ActionTypes.next:\r\n                case ActionTypes.previous:\r\n                    const { unit, step } = DatePickerModes[this._context._currentViewMode];\r\n                    if (action === ActionTypes.next)\r\n                        this._context._viewDate.manipulate(step, unit);\r\n                    else\r\n                        this._context._viewDate.manipulate(step * -1, unit);\r\n                    this._context._viewUpdate(unit);\r\n                    this._context._display._showMode();\r\n                    break;\r\n                case ActionTypes.pickerSwitch:\r\n                    this._context._display._showMode(1);\r\n                    this._context._viewUpdate(DatePickerModes[this._context._currentViewMode].unit);\r\n                    this._context._display._updateCalendarHeader();\r\n                    break;\r\n                case ActionTypes.selectMonth:\r\n                case ActionTypes.selectYear:\r\n                case ActionTypes.selectDecade:\r\n                    const value = +currentTarget.getAttribute('data-value');\r\n                    switch (action) {\r\n                        case ActionTypes.selectMonth:\r\n                            this._context._viewDate.month = value;\r\n                            this._context._viewUpdate(Unit.month);\r\n                            break;\r\n                        case ActionTypes.selectYear:\r\n                            this._context._viewDate.year = value;\r\n                            this._context._viewUpdate(Unit.year);\r\n                            break;\r\n                        case ActionTypes.selectDecade:\r\n                            this._context._viewDate.year = value;\r\n                            this._context._viewUpdate(Unit.year);\r\n                            break;\r\n                    }\r\n                    if (this._context._currentViewMode === this._context._minViewModeNumber) {\r\n                        this._context.dates._setValue(this._context._viewDate, this._context.dates.lastPickedIndex);\r\n                        if (!this._context._options.display.inline) {\r\n                            this._context._display.hide();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._context._display._showMode(-1);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectDay:\r\n                    const day = this._context._viewDate.clone;\r\n                    if (currentTarget.classList.contains(Namespace.css.old)) {\r\n                        day.manipulate(-1, Unit.month);\r\n                    }\r\n                    if (currentTarget.classList.contains(Namespace.css.new)) {\r\n                        day.manipulate(1, Unit.month);\r\n                    }\r\n                    day.date = +currentTarget.getAttribute('data-day'); //***\r\n                    let index = 0;\r\n                    if (this._context._options.multipleDates) {\r\n                        index = this._context.dates.pickedIndex(day, Unit.date);\r\n                        if (index !== -1) {\r\n                            this._context.dates._setValue(null, index); //deselect multi-date\r\n                        }\r\n                        else {\r\n                            this._context.dates._setValue(day, this._context.dates.lastPickedIndex + 1);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._context.dates._setValue(day, this._context.dates.lastPickedIndex);\r\n                    }\r\n                    if (!this._context._display._hasTime &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline &&\r\n                        !this._context._options.multipleDates) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectHour:\r\n                    let hour = +currentTarget.getAttribute('data-value');\r\n                    if (lastPicked.hours >= 12)\r\n                        hour += 12;\r\n                    lastPicked.hours = hour;\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.display.components.minutes &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectMinute:\r\n                    lastPicked.minutes = +currentTarget.getAttribute('data-value'); //***\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.display.components.seconds &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectSecond:\r\n                    lastPicked.seconds = +currentTarget.getAttribute('data-value'); //***\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.incrementHours:\r\n                    manipulateAndSet(Unit.hours);\r\n                    break;\r\n                case ActionTypes.incrementMinutes:\r\n                    manipulateAndSet(Unit.minutes, this._context._options.stepping);\r\n                    break;\r\n                case ActionTypes.incrementSeconds:\r\n                    manipulateAndSet(Unit.seconds);\r\n                    break;\r\n                case ActionTypes.decrementHours:\r\n                    manipulateAndSet(Unit.hours, -1);\r\n                    break;\r\n                case ActionTypes.decrementMinutes:\r\n                    manipulateAndSet(Unit.minutes, this._context._options.stepping * -1);\r\n                    break;\r\n                case ActionTypes.decrementSeconds:\r\n                    manipulateAndSet(Unit.seconds, -1);\r\n                    break;\r\n                case ActionTypes.togglePeriod:\r\n                    manipulateAndSet(Unit.hours, ((_a = this._context.dates.lastPicked) === null || _a === void 0 ? void 0 : _a.hours) >= 12 ? -12 : 12 //***\r\n                    );\r\n                    break;\r\n                case ActionTypes.togglePicker:\r\n                    this._context._display.widget\r\n                        .querySelectorAll(`.${Namespace.css.dateContainer}, .${Namespace.css.timeContainer}`)\r\n                        .forEach((htmlElement) => this.collapse.toggle(htmlElement));\r\n                    if (currentTarget.getAttribute('title') ===\r\n                        this._context._options.localization.selectDate) {\r\n                        currentTarget.setAttribute('title', this._context._options.localization.selectTime);\r\n                        currentTarget.innerHTML = this._context._display._iconTag(this._context._options.display.icons.time).outerHTML;\r\n                        this._context._display._updateCalendarHeader();\r\n                    }\r\n                    else {\r\n                        currentTarget.setAttribute('title', this._context._options.localization.selectDate);\r\n                        currentTarget.innerHTML = this._context._display._iconTag(this._context._options.display.icons.date).outerHTML;\r\n                        this.do(e, ActionTypes.showClock);\r\n                        this._context._display._update('clock');\r\n                    }\r\n                    setTimeout(() => this._context._display.popper.forceUpdate(), this.collapse.getTransitionDurationFromElement(this._context._display.widget.querySelector(\".td-collapsing\"))); // Update after transition time of .td-collapsing //***\r\n                    break;\r\n                case ActionTypes.showClock:\r\n                case ActionTypes.showHours:\r\n                case ActionTypes.showMinutes:\r\n                case ActionTypes.showSeconds:\r\n                    this._context._display.widget\r\n                        .querySelectorAll(`.${Namespace.css.timeContainer} > div`)\r\n                        .forEach((htmlElement) => (htmlElement.style.display = 'none'));\r\n                    let classToUse = '';\r\n                    switch (action) {\r\n                        case ActionTypes.showClock:\r\n                            classToUse = Namespace.css.clockContainer;\r\n                            this._context._display._update('clock');\r\n                            break;\r\n                        case ActionTypes.showHours:\r\n                            classToUse = Namespace.css.hourContainer;\r\n                            this._context._display._update(Unit.hours);\r\n                            break;\r\n                        case ActionTypes.showMinutes:\r\n                            classToUse = Namespace.css.minuteContainer;\r\n                            this._context._display._update(Unit.minutes);\r\n                            break;\r\n                        case ActionTypes.showSeconds:\r\n                            classToUse = Namespace.css.secondContainer;\r\n                            this._context._display._update(Unit.seconds);\r\n                            break;\r\n                    }\r\n                    (this._context._display.widget.getElementsByClassName(classToUse)[0]).style.display = 'grid';\r\n                    break;\r\n                case ActionTypes.clear:\r\n                    this._context.dates._setValue(null);\r\n                    this._context._display._updateCalendarHeader();\r\n                    break;\r\n                case ActionTypes.close:\r\n                    this._context._display.hide();\r\n                    break;\r\n                case ActionTypes.today:\r\n                    const today = new DateTime().setLocale(this._context._options.localization.locale);\r\n                    this._context._viewDate = today;\r\n                    if (this._context._validation.isValid(today, Unit.date))\r\n                        this._context.dates._setValue(today, this._context.dates.lastPickedIndex);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    var ActionTypes;\r\n    (function (ActionTypes) {\r\n        ActionTypes[\"next\"] = \"next\";\r\n        ActionTypes[\"previous\"] = \"previous\";\r\n        ActionTypes[\"pickerSwitch\"] = \"pickerSwitch\";\r\n        ActionTypes[\"selectMonth\"] = \"selectMonth\";\r\n        ActionTypes[\"selectYear\"] = \"selectYear\";\r\n        ActionTypes[\"selectDecade\"] = \"selectDecade\";\r\n        ActionTypes[\"selectDay\"] = \"selectDay\";\r\n        ActionTypes[\"selectHour\"] = \"selectHour\";\r\n        ActionTypes[\"selectMinute\"] = \"selectMinute\";\r\n        ActionTypes[\"selectSecond\"] = \"selectSecond\";\r\n        ActionTypes[\"incrementHours\"] = \"incrementHours\";\r\n        ActionTypes[\"incrementMinutes\"] = \"incrementMinutes\";\r\n        ActionTypes[\"incrementSeconds\"] = \"incrementSeconds\";\r\n        ActionTypes[\"decrementHours\"] = \"decrementHours\";\r\n        ActionTypes[\"decrementMinutes\"] = \"decrementMinutes\";\r\n        ActionTypes[\"decrementSeconds\"] = \"decrementSeconds\";\r\n        ActionTypes[\"togglePeriod\"] = \"togglePeriod\";\r\n        ActionTypes[\"togglePicker\"] = \"togglePicker\";\r\n        ActionTypes[\"showClock\"] = \"showClock\";\r\n        ActionTypes[\"showHours\"] = \"showHours\";\r\n        ActionTypes[\"showMinutes\"] = \"showMinutes\";\r\n        ActionTypes[\"showSeconds\"] = \"showSeconds\";\r\n        ActionTypes[\"clear\"] = \"clear\";\r\n        ActionTypes[\"close\"] = \"close\";\r\n        ActionTypes[\"today\"] = \"today\";\r\n    })(ActionTypes || (ActionTypes = {}));\n\n    /**\r\n     * Creates and updates the grid for `date`\r\n     */\r\n    class DateDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.daysContainer);\r\n            container.append(...this._daysOfTheWeek());\r\n            if (this._context._options.display.calendarWeeks) {\r\n                const div = document.createElement('div');\r\n                div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                container.appendChild(div);\r\n            }\r\n            for (let i = 0; i < 42; i++) {\r\n                if (i !== 0 && i % 7 === 0) {\r\n                    if (this._context._options.display.calendarWeeks) {\r\n                        const div = document.createElement('div');\r\n                        div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                        container.appendChild(div);\r\n                    }\r\n                }\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectDay);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.daysContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.daysContainer, this._context._viewDate.format({\r\n                month: this._context._options.localization.dayViewHeaderFormat,\r\n            }));\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.month), Unit.month)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.month), Unit.month)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf(Unit.month)\r\n                .startOf('weekDay')\r\n                .manipulate(12, Unit.hours);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectDay}\"], .${Namespace.css.calendarWeeks}`)\r\n                .forEach((containerClone, index) => {\r\n                if (this._context._options.display.calendarWeeks &&\r\n                    containerClone.classList.contains(Namespace.css.calendarWeeks)) {\r\n                    if (containerClone.innerText === '#')\r\n                        return;\r\n                    containerClone.innerText = `${innerDate.week}`;\r\n                    return;\r\n                }\r\n                let classes = [];\r\n                classes.push(Namespace.css.day);\r\n                if (innerDate.isBefore(this._context._viewDate, Unit.month)) {\r\n                    classes.push(Namespace.css.old);\r\n                }\r\n                if (innerDate.isAfter(this._context._viewDate, Unit.month)) {\r\n                    classes.push(Namespace.css.new);\r\n                }\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.date)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.date)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                if (innerDate.isSame(new DateTime(), Unit.date)) {\r\n                    classes.push(Namespace.css.today);\r\n                }\r\n                if (innerDate.weekDay === 0 || innerDate.weekDay === 6) {\r\n                    classes.push(Namespace.css.weekend);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.year}-${innerDate.monthFormatted}-${innerDate.dateFormatted}`);\r\n                containerClone.setAttribute('data-day', `${innerDate.date}`); //***\r\n                containerClone.innerText = innerDate.format({ day: \"numeric\" }); //***\r\n                innerDate.manipulate(1, Unit.date);\r\n            });\r\n        }\r\n        /***\r\n         * Generates an html row that contains the days of the week.\r\n         * @private\r\n         */\r\n        _daysOfTheWeek() {\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf('weekDay')\r\n                .startOf(Unit.date);\r\n            const row = [];\r\n            document.createElement('div');\r\n            if (this._context._options.display.calendarWeeks) {\r\n                const htmlDivElement = document.createElement('div');\r\n                htmlDivElement.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                htmlDivElement.innerText = '#';\r\n                row.push(htmlDivElement);\r\n            }\r\n            for (let i = 0; i < 7; i++) {\r\n                const htmlDivElement = document.createElement('div');\r\n                htmlDivElement.classList.add(Namespace.css.dayOfTheWeek, Namespace.css.noHighlight);\r\n                htmlDivElement.innerText = innerDate.format({ weekday: 'short' });\r\n                innerDate.manipulate(1, Unit.date);\r\n                row.push(htmlDivElement);\r\n            }\r\n            return row;\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `month`\r\n     */\r\n    class MonthDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.monthsContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectMonth);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.monthsContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.monthsContainer, this._context._viewDate.format({ year: 'numeric' }));\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.year), Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.year), Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectMonth}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.month);\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.month)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.month)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${index}`);\r\n                containerClone.innerText = `${innerDate.format({ month: 'short' })}`;\r\n                innerDate.manipulate(1, Unit.month);\r\n            });\r\n        }\r\n    }\n\n    class Dates {\r\n        constructor(context) {\r\n            this._dates = [];\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Returns the array of selected dates\r\n         */\r\n        get picked() {\r\n            return this._dates;\r\n        }\r\n        /**\r\n         * Returns the last picked value.\r\n         */\r\n        get lastPicked() {\r\n            return this._dates[this.lastPickedIndex];\r\n        }\r\n        /**\r\n         * Returns the length of picked dates -1 or 0 if none are selected.\r\n         */\r\n        get lastPickedIndex() {\r\n            if (this._dates.length === 0)\r\n                return 0;\r\n            return this._dates.length - 1;\r\n        }\r\n        /**\r\n         * Adds a new DateTime to selected dates array\r\n         * @param date\r\n         */\r\n        add(date) {\r\n            this._dates.push(date);\r\n        }\r\n        /**\r\n         * Returns true if the `targetDate` is part of the selected dates array.\r\n         * If `unit` is provided then a granularity to that unit will be used.\r\n         * @param targetDate\r\n         * @param unit\r\n         */\r\n        isPicked(targetDate, unit) {\r\n            if (!unit)\r\n                return this._dates.find((x) => x === targetDate) !== undefined;\r\n            const format = Dates.getFormatByUnit(unit);\r\n            let innerDateFormatted = targetDate.format(format);\r\n            return (this._dates\r\n                .map((x) => x.format(format))\r\n                .find((x) => x === innerDateFormatted) !== undefined);\r\n        }\r\n        /**\r\n         * Returns the index at which `targetDate` is in the array.\r\n         * This is used for updating or removing a date when multi-date is used\r\n         * If `unit` is provided then a granularity to that unit will be used.\r\n         * @param targetDate\r\n         * @param unit\r\n         */\r\n        pickedIndex(targetDate, unit) {\r\n            if (!unit)\r\n                return this._dates.indexOf(targetDate);\r\n            const format = Dates.getFormatByUnit(unit);\r\n            let innerDateFormatted = targetDate.format(format);\r\n            return this._dates.map((x) => x.format(format)).indexOf(innerDateFormatted);\r\n        }\r\n        /**\r\n         * Clears all selected dates.\r\n         */\r\n        clear() {\r\n            this._context._unset = true;\r\n            this._context._triggerEvent({\r\n                type: Namespace.events.change,\r\n                date: undefined,\r\n                oldDate: this.lastPicked,\r\n                isClear: true,\r\n                isValid: true,\r\n            });\r\n            this._dates = [];\r\n        }\r\n        /**\r\n         * Find the \"book end\" years given a `year` and a `factor`\r\n         * @param factor e.g. 100 for decades\r\n         * @param year e.g. 2021\r\n         */\r\n        static getStartEndYear(factor, year) {\r\n            const step = factor / 10, startYear = Math.floor(year / factor) * factor, endYear = startYear + step * 9, focusValue = Math.floor(year / step) * step;\r\n            return [startYear, endYear, focusValue];\r\n        }\r\n        /**\r\n         * Attempts to either clear or set the `target` date at `index`.\r\n         * If the `target` is null then the date will be cleared.\r\n         * If multi-date is being used then it will be removed from the array.\r\n         * If `target` is valid and multi-date is used then if `index` is\r\n         * provided the date at that index will be replaced, otherwise it is appended.\r\n         * @param target\r\n         * @param index\r\n         */\r\n        _setValue(target, index) {\r\n            const noIndex = typeof index === 'undefined', isClear = !target && noIndex;\r\n            let oldDate = this._context._unset ? null : this._dates[index];\r\n            if (!oldDate && !this._context._unset && noIndex && isClear) {\r\n                oldDate = this.lastPicked;\r\n            }\r\n            const updateInput = () => {\r\n                if (!this._context._input)\r\n                    return;\r\n                let newValue = (target === null || target === void 0 ? void 0 : target.format(this._context._options.display.inputFormat)) || '';\r\n                if (this._context._options.multipleDates) {\r\n                    newValue = this._dates\r\n                        .map((d) => d.format(this._context._options.display.inputFormat))\r\n                        .join(this._context._options.multipleDatesSeparator);\r\n                }\r\n                if (this._context._input.value != newValue)\r\n                    this._context._input.value = newValue;\r\n            };\r\n            // case of calling setValue(null)\r\n            if (!target) {\r\n                if (!this._context._options.multipleDates ||\r\n                    this._dates.length === 1 ||\r\n                    isClear) {\r\n                    this._context._unset = true;\r\n                    this._dates = [];\r\n                }\r\n                else {\r\n                    this._dates.splice(index, 1);\r\n                }\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: undefined,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: true,\r\n                });\r\n                updateInput();\r\n                this._context._display._update('all');\r\n                return;\r\n            }\r\n            index = index || 0;\r\n            target = target.clone;\r\n            // minute stepping is being used, force the minute to the closest value\r\n            if (this._context._options.stepping !== 1) {\r\n                target.minutes =\r\n                    Math.round(target.minutes / this._context._options.stepping) *\r\n                        this._context._options.stepping;\r\n                target.seconds = 0;\r\n            }\r\n            if (this._context._validation.isValid(target)) {\r\n                this._dates[index] = target;\r\n                this._context._viewDate = target.clone;\r\n                updateInput();\r\n                this._context._unset = false;\r\n                this._context._display._update('all');\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: target,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: true,\r\n                });\r\n                return;\r\n            }\r\n            if (this._context._options.keepInvalid) {\r\n                this._dates[index] = target;\r\n                this._context._viewDate = target.clone;\r\n                updateInput();\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: target,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: false,\r\n                });\r\n            }\r\n            this._context._triggerEvent({\r\n                type: Namespace.events.error,\r\n                reason: Namespace.errorMessages.failedToSetInvalidDate,\r\n                date: target,\r\n                oldDate,\r\n            });\r\n        }\r\n        /**\r\n         * Returns a format object based on the granularity of `unit`\r\n         * @param unit\r\n         */\r\n        static getFormatByUnit(unit) {\r\n            switch (unit) {\r\n                case 'date':\r\n                    return { dateStyle: 'short' };\r\n                case 'month':\r\n                    return {\r\n                        month: 'numeric',\r\n                        year: 'numeric',\r\n                    };\r\n                case 'year':\r\n                    return { year: 'numeric' };\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `year`\r\n     */\r\n    class YearDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.yearsContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectYear);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            Dates.getStartEndYear(10, this._context._viewDate.year);\r\n            this._startYear = this._context._viewDate.clone.manipulate(-1, Unit.year);\r\n            this._endYear = this._context._viewDate.clone.manipulate(10, Unit.year);\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.yearsContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.yearsContainer, `${this._startYear.format({ year: 'numeric' })}-${this._endYear.format({ year: 'numeric' })}` //***\r\n            );\r\n            this._context._validation.isValid(this._startYear, Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._endYear, Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf(Unit.year)\r\n                .manipulate(-1, Unit.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectYear}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.year);\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.year)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.year)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.year}`);\r\n                containerClone.innerText = innerDate.format({ year: \"numeric\" }); //***\r\n                innerDate.manipulate(1, Unit.year);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `seconds`\r\n     */\r\n    class DecadeDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.decadesContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectDecade);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const [start, end] = Dates.getStartEndYear(100, this._context._viewDate.year);\r\n            this._startDecade = this._context._viewDate.clone.startOf(Unit.year);\r\n            this._startDecade.year = start;\r\n            this._endDecade = this._context._viewDate.clone.startOf(Unit.year);\r\n            this._endDecade.year = end;\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.decadesContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.decadesContainer, `${this._startDecade.format({ year: 'numeric' })}-${this._endDecade.format({ year: 'numeric' })}`); //***\r\n            this._context._validation.isValid(this._startDecade, Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._endDecade, Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            const pickedYears = this._context.dates.picked.map((x) => x.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectDecade}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                if (index === 0) {\r\n                    containerClone.classList.add(Namespace.css.old);\r\n                    if (this._startDecade.year - 10 < 0) {\r\n                        containerClone.textContent = ' ';\r\n                        previous.classList.add(Namespace.css.disabled);\r\n                        containerClone.classList.add(Namespace.css.disabled);\r\n                        containerClone.setAttribute('data-value', ``);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        containerClone.innerText = this._startDecade.clone.manipulate(-10, Unit.year).format({ year: 'numeric' }); //***\r\n                        containerClone.setAttribute('data-value', `${this._startDecade.year}`);\r\n                        return;\r\n                    }\r\n                }\r\n                let classes = [];\r\n                classes.push(Namespace.css.decade);\r\n                const startDecadeYear = this._startDecade.year;\r\n                const endDecadeYear = this._startDecade.year + 9;\r\n                if (!this._context._unset &&\r\n                    pickedYears.filter((x) => x >= startDecadeYear && x <= endDecadeYear)\r\n                        .length > 0) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${this._startDecade.year}`);\r\n                containerClone.innerText = `${this._startDecade.format({ year: 'numeric' })}`; //***\r\n                this._startDecade.manipulate(10, Unit.year);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates the clock display\r\n     */\r\n    class TimeDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the clock display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.clockContainer);\r\n            container.append(...this._grid());\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the various elements with in the clock display\r\n         * like the current hour and if the manipulation icons are enabled.\r\n         * @private\r\n         */\r\n        _update() {\r\n            const timesDiv = this._context._display.widget.getElementsByClassName(Namespace.css.clockContainer)[0];\r\n            const lastPicked = (this._context.dates.lastPicked || this._context._viewDate).clone;\r\n            let columns = 0;\r\n            timesDiv\r\n                .querySelectorAll('.disabled')\r\n                .forEach((element) => element.classList.remove(Namespace.css.disabled));\r\n            if (this._context._options.display.components.hours) {\r\n                columns++;\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.hours), Unit.hours)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementHours}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.hours), Unit.hours)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementHours}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.hours}]`).innerText = this._context._options.display.components.useTwentyfourHour\r\n                    ? lastPicked.hoursFormatted\r\n                    : lastPicked.twelveHoursFormatted;\r\n            }\r\n            if (this._context._options.display.components.minutes) {\r\n                columns++;\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.minutes), Unit.minutes)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementMinutes}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.minutes), Unit.minutes)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementMinutes}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.minutes}]`).innerText = lastPicked.minutesFormatted;\r\n            }\r\n            if (this._context._options.display.components.seconds) {\r\n                columns++;\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.seconds), Unit.seconds)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementSeconds}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.seconds), Unit.seconds)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementSeconds}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.seconds}]`).innerText = lastPicked.secondsFormatted;\r\n            }\r\n            if (!this._context._options.display.components.useTwentyfourHour) {\r\n                columns += 2; //***\r\n                const toggle = timesDiv.querySelector(`[data-action=${ActionTypes.togglePeriod}]`);\r\n                toggle.innerText = lastPicked.meridiem();\r\n                if (!this._context._validation.isValid(lastPicked.clone.manipulate(lastPicked.hours >= 12 ? -12 : 12, Unit.hours))) {\r\n                    toggle.classList.add(Namespace.css.disabled);\r\n                }\r\n                else {\r\n                    toggle.classList.remove(Namespace.css.disabled);\r\n                }\r\n            }\r\n            timesDiv.classList.add(`clock-columns-${columns}`);\r\n        }\r\n        /**\r\n         * Creates the table for the clock display depending on what options are selected.\r\n         * @private\r\n         */\r\n        _grid() {\r\n            const top = [], middle = [], bottom = [], separator = document.createElement('div'), upIcon = this._context._display._iconTag(this._context._options.display.icons.up), downIcon = this._context._display._iconTag(this._context._options.display.icons.down);\r\n            separator.classList.add(Namespace.css.separator, Namespace.css.noHighlight);\r\n            const separatorColon = separator.cloneNode(true);\r\n            separatorColon.innerHTML = ':';\r\n            const getSeparator = (colon = false) => {\r\n                return colon\r\n                    ? separatorColon.cloneNode(true)\r\n                    : separator.cloneNode(true);\r\n            };\r\n            if (this._context._options.display.components.hours) {\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementHour);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementHours);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickHour);\r\n                divElement.setAttribute('data-action', ActionTypes.showHours);\r\n                divElement.setAttribute('data-time-component', Unit.hours);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementHour);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementHours);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n            }\r\n            if (this._context._options.display.components.minutes) {\r\n                if (this._context._options.display.components.hours) {\r\n                    top.push(getSeparator());\r\n                    middle.push(getSeparator(true));\r\n                    bottom.push(getSeparator());\r\n                }\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementMinutes);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.showMinutes);\r\n                divElement.setAttribute('data-time-component', Unit.minutes);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementMinutes);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n            }\r\n            if (this._context._options.display.components.seconds) {\r\n                if (this._context._options.display.components.minutes) {\r\n                    top.push(getSeparator());\r\n                    middle.push(getSeparator(true));\r\n                    bottom.push(getSeparator());\r\n                }\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementSeconds);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.showSeconds);\r\n                divElement.setAttribute('data-time-component', Unit.seconds);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementSeconds);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n            }\r\n            if (!this._context._options.display.components.useTwentyfourHour) {\r\n                let divElement = getSeparator();\r\n                top.push(divElement);\r\n                let button = document.createElement('button');\r\n                button.setAttribute('title', this._context._options.localization.togglePeriod);\r\n                button.setAttribute('data-action', ActionTypes.togglePeriod);\r\n                button.setAttribute('tabindex', '-1');\r\n                button.classList.add('btn', 'btn-primary'); //***\r\n                divElement = document.createElement('div');\r\n                divElement.classList.add(Namespace.css.noHighlight);\r\n                divElement.appendChild(button);\r\n                middle.push(divElement);\r\n                divElement = getSeparator();\r\n                bottom.push(divElement);\r\n            }\r\n            return [...top, ...middle, ...bottom];\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `hours`\r\n     */\r\n    class HourDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.hourContainer);\r\n            for (let i = 0; i <\r\n                (this._context._options.display.components.useTwentyfourHour ? 24 : 12); i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectHour);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.hourContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.date);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectHour}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.hour);\r\n                if (!this._context._validation.isValid(innerDate, Unit.hours)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.hours}`);\r\n                containerClone.innerText = this._context._options.display.components\r\n                    .useTwentyfourHour\r\n                    ? innerDate.hoursFormatted\r\n                    : innerDate.twelveHoursFormatted;\r\n                innerDate.manipulate(1, Unit.hours);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `minutes`\r\n     */\r\n    class MinuteDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.minuteContainer);\r\n            let step = this._context._options.stepping === 1\r\n                ? 5\r\n                : this._context._options.stepping;\r\n            for (let i = 0; i < 60 / step; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectMinute);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.minuteContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.hours);\r\n            let step = this._context._options.stepping === 1\r\n                ? 5\r\n                : this._context._options.stepping;\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectMinute}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.minute);\r\n                if (!this._context._validation.isValid(innerDate, Unit.minutes)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.minutes}`);\r\n                containerClone.innerText = innerDate.minutesFormatted;\r\n                innerDate.manipulate(step, Unit.minutes);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `seconds`\r\n     */\r\n    class secondDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.secondContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectSecond);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.secondContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.minutes);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectSecond}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.second);\r\n                if (!this._context._validation.isValid(innerDate, Unit.seconds)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.seconds}`);\r\n                containerClone.innerText = innerDate.secondsFormatted;\r\n                innerDate.manipulate(5, Unit.seconds);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Main class for all things display related.\r\n     */\r\n    class Display {\r\n        constructor(context) {\r\n            this._isVisible = false;\r\n            /**\r\n             * A document click event to hide the widget if click is outside\r\n             * @private\r\n             * @param e MouseEvent\r\n             */\r\n            this._documentClickEvent = (e) => {\r\n                var _a;\r\n                if (this._isVisible &&\r\n                    !e.composedPath().includes(this.widget) && // click inside the widget\r\n                    !((_a = e.composedPath()) === null || _a === void 0 ? void 0 : _a.includes(this._context._element)) && // click on the element\r\n                    (!this._context._options.display.keepOpen ||\r\n                        !this._context._options.debug ||\r\n                        !window.debug)) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            /**\r\n             * Click event for any action like selecting a date\r\n             * @param e MouseEvent\r\n             * @private\r\n             */\r\n            this._actionsClickEvent = (e) => {\r\n                this._context._action.do(e);\r\n            };\r\n            this._context = context;\r\n            this._dateDisplay = new DateDisplay(context);\r\n            this._monthDisplay = new MonthDisplay(context);\r\n            this._yearDisplay = new YearDisplay(context);\r\n            this._decadeDisplay = new DecadeDisplay(context);\r\n            this._timeDisplay = new TimeDisplay(context);\r\n            this._hourDisplay = new HourDisplay(context);\r\n            this._minuteDisplay = new MinuteDisplay(context);\r\n            this._secondDisplay = new secondDisplay(context);\r\n            this._widget = undefined;\r\n        }\r\n        // Get popper //***\r\n        get popper() {\r\n            return this._popperInstance;\r\n        }\r\n        /**\r\n         * Returns the widget body or undefined\r\n         * @private\r\n         */\r\n        get widget() {\r\n            return this._widget;\r\n        }\r\n        /**\r\n         * Returns this visible state of the picker (shown)\r\n         */\r\n        get isVisible() {\r\n            return this._isVisible;\r\n        }\r\n        /**\r\n         * Updates the table for a particular unit. Used when an option as changed or\r\n         * whenever the class list might need to be refreshed.\r\n         * @param unit\r\n         * @private\r\n         */\r\n        _update(unit) {\r\n            if (!this.widget)\r\n                return;\r\n            //todo do I want some kind of error catching or other guards here?\r\n            switch (unit) {\r\n                case Unit.seconds:\r\n                    this._secondDisplay._update();\r\n                    break;\r\n                case Unit.minutes:\r\n                    this._minuteDisplay._update();\r\n                    break;\r\n                case Unit.hours:\r\n                    this._hourDisplay._update();\r\n                    break;\r\n                case Unit.date:\r\n                    this._dateDisplay._update();\r\n                    break;\r\n                case Unit.month:\r\n                    this._monthDisplay._update();\r\n                    break;\r\n                case Unit.year:\r\n                    this._yearDisplay._update();\r\n                    break;\r\n                case 'clock':\r\n                    this._timeDisplay._update();\r\n                    this._update(Unit.hours);\r\n                    this._update(Unit.minutes);\r\n                    this._update(Unit.seconds);\r\n                    break;\r\n                case 'calendar':\r\n                    this._update(Unit.date);\r\n                    this._update(Unit.year);\r\n                    this._update(Unit.month);\r\n                    this._decadeDisplay._update();\r\n                    this._updateCalendarHeader();\r\n                    break;\r\n                case 'all':\r\n                    if (this._hasTime) {\r\n                        this._update('clock');\r\n                    }\r\n                    if (this._hasDate) {\r\n                        this._update('calendar');\r\n                    }\r\n            }\r\n        }\r\n        /**\r\n         * Shows the picker and creates a Popper instance if needed.\r\n         * Add document click event to hide when clicking outside the picker.\r\n         * @fires Events#show\r\n         */\r\n        show() {\r\n            var _a;\r\n            if (this.widget == undefined) {\r\n                if (this._context._options.useCurrent &&\r\n                    !this._context._options.defaultDate) {\r\n                    //todo in the td4 branch a pr changed this to allow granularity\r\n                    const date = new DateTime().setLocale(this._context._options.localization.locale);\r\n                    if (!this._context._options.keepInvalid) {\r\n                        let tries = 0;\r\n                        let direction = 1;\r\n                        if ((_a = this._context._options.restrictions.maxDate) === null || _a === void 0 ? void 0 : _a.isBefore(date)) {\r\n                            direction = -1;\r\n                        }\r\n                        while (!this._context._validation.isValid(date)) {\r\n                            date.manipulate(direction, Unit.date);\r\n                            if (tries > 31)\r\n                                break;\r\n                            tries++;\r\n                        }\r\n                    }\r\n                    this._context.dates._setValue(date);\r\n                }\r\n                if (this._context._options.defaultDate) {\r\n                    this._context.dates._setValue(this._context._options.defaultDate);\r\n                }\r\n                this._buildWidget();\r\n                if (this._hasDate) {\r\n                    this._showMode();\r\n                }\r\n                if (!this._context._options.display.inline) {\r\n                    document.body.appendChild(this.widget);\r\n                    this._popperInstance = core.createPopper(this._context.toggleElement || this._context._element, //***\r\n                    this.widget, {\r\n                        modifiers: [\r\n                            {\r\n                                name: 'offset',\r\n                                options: {\r\n                                    offset: [0, 8], //***\r\n                                },\r\n                            },\r\n                            { name: 'eventListeners', enabled: true },\r\n                        ],\r\n                        placement: 'auto',\r\n                    });\r\n                }\r\n                else {\r\n                    this._context._element.appendChild(this.widget);\r\n                }\r\n                if (this._context._options.display.viewMode == 'clock') {\r\n                    this._context._action.do({\r\n                        currentTarget: this.widget.querySelector(`.${Namespace.css.timeContainer}`),\r\n                    }, ActionTypes.showClock);\r\n                }\r\n                this.widget\r\n                    .querySelectorAll('[data-action]')\r\n                    .forEach((element) => element.addEventListener('click', this._actionsClickEvent));\r\n                // show the clock when using sideBySide\r\n                if (this._context._options.display.sideBySide) {\r\n                    this._timeDisplay._update();\r\n                    this.widget.getElementsByClassName(Namespace.css.clockContainer)[0].style.display = 'grid';\r\n                }\r\n            }\r\n            this.widget.classList.add(Namespace.css.show);\r\n            if (!this._context._options.display.inline) {\r\n                this._popperInstance.update();\r\n                document.addEventListener('click', this._documentClickEvent);\r\n            }\r\n            this._context._triggerEvent({ type: Namespace.events.show });\r\n            this._isVisible = true;\r\n        }\r\n        /**\r\n         * Changes the calendar view mode. E.g. month <-> year\r\n         * @param direction -/+ number to move currentViewMode\r\n         * @private\r\n         */\r\n        _showMode(direction) {\r\n            if (!this.widget) {\r\n                return;\r\n            }\r\n            if (direction) {\r\n                const max = Math.max(this._context._minViewModeNumber, Math.min(3, this._context._currentViewMode + direction));\r\n                if (this._context._currentViewMode == max)\r\n                    return;\r\n                this._context._currentViewMode = max;\r\n            }\r\n            this.widget\r\n                .querySelectorAll(`.${Namespace.css.dateContainer} > div:not(.${Namespace.css.calendarHeader}), .${Namespace.css.timeContainer} > div`)\r\n                .forEach((e) => (e.style.display = 'none'));\r\n            const datePickerMode = DatePickerModes[this._context._currentViewMode];\r\n            let picker = this.widget.querySelector(`.${datePickerMode.className}`);\r\n            switch (datePickerMode.className) {\r\n                case Namespace.css.decadesContainer:\r\n                    this._decadeDisplay._update();\r\n                    break;\r\n                case Namespace.css.yearsContainer:\r\n                    this._yearDisplay._update();\r\n                    break;\r\n                case Namespace.css.monthsContainer:\r\n                    this._monthDisplay._update();\r\n                    break;\r\n                case Namespace.css.daysContainer:\r\n                    this._dateDisplay._update();\r\n                    break;\r\n            }\r\n            picker.style.display = 'grid';\r\n            this._updateCalendarHeader();\r\n        }\r\n        _updateCalendarHeader() {\r\n            const showing = [\r\n                ...this.widget.querySelector(`.${Namespace.css.dateContainer} div[style*=\"display: grid\"]`).classList,\r\n            ].find((x) => x.startsWith(Namespace.css.dateContainer));\r\n            const [previous, switcher, next] = this._context._display.widget\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switch (showing) {\r\n                case Namespace.css.decadesContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousCentury);\r\n                    switcher.setAttribute('title', '');\r\n                    next.setAttribute('title', this._context._options.localization.nextCentury);\r\n                    break;\r\n                case Namespace.css.yearsContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousDecade);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectDecade);\r\n                    next.setAttribute('title', this._context._options.localization.nextDecade);\r\n                    break;\r\n                case Namespace.css.monthsContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousYear);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectYear);\r\n                    next.setAttribute('title', this._context._options.localization.nextYear);\r\n                    break;\r\n                case Namespace.css.daysContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousMonth);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectMonth);\r\n                    next.setAttribute('title', this._context._options.localization.nextMonth);\r\n                    switcher.innerText = this._context._viewDate.format({\r\n                        month: this._context._options.localization.dayViewHeaderFormat,\r\n                    });\r\n                    break;\r\n            }\r\n            switcher.innerText = switcher.getAttribute(showing);\r\n        }\r\n        /**\r\n         * Hides the picker if needed.\r\n         * Remove document click event to hide when clicking outside the picker.\r\n         * @fires Events#hide\r\n         */\r\n        hide() {\r\n            this.widget.classList.remove(Namespace.css.show);\r\n            if (this._isVisible) {\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.hide,\r\n                    date: this._context._unset\r\n                        ? null\r\n                        : this._context.dates.lastPicked\r\n                            ? this._context.dates.lastPicked.clone\r\n                            : void 0,\r\n                });\r\n                this._isVisible = false;\r\n            }\r\n            document.removeEventListener('click', this._documentClickEvent);\r\n        }\r\n        /**\r\n         * Toggles the picker's open state. Fires a show/hide event depending.\r\n         */\r\n        toggle() {\r\n            return this._isVisible ? this.hide() : this.show();\r\n        }\r\n        /**\r\n         * Removes document and data-action click listener and reset the widget\r\n         * @private\r\n         */\r\n        _dispose() {\r\n            document.removeEventListener('click', this._documentClickEvent);\r\n            if (!this.widget)\r\n                return;\r\n            this.widget\r\n                .querySelectorAll('[data-action]')\r\n                .forEach((element) => element.removeEventListener('click', this._actionsClickEvent));\r\n            this.widget.parentNode.removeChild(this.widget);\r\n            this._widget = undefined;\r\n        }\r\n        /**\r\n         * Builds the widgets html template.\r\n         * @private\r\n         */\r\n        _buildWidget() {\r\n            const template = document.createElement('div');\r\n            template.classList.add(Namespace.css.widget);\r\n            const dateView = document.createElement('div');\r\n            dateView.classList.add(Namespace.css.dateContainer);\r\n            dateView.append(this._headTemplate, this._decadeDisplay._picker, this._yearDisplay._picker, this._monthDisplay._picker, this._dateDisplay._picker);\r\n            const timeView = document.createElement('div');\r\n            timeView.classList.add(Namespace.css.timeContainer);\r\n            timeView.appendChild(this._timeDisplay._picker);\r\n            timeView.appendChild(this._hourDisplay._picker);\r\n            timeView.appendChild(this._minuteDisplay._picker);\r\n            timeView.appendChild(this._secondDisplay._picker);\r\n            const toolbar = document.createElement('div');\r\n            toolbar.classList.add(Namespace.css.toolbar);\r\n            toolbar.append(...this._toolbar);\r\n            if (this._context._options.display.inline) {\r\n                template.classList.add(Namespace.css.inline);\r\n            }\r\n            if (this._context._options.display.calendarWeeks) {\r\n                template.classList.add('calendarWeeks');\r\n            }\r\n            if (this._context._options.display.sideBySide &&\r\n                this._hasDate &&\r\n                this._hasTime) {\r\n                template.classList.add(Namespace.css.sideBySide);\r\n                if (this._context._options.display.toolbarPlacement === 'top') {\r\n                    template.appendChild(toolbar);\r\n                }\r\n                const row = document.createElement('div');\r\n                row.classList.add('td-row');\r\n                dateView.classList.add('td-half');\r\n                timeView.classList.add('td-half');\r\n                row.appendChild(dateView);\r\n                row.appendChild(timeView);\r\n                template.appendChild(row);\r\n                if (this._context._options.display.toolbarPlacement === 'bottom') {\r\n                    template.appendChild(toolbar);\r\n                }\r\n                this._widget = template;\r\n                return;\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'top') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            if (this._hasDate) {\r\n                if (this._hasTime) {\r\n                    dateView.classList.add(Namespace.css.collapse);\r\n                    if (this._context._options.display.viewMode !== 'clock')\r\n                        dateView.classList.add(Namespace.css.show);\r\n                }\r\n                template.appendChild(dateView);\r\n            }\r\n            if (this._hasTime) {\r\n                if (this._hasDate) {\r\n                    timeView.classList.add(Namespace.css.collapse);\r\n                    if (this._context._options.display.viewMode === 'clock')\r\n                        timeView.classList.add(Namespace.css.show);\r\n                }\r\n                template.appendChild(timeView);\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'bottom') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            const arrow = document.createElement('div');\r\n            arrow.classList.add('arrow');\r\n            arrow.setAttribute('data-popper-arrow', '');\r\n            template.appendChild(arrow);\r\n            this._widget = template;\r\n        }\r\n        /**\r\n         * Returns true if the hours, minutes, or seconds component is turned on\r\n         */\r\n        get _hasTime() {\r\n            return (this._context._options.display.components.clock &&\r\n                (this._context._options.display.components.hours ||\r\n                    this._context._options.display.components.minutes ||\r\n                    this._context._options.display.components.seconds));\r\n        }\r\n        /**\r\n         * Returns true if the year, month, or date component is turned on\r\n         */\r\n        get _hasDate() {\r\n            return (this._context._options.display.components.calendar &&\r\n                (this._context._options.display.components.year ||\r\n                    this._context._options.display.components.month ||\r\n                    this._context._options.display.components.date));\r\n        }\r\n        /**\r\n         * Get the toolbar html based on options like buttons.today\r\n         * @private\r\n         */\r\n        get _toolbar() {\r\n            const toolbar = [];\r\n            if (this._context._options.display.buttons.today) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.today);\r\n                div.setAttribute('title', this._context._options.localization.today);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.today));\r\n                toolbar.push(div);\r\n            }\r\n            if (!this._context._options.display.sideBySide &&\r\n                this._hasDate &&\r\n                this._hasTime) {\r\n                let title, icon;\r\n                if (this._context._options.display.viewMode === 'clock') {\r\n                    title = this._context._options.localization.selectDate;\r\n                    icon = this._context._options.display.icons.date;\r\n                }\r\n                else {\r\n                    title = this._context._options.localization.selectTime;\r\n                    icon = this._context._options.display.icons.time;\r\n                }\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.togglePicker);\r\n                div.setAttribute('title', title);\r\n                div.appendChild(this._iconTag(icon));\r\n                toolbar.push(div);\r\n            }\r\n            if (this._context._options.display.buttons.clear) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.clear);\r\n                div.setAttribute('title', this._context._options.localization.clear);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.clear));\r\n                toolbar.push(div);\r\n            }\r\n            if (this._context._options.display.buttons.close) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.close);\r\n                div.setAttribute('title', this._context._options.localization.close);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.close));\r\n                toolbar.push(div);\r\n            }\r\n            return toolbar;\r\n        }\r\n        /***\r\n         * Builds the base header template with next and previous icons\r\n         * @private\r\n         */\r\n        get _headTemplate() {\r\n            const calendarHeader = document.createElement('div');\r\n            calendarHeader.classList.add(Namespace.css.calendarHeader);\r\n            const previous = document.createElement('div');\r\n            previous.classList.add(Namespace.css.previous);\r\n            previous.setAttribute('data-action', ActionTypes.previous);\r\n            previous.appendChild(this._iconTag(this._context._options.display.icons.previous));\r\n            const switcher = document.createElement('div');\r\n            switcher.classList.add(Namespace.css.switch);\r\n            switcher.setAttribute('data-action', ActionTypes.pickerSwitch);\r\n            const next = document.createElement('div');\r\n            next.classList.add(Namespace.css.next);\r\n            next.setAttribute('data-action', ActionTypes.next);\r\n            next.appendChild(this._iconTag(this._context._options.display.icons.next));\r\n            calendarHeader.append(previous, switcher, next);\r\n            return calendarHeader;\r\n        }\r\n        /**\r\n         * Builds an icon tag as either an `<i>`\r\n         * or with icons.type is `sprites` then an svg tag instead\r\n         * @param iconClass\r\n         * @private\r\n         */\r\n        _iconTag(iconClass) {\r\n            if (this._context._options.display.icons.type === 'sprites') {\r\n                const svg = document.createElement('svg');\r\n                svg.innerHTML = `<use xlink:href='${iconClass}'></use>`;\r\n                return svg;\r\n            }\r\n            const icon = document.createElement('i');\r\n            DOMTokenList.prototype.add.apply(icon.classList, iconClass.split(' '));\r\n            return icon;\r\n        }\r\n        /**\r\n         * Causes the widget to get rebuilt on next show. If the picker is already open\r\n         * then hide and reshow it.\r\n         * @private\r\n         */\r\n        _rebuild() {\r\n            const wasVisible = this._isVisible;\r\n            if (wasVisible)\r\n                this.hide();\r\n            this._dispose();\r\n            if (wasVisible) {\r\n                this.show();\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Main class for date validation rules based on the options provided.\r\n     */\r\n    class Validation {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Checks to see if the target date is valid based on the rules provided in the options.\r\n         * Granularity can be provide to chek portions of the date instead of the whole.\r\n         * @param targetDate\r\n         * @param granularity\r\n         */\r\n        isValid(targetDate, granularity) {\r\n            var _a;\r\n            if (this._context._options.restrictions.disabledDates.length > 0 &&\r\n                this._isInDisabledDates(targetDate)) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.enabledDates.length > 0 &&\r\n                !this._isInEnabledDates(targetDate)) {\r\n                return false;\r\n            }\r\n            if (((_a = this._context._options.restrictions.daysOfWeekDisabled) === null || _a === void 0 ? void 0 : _a.length) > 0 &&\r\n                this._context._options.restrictions.daysOfWeekDisabled.indexOf(targetDate.weekDay) !== -1) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.minDate &&\r\n                targetDate.isBefore(this._context._options.restrictions.minDate, granularity)) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.maxDate &&\r\n                targetDate.isAfter(this._context._options.restrictions.maxDate, granularity)) {\r\n                return false;\r\n            }\r\n            if (granularity === Unit.hours ||\r\n                granularity === Unit.minutes ||\r\n                granularity === Unit.seconds) {\r\n                if (this._context._options.restrictions.disabledHours.length > 0 &&\r\n                    this._isInDisabledHours(targetDate)) {\r\n                    return false;\r\n                }\r\n                if (this._context._options.restrictions.enabledHours.length > 0 &&\r\n                    !this._isInEnabledHours(targetDate)) {\r\n                    return false;\r\n                }\r\n                if (this._context._options.restrictions.disabledTimeIntervals.length > 0) {\r\n                    for (let i = 0; i < this._context._options.restrictions.disabledTimeIntervals.length; i++) {\r\n                        if (targetDate.isBetween(this._context._options.restrictions.disabledTimeIntervals[i].from, this._context._options.restrictions.disabledTimeIntervals[i].to))\r\n                            return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * Checks to see if the disabledDates option is in use and returns true (meaning invalid)\r\n         * if the `testDate` is with in the array. Granularity is by date.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInDisabledDates(testDate) {\r\n            if (!this._context._options.restrictions.disabledDates ||\r\n                this._context._options.restrictions.disabledDates.length === 0)\r\n                return false;\r\n            const formattedDate = testDate.format(Dates.getFormatByUnit(Unit.date));\r\n            return this._context._options.restrictions.disabledDates\r\n                .map((x) => x.format(Dates.getFormatByUnit(Unit.date)))\r\n                .find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the enabledDates option is in use and returns true (meaning valid)\r\n         * if the `testDate` is with in the array. Granularity is by date.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInEnabledDates(testDate) {\r\n            if (!this._context._options.restrictions.enabledDates ||\r\n                this._context._options.restrictions.enabledDates.length === 0)\r\n                return true;\r\n            const formattedDate = testDate.format(Dates.getFormatByUnit(Unit.date));\r\n            return this._context._options.restrictions.enabledDates\r\n                .map((x) => x.format(Dates.getFormatByUnit(Unit.date)))\r\n                .find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the disabledHours option is in use and returns true (meaning invalid)\r\n         * if the `testDate` is with in the array. Granularity is by hours.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInDisabledHours(testDate) {\r\n            if (!this._context._options.restrictions.disabledHours ||\r\n                this._context._options.restrictions.disabledHours.length === 0)\r\n                return false;\r\n            const formattedDate = testDate.hours;\r\n            return this._context._options.restrictions.disabledHours.find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the enabledHours option is in use and returns true (meaning valid)\r\n         * if the `testDate` is with in the array. Granularity is by hours.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInEnabledHours(testDate) {\r\n            if (!this._context._options.restrictions.enabledHours ||\r\n                this._context._options.restrictions.enabledHours.length === 0)\r\n                return true;\r\n            const formattedDate = testDate.hours;\r\n            return this._context._options.restrictions.enabledHours.find((x) => x === formattedDate);\r\n        }\r\n    }\n\n    class OptionConverter {\r\n        static _mergeOptions(providedOptions, mergeTo) {\r\n            const newOptions = {};\r\n            let path = '';\r\n            const processKey = (key, value, providedType, defaultType) => {\r\n                switch (key) {\r\n                    case 'defaultDate': {\r\n                        const dateTime = this._dateConversion(value, 'defaultDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('defaultDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'viewDate': {\r\n                        const dateTime = this._dateConversion(value, 'viewDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('viewDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'minDate': {\r\n                        if (value === undefined) {\r\n                            return value;\r\n                        }\r\n                        const dateTime = this._dateConversion(value, 'restrictions.minDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('restrictions.minDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'maxDate': {\r\n                        if (value === undefined) {\r\n                            return value;\r\n                        }\r\n                        const dateTime = this._dateConversion(value, 'restrictions.maxDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('restrictions.maxDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'disabledHours':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.disabledHours', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.disabledHours', 0, 23);\r\n                        return value;\r\n                    case 'enabledHours':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.enabledHours', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.enabledHours', 0, 23);\r\n                        return value;\r\n                    case 'daysOfWeekDisabled':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.daysOfWeekDisabled', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 6).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.daysOfWeekDisabled', 0, 6);\r\n                        return value;\r\n                    case 'enabledDates':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckDateArray('restrictions.enabledDates', value, providedType);\r\n                        return value;\r\n                    case 'disabledDates':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckDateArray('restrictions.disabledDates', value, providedType);\r\n                        return value;\r\n                    case 'disabledTimeIntervals':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        if (!Array.isArray(value)) {\r\n                            Namespace.errorMessages.typeMismatch(key, providedType, 'array of { from: DateTime|Date, to: DateTime|Date }');\r\n                        }\r\n                        const valueObject = value;\r\n                        for (let i = 0; i < valueObject.length; i++) {\r\n                            Object.keys(valueObject[i]).forEach((vk) => {\r\n                                const subOptionName = `${key}[${i}].${vk}`;\r\n                                let d = valueObject[i][vk];\r\n                                const dateTime = this._dateConversion(d, subOptionName);\r\n                                if (!dateTime) {\r\n                                    Namespace.errorMessages.typeMismatch(subOptionName, typeof d, 'DateTime or Date');\r\n                                }\r\n                                valueObject[i][vk] = dateTime;\r\n                            });\r\n                        }\r\n                        return valueObject;\r\n                    case 'toolbarPlacement':\r\n                    case 'type':\r\n                    case 'viewMode':\r\n                    case 'dayViewHeaderFormat':\r\n                        const optionValues = {\r\n                            toolbarPlacement: ['top', 'bottom', 'default'],\r\n                            type: ['icons', 'sprites'],\r\n                            viewMode: ['clock', 'calendar', 'months', 'years', 'decades'],\r\n                            dayViewHeaderFormat: [\r\n                                'numeric',\r\n                                '2-digit',\r\n                                'long',\r\n                                'short',\r\n                                'narrow',\r\n                            ],\r\n                        };\r\n                        const keyOptions = optionValues[key];\r\n                        if (!keyOptions.includes(value))\r\n                            Namespace.errorMessages.unexpectedOptionValue(path.substring(1), value, keyOptions);\r\n                        return value;\r\n                    case 'inputFormat':\r\n                        return value;\r\n                    default:\r\n                        switch (defaultType) {\r\n                            case 'boolean':\r\n                                return value === 'true' || value === true;\r\n                            case 'number':\r\n                                return +value;\r\n                            case 'string':\r\n                                return value.toString();\r\n                            case 'object':\r\n                                return {};\r\n                            case 'function':\r\n                                return value;\r\n                            default:\r\n                                Namespace.errorMessages.typeMismatch(path.substring(1), providedType, defaultType);\r\n                        }\r\n                }\r\n            };\r\n            /**\r\n             * The spread operator caused sub keys to be missing after merging.\r\n             * This is to fix that issue by using spread on the child objects first.\r\n             * Also handles complex options like disabledDates\r\n             * @param provided An option from new providedOptions\r\n             * @param mergeOption Default option to compare types against\r\n             * @param copyTo Destination object. This was add to prevent reference copies\r\n             */\r\n            const spread = (provided, mergeOption, copyTo) => {\r\n                const unsupportedOptions = Object.keys(provided).filter((x) => !Object.keys(mergeOption).includes(x));\r\n                if (unsupportedOptions.length > 0) {\r\n                    const flattenedOptions = OptionConverter._flattenDefaultOptions;\r\n                    const errors = unsupportedOptions.map((x) => {\r\n                        let error = `\"${path.substring(1)}.${x}\" in not a known option.`;\r\n                        let didYouMean = flattenedOptions.find((y) => y.includes(x));\r\n                        if (didYouMean)\r\n                            error += `Did you mean \"${didYouMean}\"?`;\r\n                        return error;\r\n                    });\r\n                    Namespace.errorMessages.unexpectedOptions(errors);\r\n                }\r\n                Object.keys(mergeOption).forEach((key) => {\r\n                    const defaultOptionValue = mergeOption[key];\r\n                    let providedType = typeof provided[key];\r\n                    let defaultType = typeof defaultOptionValue;\r\n                    let value = provided[key];\r\n                    if (!provided.hasOwnProperty(key)) {\r\n                        if (defaultType === 'undefined' ||\r\n                            ((value === null || value === void 0 ? void 0 : value.length) === 0 && Array.isArray(defaultOptionValue))) {\r\n                            copyTo[key] = defaultOptionValue;\r\n                            return;\r\n                        }\r\n                        provided[key] = defaultOptionValue;\r\n                        value = provided[key];\r\n                    }\r\n                    path += `.${key}`;\r\n                    copyTo[key] = processKey(key, value, providedType, defaultType);\r\n                    if (typeof defaultOptionValue !== 'object' || key === 'inputFormat') {\r\n                        path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                        return;\r\n                    }\r\n                    if (!Array.isArray(provided[key])) {\r\n                        spread(provided[key], defaultOptionValue, copyTo[key]);\r\n                        path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                    }\r\n                    path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                });\r\n            };\r\n            spread(providedOptions, mergeTo, newOptions);\r\n            return newOptions;\r\n        }\r\n        static _dataToOptions(element, options) {\r\n            const eData = element.dataset;\r\n            if (!eData ||\r\n                Object.keys(eData).length === 0 ||\r\n                eData.constructor !== DOMStringMap)\r\n                return options;\r\n            let dataOptions = {};\r\n            // because dataset returns camelCase including the 'td' key the option\r\n            // key won't align\r\n            const objectToNormalized = (object) => {\r\n                const lowered = {};\r\n                Object.keys(object).forEach((x) => {\r\n                    lowered[x.toLowerCase()] = x;\r\n                });\r\n                return lowered;\r\n            };\r\n            const rabbitHole = (split, index, optionSubgroup, value) => {\r\n                // first round = display { ... }\r\n                const normalizedOptions = objectToNormalized(optionSubgroup);\r\n                const keyOption = normalizedOptions[split[index].toLowerCase()];\r\n                const internalObject = {};\r\n                if (keyOption === undefined)\r\n                    return internalObject;\r\n                // if this is another object, continue down the rabbit hole\r\n                if (optionSubgroup[keyOption].constructor === Object) {\r\n                    index++;\r\n                    internalObject[keyOption] = rabbitHole(split, index, optionSubgroup[keyOption], value);\r\n                }\r\n                else {\r\n                    internalObject[keyOption] = value;\r\n                }\r\n                return internalObject;\r\n            };\r\n            const optionsLower = objectToNormalized(options);\r\n            Object.keys(eData)\r\n                .filter((x) => x.startsWith(Namespace.dataKey))\r\n                .map((x) => x.substring(2))\r\n                .forEach((key) => {\r\n                let keyOption = optionsLower[key.toLowerCase()];\r\n                // dataset merges dashes to camelCase... yay\r\n                // i.e. key = display_components_seconds\r\n                if (key.includes('_')) {\r\n                    // [display, components, seconds]\r\n                    const split = key.split('_');\r\n                    // display\r\n                    keyOption = optionsLower[split[0].toLowerCase()];\r\n                    if (keyOption !== undefined &&\r\n                        options[keyOption].constructor === Object) {\r\n                        dataOptions[keyOption] = rabbitHole(split, 1, options[keyOption], eData[`td${key}`]);\r\n                    }\r\n                }\r\n                // or key = multipleDate\r\n                else if (keyOption !== undefined) {\r\n                    dataOptions[keyOption] = eData[`td${key}`];\r\n                }\r\n            });\r\n            return this._mergeOptions(dataOptions, options);\r\n        }\r\n        /**\r\n         * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n         * @param d If a string will attempt creating a date from it.\r\n         * @private\r\n         */\r\n        static _dateTypeCheck(d) {\r\n            if (d.constructor.name === 'DateTime')\r\n                return d;\r\n            if (d.constructor.name === 'Date') {\r\n                return DateTime.convert(d);\r\n            }\r\n            if (typeof d === typeof '') {\r\n                const dateTime = new DateTime(d);\r\n                if (JSON.stringify(dateTime) === 'null') {\r\n                    return null;\r\n                }\r\n                return dateTime;\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Type checks that `value` is an array of Date or DateTime\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         * @param value Option value\r\n         * @param providedType Used to provide text to error messages\r\n         */\r\n        static _typeCheckDateArray(optionName, value, providedType) {\r\n            if (!Array.isArray(value)) {\r\n                Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of DateTime or Date');\r\n            }\r\n            for (let i = 0; i < value.length; i++) {\r\n                let d = value[i];\r\n                const dateTime = this._dateConversion(d, optionName);\r\n                if (!dateTime) {\r\n                    Namespace.errorMessages.typeMismatch(optionName, typeof d, 'DateTime or Date');\r\n                }\r\n                value[i] = dateTime;\r\n            }\r\n        }\r\n        /**\r\n         * Type checks that `value` is an array of numbers\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         * @param value Option value\r\n         * @param providedType Used to provide text to error messages\r\n         */\r\n        static _typeCheckNumberArray(optionName, value, providedType) {\r\n            if (!Array.isArray(value) || value.length && value.find((x) => typeof x !== typeof 0)) { //***\r\n                Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of numbers');\r\n            }\r\n            return;\r\n        }\r\n        /**\r\n         * Attempts to convert `d` to a DateTime object\r\n         * @param d value to convert\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         */\r\n        static _dateConversion(d, optionName) {\r\n            if (typeof d === typeof '') {\r\n                Namespace.errorMessages.dateString();\r\n            }\r\n            const converted = this._dateTypeCheck(d);\r\n            if (!converted) {\r\n                Namespace.errorMessages.failedToParseDate(optionName, d);\r\n            }\r\n            return converted;\r\n        }\r\n        static get _flattenDefaultOptions() {\r\n            if (this._flatback)\r\n                return this._flatback;\r\n            const deepKeys = (t, pre = []) => Array.isArray(t)\r\n                ? []\r\n                : Object(t) === t\r\n                    ? Object.entries(t).flatMap(([k, v]) => deepKeys(v, [...pre, k]))\r\n                    : pre.join('.');\r\n            this._flatback = deepKeys(DefaultOptions);\r\n            return this._flatback;\r\n        }\r\n        /**\r\n         * Some options conflict like min/max date. Verify that these kinds of options\r\n         * are set correctly.\r\n         * @param config\r\n         */\r\n        static _validateConflcits(config) {\r\n            if (config.restrictions.minDate && config.restrictions.maxDate) {\r\n                if (config.restrictions.minDate.isAfter(config.restrictions.maxDate)) {\r\n                    Namespace.errorMessages.conflictingConfiguration('minDate is after maxDate');\r\n                }\r\n                if (config.restrictions.maxDate.isBefore(config.restrictions.minDate)) {\r\n                    Namespace.errorMessages.conflictingConfiguration('maxDate is before minDate');\r\n                }\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * A robust and powerful date/time picker component.\r\n     */\r\n    class TempusDominus {\r\n        constructor(element, options = {}) {\r\n            this._currentViewMode = 0;\r\n            this._subscribers = {};\r\n            this._minViewModeNumber = 0;\r\n            this._isDisabled = false;\r\n            this._notifyChangeEventContext = 0;\r\n            this._viewDate = new DateTime();\r\n            /**\r\n             * Event for when the input field changes. This is a class level method so there's\r\n             * something for the remove listener function.\r\n             * @private\r\n             */\r\n            this._inputChangeEvent = () => {\r\n                //*** let parsedDate = OptionConverter._dateTypeCheck(this._input.value);\r\n                let parsedDate;\r\n                if (typeof this._options.display.inputFormat == 'string') {\r\n                    let numberingSystem = (new Intl.NumberFormat(this._options.localization.locale)).resolvedOptions().numberingSystem;\r\n                    parsedDate = new DateTime(luxon__namespace.DateTime.fromFormat(this._input.value, this._options.display.inputFormat, { locale: this._options.localization.locale, numberingSystem }).toJSDate()); //***\r\n                }\r\n                if (parsedDate === null || parsedDate === void 0 ? void 0 : parsedDate.isValid) {\r\n                    parsedDate.setLocale(this._options.localization.locale); //***\r\n                    this.dates._setValue(parsedDate);\r\n                }\r\n                else {\r\n                    this._triggerEvent({\r\n                        type: Namespace.events.error,\r\n                        reason: Namespace.errorMessages.failedToParseInput,\r\n                        date: parsedDate,\r\n                    });\r\n                }\r\n            };\r\n            /**\r\n             * Event for when the toggle is clicked. This is a class level method so there's\r\n             * something for the remove listener function.\r\n             * @private\r\n             */\r\n            this._toggleClickEvent = () => {\r\n                this.toggle();\r\n            };\r\n            if (!element) {\r\n                Namespace.errorMessages.mustProvideElement;\r\n            }\r\n            this._element = element;\r\n            this._options = this._initializeOptions(options, DefaultOptions, true);\r\n            this._viewDate.setLocale(this._options.localization.locale);\r\n            this._unset = true;\r\n            this._display = new Display(this);\r\n            this._validation = new Validation(this);\r\n            this.dates = new Dates(this);\r\n            this._action = new Actions(this);\r\n            this._initializeInput();\r\n            this._initializeToggle();\r\n            if (this._options.display.inline)\r\n                this._display.show();\r\n        }\r\n        get viewDate() {\r\n            return this._viewDate;\r\n        }\r\n        // Get toggle button //***\r\n        get toggleElement() {\r\n            return this._toggle;\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Update the picker options. If `reset` is provide `options` will be merged with DefaultOptions instead.\r\n         * @param options\r\n         * @param reset\r\n         * @public\r\n         */\r\n        updateOptions(options, reset = false) {\r\n            if (reset)\r\n                this._options = this._initializeOptions(options, DefaultOptions);\r\n            else\r\n                this._options = this._initializeOptions(options, this._options);\r\n            this._display._rebuild();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Toggles the picker open or closed. If the picker is disabled, nothing will happen.\r\n         * @public\r\n         */\r\n        toggle() {\r\n            if (this._isDisabled)\r\n                return;\r\n            this._display.toggle();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Shows the picker unless the picker is disabled.\r\n         * @public\r\n         */\r\n        show() {\r\n            if (this._isDisabled)\r\n                return;\r\n            this._display.show();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Hides the picker unless the picker is disabled.\r\n         * @public\r\n         */\r\n        hide() {\r\n            this._display.hide();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Disables the picker and the target input field.\r\n         * @public\r\n         */\r\n        disable() {\r\n            var _a;\r\n            this._isDisabled = true;\r\n            // todo this might be undesired. If a dev disables the input field to\r\n            // only allow using the picker, this will break that.\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.setAttribute('disabled', 'disabled');\r\n            this._display.hide();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Enables the picker and the target input field.\r\n         * @public\r\n         */\r\n        enable() {\r\n            var _a;\r\n            this._isDisabled = false;\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.removeAttribute('disabled');\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Clears all the selected dates\r\n         * @public\r\n         */\r\n        clear() {\r\n            this.dates.clear();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Allows for a direct subscription to picker events, without having to use addEventListener on the element.\r\n         * @param eventTypes See Namespace.Events\r\n         * @param callbacks Function to call when event is triggered\r\n         * @public\r\n         */\r\n        subscribe(eventTypes, callbacks) {\r\n            if (typeof eventTypes === 'string') {\r\n                eventTypes = [eventTypes];\r\n            }\r\n            let callBackArray = [];\r\n            if (!Array.isArray(callbacks)) {\r\n                callBackArray = [callbacks];\r\n            }\r\n            else {\r\n                callBackArray = callbacks;\r\n            }\r\n            if (eventTypes.length !== callBackArray.length) {\r\n                Namespace.errorMessages.subscribeMismatch;\r\n            }\r\n            const returnArray = [];\r\n            for (let i = 0; i < eventTypes.length; i++) {\r\n                const eventType = eventTypes[i];\r\n                if (!Array.isArray(this._subscribers[eventType])) {\r\n                    this._subscribers[eventType] = [];\r\n                }\r\n                this._subscribers[eventType].push(callBackArray[i]);\r\n                returnArray.push({\r\n                    unsubscribe: this._unsubscribe.bind(this, eventType, this._subscribers[eventType].length - 1),\r\n                });\r\n                if (eventTypes.length === 1) {\r\n                    return returnArray[0];\r\n                }\r\n            }\r\n            return returnArray;\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Hides the picker and removes event listeners\r\n         */\r\n        dispose() {\r\n            var _a, _b;\r\n            this._display.hide();\r\n            // this will clear the document click event listener\r\n            this._display._dispose();\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.removeEventListener('change', this._inputChangeEvent);\r\n            if (this._options.allowInputToggle) {\r\n                (_b = this._input) === null || _b === void 0 ? void 0 : _b.removeEventListener('click', this._toggleClickEvent);\r\n            }\r\n            this._toggle.removeEventListener('click', this._toggleClickEvent);\r\n            this._subscribers = {};\r\n        }\r\n        /**\r\n         * Triggers an event like ChangeEvent when the picker has updated the value\r\n         * of a selected date.\r\n         * @param event Accepts a BaseEvent object.\r\n         * @private\r\n         */\r\n        _triggerEvent(event) {\r\n            // checking hasOwnProperty because the BasicEvent also falls through here otherwise\r\n            if (event && event.hasOwnProperty('date')) {\r\n                const { date, oldDate, isClear } = event;\r\n                // this was to prevent a max call stack error\r\n                // https://github.com/tempusdominus/core/commit/15a280507f5277b31b0b3319ab1edc7c19a000fb\r\n                // todo see if this is still needed or if there's a cleaner way\r\n                this._notifyChangeEventContext++;\r\n                if ((date && oldDate && date.isSame(oldDate)) ||\r\n                    (!isClear && !date && !oldDate) ||\r\n                    this._notifyChangeEventContext > 1) {\r\n                    this._notifyChangeEventContext = 0;\r\n                    return;\r\n                }\r\n                this._handleAfterChangeEvent(event);\r\n                $__default['default'] === null || $__default['default'] === void 0 ? void 0 : $__default['default'](this._element).trigger($__default['default'].Event(event.type, { date: date })); //***\r\n            }\r\n            this._element.dispatchEvent(new CustomEvent(event.type, { detail: event }));\r\n            if (window.jQuery) {\r\n                const $ = window.jQuery;\r\n                $(this._element).trigger(event);\r\n            }\r\n            const publish = () => {\r\n                // return if event is not subscribed\r\n                if (!Array.isArray(this._subscribers[event.type])) {\r\n                    return;\r\n                }\r\n                // Trigger callback for each subscriber\r\n                this._subscribers[event.type].forEach((callback) => {\r\n                    callback(event);\r\n                });\r\n            };\r\n            publish();\r\n            this._notifyChangeEventContext = 0;\r\n        }\r\n        /**\r\n         * Fires a ViewUpdate event when, for example, the month view is changed.\r\n         * @param {Unit} unit\r\n         * @private\r\n         */\r\n        _viewUpdate(unit) {\r\n            this._triggerEvent({\r\n                type: Namespace.events.update,\r\n                change: unit,\r\n                viewDate: this._viewDate.clone,\r\n            });\r\n        }\r\n        _unsubscribe(eventName, index) {\r\n            this._subscribers[eventName].splice(index, 1);\r\n        }\r\n        /**\r\n         * Merges two Option objects together and validates options type\r\n         * @param config new Options\r\n         * @param mergeTo Options to merge into\r\n         * @param includeDataset When true, the elements data-td attributes will be included in the\r\n         * @private\r\n         */\r\n        _initializeOptions(config, mergeTo, includeDataset = false) {\r\n            var _a;\r\n            config = OptionConverter._mergeOptions(config, mergeTo);\r\n            if (includeDataset)\r\n                config = OptionConverter._dataToOptions(this._element, config);\r\n            OptionConverter._validateConflcits(config);\r\n            config.viewDate = config.viewDate.setLocale(config.localization.locale);\r\n            if (!this._viewDate.isSame(config.viewDate)) {\r\n                this._viewDate = config.viewDate;\r\n            }\r\n            if (config.display.inputFormat) { //***\r\n                let inputFormat = config.display.inputFormat;\r\n                let components = config.display.components;\r\n                components.year = /y/.test(inputFormat);\r\n                components.month = /M/.test(inputFormat);\r\n                components.date = /d/.test(inputFormat);\r\n                components.hours = (/h/i).test(inputFormat);\r\n                components.useTwentyfourHour = /H/.test(inputFormat);\r\n                components.minutes = /m/.test(inputFormat);\r\n                components.seconds = /s/.test(inputFormat);\r\n            }\r\n            /**\r\n             * Sets the minimum view allowed by the picker. For example the case of only\r\n             * allowing year and month to be selected but not date.\r\n             */\r\n            if (config.display.components.year) {\r\n                this._minViewModeNumber = 2;\r\n            }\r\n            if (config.display.components.month) {\r\n                this._minViewModeNumber = 1;\r\n            }\r\n            if (config.display.components.date) {\r\n                this._minViewModeNumber = 0;\r\n            }\r\n            this._currentViewMode = Math.max(this._minViewModeNumber, this._currentViewMode);\r\n            // Update view mode if needed\r\n            if (DatePickerModes[this._currentViewMode].name !== config.display.viewMode) {\r\n                this._currentViewMode = Math.max(DatePickerModes.findIndex((x) => x.name === config.display.viewMode), this._minViewModeNumber);\r\n            }\r\n            // defaults the input format based on the components enabled\r\n            //*** if (config.display.inputFormat === undefined) {\r\n            //   const components = config.display.components;\r\n            //   config.display.inputFormat = {\r\n            //     year: components.calendar && components.year ? 'numeric' : undefined,\r\n            //     month: components.calendar && components.month ? '2-digit' : undefined,\r\n            //     day: components.calendar && components.date ? '2-digit' : undefined,\r\n            //     hour:\r\n            //       components.clock && components.hours\r\n            //         ? components.useTwentyfourHour\r\n            //           ? '2-digit'\r\n            //           : 'numeric'\r\n            //         : undefined,\r\n            //     minute: components.clock && components.minutes ? '2-digit' : undefined,\r\n            //     second: components.clock && components.seconds ? '2-digit' : undefined,\r\n            //     hour12: !components.useTwentyfourHour,\r\n            //   };\r\n            // }\r\n            if ((_a = this._display) === null || _a === void 0 ? void 0 : _a.isVisible) {\r\n                this._display._update('all');\r\n            }\r\n            return config;\r\n        }\r\n        /**\r\n         * Checks if an input field is being used, attempts to locate one and sets an\r\n         * event listener if found.\r\n         * @private\r\n         */\r\n        _initializeInput() {\r\n            if (this._element.tagName == 'INPUT') {\r\n                this._input = this._element;\r\n            }\r\n            else {\r\n                let query = this._element.dataset.tdTargetInput;\r\n                if (query == undefined || query == 'nearest') {\r\n                    this._input = this._element.querySelector('input');\r\n                }\r\n                else {\r\n                    this._input = this._element.querySelector(query);\r\n                }\r\n            }\r\n            if (!this._input)\r\n                return;\r\n            this._input.addEventListener('change', this._inputChangeEvent);\r\n            if (this._options.allowInputToggle) {\r\n                this._input.addEventListener('click', this._toggleClickEvent);\r\n            }\r\n            if (this._input.value) {\r\n                const converted = OptionConverter._dateConversion(this._input.value, 'input field');\r\n                if (converted !== undefined)\r\n                    this.dates._setValue(converted);\r\n            }\r\n            if (this._input.value) { //***\r\n                this._input.dispatchEvent(new Event('change'));\r\n            }\r\n        }\r\n        /**\r\n         * Attempts to locate a toggle for the picker and sets an event listener\r\n         * @private\r\n         */\r\n        _initializeToggle() {\r\n            if (this._options.display.inline)\r\n                return;\r\n            let query = this._element.dataset.tdTargetToggle;\r\n            if (query == 'nearest') {\r\n                query = '[data-td-toggle=\"datetimepicker\"]';\r\n            }\r\n            this._toggle =\r\n                query == undefined ? this._element : this._element.querySelector(query);\r\n            this._toggle.addEventListener('click', this._toggleClickEvent);\r\n        }\r\n        /**\r\n         * If the option is enabled this will render the clock view after a date pick.\r\n         * @param e change event\r\n         * @private\r\n         */\r\n        _handleAfterChangeEvent(e) {\r\n            var _a, _b;\r\n            if (\r\n            // options is disabled\r\n            !this._options.promptTimeOnDateChange ||\r\n                this._options.display.inline ||\r\n                this._options.display.sideBySide ||\r\n                // time is disabled\r\n                !this._display._hasTime ||\r\n                (\r\n                // clock component is already showing\r\n                (_a = this._display.widget) === null || _a === void 0 ? void 0 : _a.getElementsByClassName(Namespace.css.show)[0].classList.contains(Namespace.css.timeContainer)))\r\n                return;\r\n            // First time ever. If useCurrent option is set to true (default), do nothing\r\n            // because the first date is selected automatically.\r\n            // or date didn't change (time did) or date changed because time did.\r\n            if ((!e.oldDate && this._options.useCurrent) ||\r\n                (e.oldDate && ((_b = e.date) === null || _b === void 0 ? void 0 : _b.isSame(e.oldDate)))) {\r\n                return;\r\n            }\r\n            clearTimeout(this._currentPromptTimeTimeout);\r\n            this._currentPromptTimeTimeout = setTimeout(() => {\r\n                if (this._display.widget) {\r\n                    this._action.do({\r\n                        currentTarget: this._display.widget.querySelector(`.${Namespace.css.switch} div`),\r\n                    }, ActionTypes.togglePicker);\r\n                }\r\n            }, this._options.promptTimeOnDateChangeTransitionDelay);\r\n        }\r\n    }\n\n    var _tempusDominus = {\n        __proto__: null,\n        TempusDominus: TempusDominus,\n        Namespace: Namespace,\n        DefaultOptions: DefaultOptions,\n        DateTime: DateTime\n    };\n\n    /*global $ */\n\n    //window.tempusDominus.Namespace.Events\n    const tempusDominus = _tempusDominus; //***\n\n    tempusDominus.jQueryInterface = function (option, argument) {\n      if (this.length === 1) {\n        return tempusDominus.jQueryHandleThis(this, option, argument);\n      }\n      // \"this\" is jquery here\n      return this.each(function () {\n        tempusDominus.jQueryHandleThis(this, option, argument);\n      });\n    };\n\n    tempusDominus.jQueryHandleThis = function (me, option, argument) {\n      let data = $__default['default'](me).data(tempusDominus.Namespace.dataKey);\n      if (typeof option === 'object') {\n        option = $__default['default'].extend({}, tempusDominus.DefaultOptions, option); //***\n      }\n\n      if (!data) {\n        data = new tempusDominus.TempusDominus($__default['default'](me)[0], option);\n        $__default['default'](me).data(tempusDominus.Namespace.dataKey, data);\n      }\n\n      if (typeof option === 'string') {\n        if (data[option] === undefined) {\n          throw new Error(`No method named \"${option}\"`);\n        }\n        if (argument === undefined) {\n          return data[option]();\n        } else {\n          if (option === 'date') {\n            data.isDateUpdateThroughDateOptionFromClientCode = true;\n          }\n          const ret = data[option](argument);\n          data.isDateUpdateThroughDateOptionFromClientCode = false;\n          return ret;\n        }\n      }\n    };\n\n    tempusDominus.getSelectorFromElement = function ($element) {\n      let selector = $element.data('target'),\n        $selector;\n\n      if (!selector) {\n        selector = $element.attr('href') || '';\n        selector = /^#[a-z]/i.test(selector) ? selector : null;\n      }\n      $selector = $__default['default'](selector);\n      if ($selector.length === 0) {\n        return $element;\n      }\n\n      if (!$selector.data(tempusDominus.Namespace.dataKey)) {\n        $__default['default'].extend({}, $selector.data(), $__default['default'](this).data());\n      }\n\n      return $selector;\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n    //*** $(document)\n    //   .on(\n    //     `click${tempusDominus.Namespace.Events.key}.data-api`,\n    //     `[data-td-toggle=\"${tempusDominus.Namespace.DATA_KEY}\"]`, //***\n    //     function () {\n    //       const $originalTarget = $(this),\n    //         $target = tempusDominus.getSelectorFromElement($originalTarget),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (\n    //         config.options.allowInputToggle && //***\n    //         $originalTarget.is(`input[data-td-toggle=\"${tempusDominus.Namespace.DATA_KEY}\"]`) //***\n    //       ) {\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'toggle');\n    //     }\n    //   )\n    //   .on(\n    //     tempusDominus.Namespace.Events.change,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this));\n    //       if ($target.length === 0 || event.isInit) {\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, '_change', event);\n    //     }\n    //   )\n    //   .on(\n    //     tempusDominus.Namespace.Events.blur,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this)),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (config.options.debug || window.debug) { //***\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'hide', event);\n    //     }\n    //   )\n    //   /*.on(tempusDominus.Namespace.Events.keydown, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n    //     const $target = tempusDominus.getSelectorFromElement($(this));\n    //     if ($target.length === 0) {\n    //       return;\n    //     }\n    //     tempusDominus.jQueryInterface.call($target, '_keydown', event);\n    //   })\n    //   .on(tempusDominus.Namespace.Events.keyup, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n    //     const $target = tempusDominus.getSelectorFromElement($(this));\n    //     if ($target.length === 0) {\n    //       return;\n    //     }\n    //     tempusDominus.jQueryInterface.call($target, '_keyup', event);\n    //   })*/\n    //   .on(\n    //     tempusDominus.Namespace.Events.focus,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this)),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (!config.options.allowInputToggle) { //***\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'show', event);\n    //     }\n    //   );\n    const name = 'tempusDominus';\n    $__default['default'].fn[name] = tempusDominus.jQueryInterface;\n    $__default['default'].fn[name].Constructor = tempusDominus.TempusDominus;\n    $__default['default'].fn[name].noConflict = function () {\n      $__default['default'].fn[name] = $__default['default'].fn[name];\n      return tempusDominus.jQueryInterface;\n    };\n\n    return tempusDominus;\n\n}(jQuery, luxon, Popper));\n//# sourceMappingURL=tempus-dominus.js.map\n"]}